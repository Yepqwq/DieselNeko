import { Adapter, Context, HTTP, Logger, Schema, Universal } from '@satorijs/core';
import { SatoriBot } from './bot';
export declare class SatoriAdapter<C extends Context = Context> extends Adapter.WsClientBase<C, SatoriBot<C>> {
    ctx: C;
    config: SatoriAdapter.Config;
    static schema: any;
    static reusable: boolean;
    static inject: string[];
    http: HTTP;
    logger: Logger;
    private _status;
    private sequence?;
    private timeout?;
    constructor(ctx: C, config: SatoriAdapter.Config);
    getActive(): boolean;
    setStatus(status: Universal.Status, error?: Error): void;
    prepare(): Promise<WebSocket>;
    getBot(platform: string, selfId: string, login: Universal.Login): SatoriBot<C>;
    accept(): void;
    start(): Promise<void>;
    stop(): Promise<void>;
}
export declare namespace SatoriAdapter {
    interface Config extends Adapter.WsClientConfig {
        endpoint: string;
        token?: string;
    }
    const Config: Schema<Config>;
}
