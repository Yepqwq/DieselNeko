import { Context, h, MessageEncoder, Schema } from '@satorijs/core';
import { KookBot } from './bot';
import * as Kook from './types';
export declare function isDirectChannel(channelId: string): boolean;
export declare class KookMessageEncoder<C extends Context = Context> extends MessageEncoder<C, KookBot<C>> {
    private path;
    private params;
    private additional;
    private textBuffer;
    private cardBuffer;
    prepare(): Promise<void>;
    post(type: Kook.Type, content: string): Promise<void>;
    private transformUrl;
    flushText(): void;
    flush(forceCard?: boolean): Promise<void>;
    visit(element: h): Promise<void>;
}
export declare namespace KookMessageEncoder {
    type HandleMixedContent = 'card' | 'separate' | 'mixed';
    interface Config {
        handleMixedContent?: HandleMixedContent;
    }
    const Config: Schema<KookMessageEncoder.Config>;
}
