import { Context, Session, Universal } from '@satorijs/core';
import { DiscordBot } from './bot';
import * as Discord from './types';
export * from './types';
export declare const sanitize: (val: string) => string;
export declare const sanitizeCode: (val: string) => string;
export declare const decodeUser: (user: Discord.User) => Universal.User;
export declare const decodeGuildMember: (member: Partial<Discord.GuildMember>) => Universal.GuildMember;
export declare const decodeGuild: (data: Discord.Guild) => Universal.Guild;
export declare const decodeChannel: (data: Discord.Channel) => Universal.Channel;
export declare const decodeRole: (role: Discord.Role) => Universal.GuildRole;
export declare const encodeRole: (role: Partial<Universal.GuildRole>) => Partial<Discord.Role>;
export declare function decodeMessage(bot: DiscordBot, data: Discord.Message, message: Universal.Message, payload?: Universal.MessageLike, details?: boolean): Promise<Universal.Message>;
export declare function setupMessageGuildId(session: Session, guildId: string): void;
export declare function adaptSession<C extends Context>(bot: DiscordBot<C>, input: Discord.Gateway.Payload): Promise<C[typeof import("cordis").Context.session]>;
export declare const encodeCommand: (cmd: Universal.Command) => Discord.ApplicationCommand.Params.Create;
export declare function encodeCommandOptions(cmd: Universal.Command): Discord.ApplicationCommand.Option[];
