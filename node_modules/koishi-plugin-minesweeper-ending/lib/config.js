"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mineUsage = exports.MineConfig = void 0;
const koishi_1 = require("koishi");
const fs_1 = require("fs");
const path_1 = require("path");
exports.MineConfig = koishi_1.Schema.intersect([
    koishi_1.Schema.object({
        MinHintTime: koishi_1.Schema.number().default(15000).description("获取提示的冷却时间"),
        wrongSleep: koishi_1.Schema.number().default(5000).description("猜错后的冷却时间"),
        DifficultyLevel: koishi_1.Schema.percent().role('slider').default(0.5).description("难度等级,0最简单，1最难"),
        InitFlag: koishi_1.Schema.boolean().default(true).description("残局初始化插旗"),
        InitOpen: koishi_1.Schema.boolean().default(true).description("残局初始化插旗"),
        Guess: koishi_1.Schema.boolean().default(true).description("残局有猜，（推荐）")
    }).description("残局玩法设置"),
    koishi_1.Schema.object({
        EntryFee: koishi_1.Schema.number().default(10).description("挑战模式门票费用"),
    }),
    koishi_1.Schema.object({
        theme: koishi_1.Schema.string().default('chocolate').description("扫雷的皮肤,目前自带了 wom 和 chocolate,可在模块目录中自定义皮肤"),
        colorForSerialNum: koishi_1.Schema.string().default('#000000ff').description("方块序列号的颜色,格式：十六进制字符串")
    }).description("主题设置"),
    koishi_1.Schema.object({
        width: koishi_1.Schema.number().default(5).description("宽度"),
        height: koishi_1.Schema.number().default(5).description("高度"),
        mines: koishi_1.Schema.number().default(10).description("雷数"),
    }).description("残局地图设置, 应当使方块数小于100, 否则无法进行游戏操作"),
    koishi_1.Schema.object({
        widthC: koishi_1.Schema.number().default(8).description("宽度"),
        heightC: koishi_1.Schema.number().default(8).description("高度"),
        minesC: koishi_1.Schema.number().default(20).description("雷数"),
    }).description("挑战模式地图设置, 应当使方块数小于100, 否则无法进行游戏操作")
]);
exports.mineUsage = (0, fs_1.readFileSync)((0, path_1.resolve)(__dirname, '../readme.md'));
