var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name2 in all)
    __defProp(target, name2, { get: all[name2], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  Config: () => Config,
  apply: () => apply,
  axlmlyrpg: () => axlmlyrpg,
  inject: () => inject,
  name: () => name,
  usage: () => usage
});
module.exports = __toCommonJS(src_exports);
var import_koishi2 = require("koishi");

// src/database.ts
var import_koishi = require("koishi");

// src/index/level.ts
var levelInfos = [
  { level: 0, level_line: 100 },
  { level: 1, level_line: 120 },
  { level: 2, level_line: 220 },
  { level: 3, level_line: 350 },
  { level: 4, level_line: 545 },
  { level: 5, level_line: 837 },
  { level: 6, level_line: 1275 },
  { level: 7, level_line: 1932 },
  { level: 8, level_line: 2918 },
  { level: 9, level_line: 4397 },
  { level: 10, level_line: 6615 },
  { level: 11, level_line: 9942 },
  { level: 12, level_line: 14933 },
  { level: 13, level_line: 22419 },
  { level: 14, level_line: 33648 },
  { level: 15, level_line: 50492 },
  { level: 16, level_line: 75758 },
  { level: 17, level_line: 113657 },
  { level: 18, level_line: 170505 },
  { level: 19, level_line: 255777 },
  { level: 20, level_line: 383685 },
  { level: 21, level_line: 575547 },
  { level: 22, level_line: 863340 },
  { level: 23, level_line: 1295030 },
  { level: 24, level_line: 1942565 },
  { level: 25, level_line: 2913867 },
  { level: 26, level_line: 4370820 },
  { level: 27, level_line: 6556250 },
  { level: 28, level_line: 9834395 },
  { level: 29, level_line: 14751612 },
  { level: 30, level_line: 22127438 },
  { level: 31, level_line: 33191177 },
  { level: 32, level_line: 49786785 },
  { level: 33, level_line: 74680197 },
  { level: 34, level_line: 112020315 },
  { level: 35, level_line: 168030492 },
  { level: 36, level_line: 252045758 },
  { level: 37, level_line: 378068657 },
  { level: 38, level_line: 567103005 },
  { level: 39, level_line: 850654527 },
  { level: 40, level_line: 1275981810 },
  { level: 41, level_line: 1913972735 },
  { level: 42, level_line: 2870959122 },
  { level: 43, level_line: 4306438703 },
  { level: 44, level_line: 6459658074 },
  { level: 45, level_line: 9689487131 },
  { level: 46, level_line: 14534230716 },
  { level: 47, level_line: 21801346094 },
  { level: 48, level_line: 32702019161 },
  { level: 49, level_line: 49053028761 },
  { level: 50, level_line: 73579543161 },
  { level: 51, level_line: 110369314761 },
  { level: 52, level_line: 165553972161 },
  { level: 53, level_line: 248330958261 },
  { level: 54, level_line: 372496437411 },
  { level: 55, level_line: 558744656136 },
  { level: 56, level_line: 838116984224 },
  { level: 57, level_line: 1257175476356 },
  { level: 58, level_line: 1885763214554 },
  { level: 59, level_line: 2828644821851 },
  { level: 60, level_line: 4242967232796 },
  { level: 61, level_line: 6364450849214 },
  { level: 62, level_line: 9546676273841 },
  { level: 63, level_line: 14320014410781 },
  { level: 64, level_line: 21480021616191 },
  { level: 65, level_line: 32220032424306 },
  { level: 66, level_line: 48330048636479 },
  { level: 67, level_line: 72495072954738 },
  { level: 68, level_line: 108742609432127 },
  { level: 69, level_line: 163113914148210 },
  { level: 70, level_line: 244670871222335 },
  { level: 71, level_line: 367006306833522 },
  { level: 72, level_line: 550509460250303 },
  { level: 73, level_line: 825764190375474 },
  { level: 74, level_line: 1238646285563231 },
  { level: 75, level_line: 1857969428344866 },
  { level: 76, level_line: 2786954142517319 },
  { level: 77, level_line: 4180431213775998 },
  { level: 78, level_line: 6270646820664017 },
  { level: 79, level_line: 9405970230996046 },
  { level: 80, level_line: 14108955346494088 },
  { level: 81, level_line: 21163433019741150 },
  { level: 82, level_line: 31745149529611748 },
  { level: 83, level_line: 47617724294417650 },
  { level: 84, level_line: 71426586441626500 },
  { level: 85, level_line: 107139879662439760 },
  { level: 86, level_line: 160709819493659680 },
  { level: 87, level_line: 241064729240489570 },
  { level: 88, level_line: 361597093860734340 },
  { level: 89, level_line: 542395640791101500 },
  { level: 90, level_line: 813593461186652300 },
  { level: 91, level_line: 1220390191779978500 },
  { level: 92, level_line: 1830585287669968e3 },
  { level: 93, level_line: 2745877931504952e3 },
  { level: 94, level_line: 4118816897257428e3 },
  { level: 95, level_line: 6178225345886142e3 },
  { level: 96, level_line: 9267338018829214e3 },
  { level: 97, level_line: 1390100702824382e4 },
  { level: 98, level_line: 2085151054236573e4 },
  { level: 99, level_line: 31277265813548593e3 },
  { level: 100, level_line: 4691589872032289e4 }
];

// src/index/god.ts
var godJson = [
  {
    "id": 1,
    "godhead": "火神",
    "name": "露努努",
    "nameinfo": "",
    "healthpoint": 1,
    "maxmagicpoint": 1,
    "sturdypoint": 1,
    "stamina": 1,
    "dexterity": 1,
    "spiritualintuition": 1,
    "luckyvalue": 1,
    "intelligence": 1,
    "faith": 1,
    "attack": 1,
    "armourclass": 1,
    "physicaldefense": 1,
    "magicdefense": 1
  },
  {
    "id": 2,
    "godhead": "水神",
    "name": "卡塔米修斯",
    "nameinfo": "",
    "healthpoint": 1,
    "maxmagicpoint": 1,
    "sturdypoint": 1,
    "stamina": 1,
    "dexterity": 1,
    "spiritualintuition": 1,
    "luckyvalue": 1,
    "intelligence": 1,
    "faith": 1,
    "attack": 1,
    "armourclass": 1,
    "physicaldefense": 1,
    "magicdefense": 1
  },
  {
    "id": 3,
    "godhead": "风神",
    "name": "卡卡多贡",
    "nameinfo": "",
    "healthpoint": 1,
    "maxmagicpoint": 1,
    "sturdypoint": 1,
    "stamina": 1,
    "dexterity": 1,
    "spiritualintuition": 1,
    "luckyvalue": 1,
    "intelligence": 1,
    "faith": 1,
    "attack": 1,
    "armourclass": 1,
    "physicaldefense": 1,
    "magicdefense": 1
  },
  {
    "id": 4,
    "godhead": "草神",
    "name": "卡卡米",
    "nameinfo": "",
    "healthpoint": 1,
    "maxmagicpoint": 1,
    "sturdypoint": 1,
    "stamina": 1,
    "dexterity": 1,
    "spiritualintuition": 1,
    "luckyvalue": 1,
    "intelligence": 1,
    "faith": 1,
    "attack": 1,
    "armourclass": 1,
    "physicaldefense": 1,
    "magicdefense": 1
  },
  {
    "id": 5,
    "godhead": "雷神",
    "name": "难夜",
    "nameinfo": "",
    "healthpoint": 1,
    "maxmagicpoint": 1,
    "sturdypoint": 1,
    "stamina": 1,
    "dexterity": 1,
    "spiritualintuition": 1,
    "luckyvalue": 1,
    "intelligence": 1,
    "faith": 1,
    "attack": 1,
    "armourclass": 1,
    "physicaldefense": 1,
    "magicdefense": 1
  },
  {
    "id": 6,
    "godhead": "钢神",
    "name": "格莱米欧斯",
    "nameinfo": "",
    "healthpoint": 1,
    "maxmagicpoint": 1,
    "sturdypoint": 1,
    "stamina": 1,
    "dexterity": 1,
    "spiritualintuition": 1,
    "luckyvalue": 1,
    "intelligence": 1,
    "faith": 1,
    "attack": 1,
    "armourclass": 1,
    "physicaldefense": 1,
    "magicdefense": 1
  },
  {
    "id": 7,
    "godhead": "光神",
    "name": "圣莱尔",
    "nameinfo": "",
    "healthpoint": 1,
    "maxmagicpoint": 1,
    "sturdypoint": 1,
    "stamina": 1,
    "dexterity": 1,
    "spiritualintuition": 1,
    "luckyvalue": 1,
    "intelligence": 1,
    "faith": 1,
    "attack": 1,
    "armourclass": 1,
    "physicaldefense": 1,
    "magicdefense": 1
  }
];

// src/index/race.ts
var raceJson = [
  //实例
  // {
  //   "id": 1,
  //   "name": "人类",
  //   "innateskill1": "", //天赋名称
  //   "innateskill1info1": "", //天赋描述
  //   "innateskill2": "",
  //   "innateskill1info2": "",
  //   "innateskill3": "",
  //   "innateskill1info3": "",
  //   "healthpoint": 1, //生命值
  //   "maxmagicpoint": 1, //最大魔力值
  //   "sturdypoint": 1, //体质
  //   "stamina": 1, //耐力
  //   "dexterity": 1, //敏捷
  //   "spiritualintuition": 1, //灵性直觉
  //   "luckyvalue": 1, //幸运值
  //   "intelligence": 1, //智力
  //   "faith": 1, //信仰
  //   "attack": 1, //力量
  //   "armourclass": 1, //护甲值
  //   "physicaldefense": 1, //物理抗性
  //   "magicdefense": 1, //魔法抗性
  // },
  {
    "id": 1,
    "name": "艾尔多利亚人",
    "innateskill1": "精湛的工艺技能",
    "innateskill1info1": "艾尔多利亚人以精湛的工艺技能闻名，他们擅长制造高质量的武器、护甲和艺术品。",
    "innateskill2": "自然亲和",
    "innateskill1info2": "艾尔多利亚人与自然和谐相处，能够与植物和动物建立深厚的联系，从中获得力量和智慧。",
    "innateskill3": "优越的战略洞察力",
    "innateskill1info3": "艾尔多利亚人在战略和战术上有出色的洞察力，能够迅速理解战场的局势并作出正确的决策。",
    "healthpoint": 100,
    "maxmagicpoint": 30,
    "sturdypoint": 10,
    "stamina": 5,
    "dexterity": 5,
    "spiritualintuition": 10,
    "luckyvalue": 5,
    "intelligence": 15,
    "faith": 20,
    "attack": 10,
    "armourclass": 5,
    "physicaldefense": 10,
    "magicdefense": 15
  },
  {
    "id": 2,
    "name": "瓦洛利亚精灵",
    "innateskill1": "自然灵通",
    "innateskill1info1": "瓦洛利亚精灵与自然息息相关，他们具有与自然生物交流的能力，能够理解和影响自然的力量。",
    "innateskill2": "精灵优雅",
    "innateskill1info2": "瓦洛利亚精灵天生优雅灵动，身手敏捷，能够在森林和山脉中迅速穿行。",
    "innateskill3": "植物亲和",
    "innateskill1info3": "瓦洛利亚精灵对植物有着特殊的亲和力，能够促进植物生长和治愈受损的植物。",
    "healthpoint": 100,
    "maxmagicpoint": 100,
    "sturdypoint": 5,
    "stamina": 10,
    "dexterity": 10,
    "spiritualintuition": 5,
    "luckyvalue": 5,
    "intelligence": 10,
    "faith": 20,
    "attack": 5,
    "armourclass": 5,
    "physicaldefense": 5,
    "magicdefense": 5
  },
  {
    "id": 3,
    "name": "德拉肯海姆人",
    "innateskill1": "海洋精神",
    "innateskill1info1": "德拉肯海姆人与海洋息息相关，他们拥有超凡的海洋精神，能够在水下游弋自如。",
    "innateskill2": "水之祝福",
    "innateskill1info2": "德拉肯海姆人天生受到水之祝福，能够从水中汲取力量并治愈伤病。",
    "innateskill3": "渔猎技艺",
    "innateskill1info3": "德拉肯海姆人拥有卓越的渔猎技艺，能够在海洋中捕捞出丰富的食物资源。",
    "healthpoint": 200,
    "maxmagicpoint": 10,
    "sturdypoint": 10,
    "stamina": 5,
    "dexterity": 10,
    "spiritualintuition": 0,
    "luckyvalue": 5,
    "intelligence": 0,
    "faith": 10,
    "attack": 5,
    "armourclass": 5,
    "physicaldefense": 5,
    "magicdefense": 5
  },
  {
    "id": 4,
    "name": "卢米娜拉人",
    "innateskill1": "光之护佑",
    "innateskill1info1": "卢米娜拉人天生受到光明力量的护佑，能够在危机时刻恢复体力。",
    "innateskill2": "灵巧手艺",
    "innateskill1info2": "卢米娜拉人以精湛的手艺和灵巧的双手著称，能够制造出精美且实用的物品。",
    "innateskill3": "精神韧性",
    "innateskill1info3": "卢米娜拉人的精神韧性极强，能够在极端压力下保持冷静和清醒。",
    "healthpoint": 100,
    "maxmagicpoint": 30,
    "sturdypoint": 5,
    "stamina": 5,
    "dexterity": 5,
    "spiritualintuition": 5,
    "luckyvalue": 10,
    "intelligence": 5,
    "faith": 15,
    "attack": 10,
    "armourclass": 10,
    "physicaldefense": 5,
    "magicdefense": 5
  },
  {
    "id": 5,
    "name": "埃弗伦高等精灵",
    "innateskill1": "魔法亲和",
    "innateskill1info1": "埃弗伦高等精灵天生对魔法有着极高的亲和力，能够轻松掌握各种魔法技巧。",
    "innateskill2": "优雅敏捷",
    "innateskill1info2": "埃弗伦高等精灵拥有出众的身手和优雅的动作，使他们在战斗和探索中占据优势。",
    "innateskill3": "精神感知",
    "innateskill1info3": "埃弗伦高等精灵对环境和敌人的精神波动有着敏锐的感知，能够预见潜在的危险。",
    "healthpoint": 100,
    "maxmagicpoint": 100,
    "sturdypoint": 5,
    "stamina": 5,
    "dexterity": 10,
    "spiritualintuition": 10,
    "luckyvalue": 5,
    "intelligence": 25,
    "faith": 5,
    "attack": 5,
    "armourclass": 5,
    "physicaldefense": 5,
    "magicdefense": 5
  },
  {
    "id": 6,
    "name": "温德米尔矮人",
    "innateskill1": "铁血之躯",
    "innateskill1info1": "温德米尔矮人的身体如同钢铁一般强壮，能够承受巨大的打击。",
    "innateskill2": "矿洞智慧",
    "innateskill1info2": "温德米尔矮人在矿石和宝石的辨别和采集上有着无与伦比的智慧。",
    "innateskill3": "战斗本能",
    "innateskill1info3": "温德米尔矮人在战斗中能够迅速做出反应，展现出非凡的战斗技巧。",
    "healthpoint": 300,
    "maxmagicpoint": 0,
    "sturdypoint": 15,
    "stamina": 10,
    "dexterity": 10,
    "spiritualintuition": 10,
    "luckyvalue": 0,
    "intelligence": 5,
    "faith": 0,
    "attack": 10,
    "armourclass": 10,
    "physicaldefense": 10,
    "magicdefense": 10
  },
  {
    "id": 7,
    "name": "提拉索恩人",
    "innateskill1": "龙之力",
    "innateskill1info1": "提拉索恩人天生强健，身体蕴含着龙族的无穷力量。",
    "innateskill2": "龙之护盾",
    "innateskill1info2": "提拉索恩人可以召唤出龙之护盾，抵御任何威胁，保护自己和同伴。",
    "innateskill3": "龙之感知",
    "innateskill1info3": "提拉索恩人拥有龙的敏锐感知能力，能够预知危险并发现隐藏的真相。",
    "healthpoint": 300,
    "maxmagicpoint": 0,
    "sturdypoint": 15,
    "stamina": 15,
    "dexterity": 0,
    "spiritualintuition": 15,
    "luckyvalue": 0,
    "intelligence": 5,
    "faith": 0,
    "attack": 15,
    "armourclass": 10,
    "physicaldefense": 10,
    "magicdefense": 10
  },
  {
    "id": 8,
    "name": "维尔卡瑞尔精灵",
    "innateskill1": "自然之力",
    "innateskill1info1": "维尔卡瑞尔精灵天生与自然融为一体，他们可以利用自然的力量进行战斗和防御。",
    "innateskill2": "隐秘行者",
    "innateskill1info2": "维尔卡瑞尔精灵擅长在森林和其他自然环境中隐藏自己，敌人很难发现他们的踪迹。",
    "innateskill3": "自然治愈",
    "innateskill1info3": "维尔卡瑞尔精灵能够通过自然的力量迅速恢复自身和盟友的伤势。",
    "healthpoint": 100,
    "maxmagicpoint": 10,
    "sturdypoint": 5,
    "stamina": 5,
    "dexterity": 10,
    "spiritualintuition": 15,
    "luckyvalue": 15,
    "intelligence": 15,
    "faith": 20,
    "attack": 10,
    "armourclass": 5,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 9,
    "name": "艾尔法德龙裔",
    "innateskill1": "龙之力",
    "innateskill1info1": "艾尔法德龙裔拥有远古巨龙的血脉，体内蕴藏着强大的龙之力量，使他们在战斗中无往不利。",
    "innateskill2": "龙鳞护甲",
    "innateskill1info2": "艾尔法德龙裔的皮肤如同龙鳞般坚韧，能够抵挡大部分物理和魔法攻击。",
    "innateskill3": "龙焰吐息",
    "innateskill1info3": "艾尔法德龙裔可以喷吐出炽热的龙焰，对敌人造成毁灭性的伤害。",
    "healthpoint": 300,
    "maxmagicpoint": 0,
    "sturdypoint": 10,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 5,
    "faith": 10,
    "attack": 20,
    "armourclass": 15,
    "physicaldefense": 20,
    "magicdefense": 20
  },
  {
    "id": 10,
    "name": "瑟莱斯月影",
    "innateskill1": "月光庇护",
    "innateskill1info1": "瑟莱斯月影受到月光的庇护，夜晚的战斗力大幅提升，且能够在黑暗中看得清楚。",
    "innateskill2": "月神祝福",
    "innateskill1info2": "瑟莱斯月影能得到月神的祝福，使他们在战斗中更加灵活和精准。",
    "innateskill3": "影舞步",
    "innateskill1info3": "瑟莱斯月影擅长使用影舞步，在战斗中可以迅速移动，使敌人难以攻击到他们。",
    "healthpoint": 100,
    "maxmagicpoint": 0,
    "sturdypoint": 15,
    "stamina": 0,
    "dexterity": 15,
    "spiritualintuition": 20,
    "luckyvalue": 10,
    "intelligence": 10,
    "faith": 0,
    "attack": 5,
    "armourclass": 10,
    "physicaldefense": 5,
    "magicdefense": 5
  },
  {
    "id": 11,
    "name": "菲尼克斯火灵",
    "innateskill1": "火焰掌控",
    "innateskill1info1": "菲尼克斯火灵可以自由掌控火焰，他们的攻击带有火焰伤害，能燃烧敌人。",
    "innateskill2": "火之护盾",
    "innateskill1info2": "菲尼克斯火灵可以召唤火焰护盾来保护自己，减免所受的伤害。",
    "innateskill3": "烈焰新生",
    "innateskill1info3": "菲尼克斯火灵在濒死时有一定几率从烈焰中重生，恢复部分生命值。",
    "healthpoint": 100,
    "maxmagicpoint": 10,
    "sturdypoint": 5,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 10,
    "luckyvalue": 5,
    "intelligence": 15,
    "faith": 10,
    "attack": 10,
    "armourclass": 20,
    "physicaldefense": 0,
    "magicdefense": 20
  },
  {
    "id": 12,
    "name": "艾瑞达光明使者",
    "innateskill1": "光明之力",
    "innateskill1info1": "艾瑞达光明使者拥有强大的光明力量，能够净化邪恶并治愈盟友。",
    "innateskill2": "圣光庇护",
    "innateskill1info2": "艾瑞达光明使者受到圣光的庇护，能够减少所受的魔法伤害。",
    "innateskill3": "神圣审判",
    "innateskill1info3": "艾瑞达光明使者能够发动神圣审判，对邪恶生物造成巨大的伤害。",
    "healthpoint": 250,
    "maxmagicpoint": 5,
    "sturdypoint": 5,
    "stamina": 5,
    "dexterity": 5,
    "spiritualintuition": 5,
    "luckyvalue": 5,
    "intelligence": 5,
    "faith": 20,
    "attack": 5,
    "armourclass": 10,
    "physicaldefense": 5,
    "magicdefense": 10
  },
  {
    "id": 13,
    "name": "艾尔瑟瑞尔龙人",
    "innateskill1": "龙鳞护甲",
    "innateskill1info1": "艾尔瑟瑞尔龙人拥有坚硬的龙鳞，能够极大地减免物理伤害。",
    "innateskill2": "龙息喷吐",
    "innateskill1info2": "艾尔瑟瑞尔龙人能够喷出炽热的龙息，对敌人造成火焰伤害。",
    "innateskill3": "龙族飞行",
    "innateskill1info3": "艾尔瑟瑞尔龙人能够短暂飞行，迅速移动到战场的任意位置。",
    "healthpoint": 300,
    "maxmagicpoint": 0,
    "sturdypoint": 10,
    "stamina": 0,
    "dexterity": 10,
    "spiritualintuition": 5,
    "luckyvalue": 10,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 20,
    "physicaldefense": 20,
    "magicdefense": 0
  },
  {
    "id": 14,
    "name": "纳尔希尔精灵",
    "innateskill1": "森林守护",
    "innateskill1info1": "纳尔希尔精灵与森林有着深厚的联系，能够在森林中获得额外的防御和恢复。",
    "innateskill2": "自然之箭",
    "innateskill1info2": "纳尔希尔精灵能够射出充满自然能量的箭矢，对敌人造成额外的魔法伤害。",
    "innateskill3": "精灵步伐",
    "innateskill1info3": "纳尔希尔精灵步伐轻盈，能够迅速躲避敌人的攻击并进行反击。",
    "healthpoint": 100,
    "maxmagicpoint": 5,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 10,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 10,
    "faith": 0,
    "attack": 10,
    "armourclass": 15,
    "physicaldefense": 15,
    "magicdefense": 15
  },
  {
    "id": 15,
    "name": "瓦洛斯兽人",
    "innateskill1": "野性之力",
    "innateskill1info1": "瓦洛斯兽人体内蕴含着无穷的野性力量，能够在战斗中爆发出惊人的破坏力。",
    "innateskill2": "狂怒",
    "innateskill1info2": "瓦洛斯兽人在受到攻击时进入狂怒状态，提高攻击力和速度。",
    "innateskill3": "兽人皮肤",
    "innateskill1info3": "瓦洛斯兽人的皮肤厚实，能够减少受到的物理伤害。",
    "healthpoint": 200,
    "maxmagicpoint": 0,
    "sturdypoint": 20,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 15,
    "armourclass": 15,
    "physicaldefense": 15,
    "magicdefense": 0
  },
  {
    "id": 16,
    "name": "德尔菲亚龙人",
    "innateskill1": "龙鳞护甲",
    "innateskill1info1": "德尔菲亚龙人拥有坚硬的龙鳞，能够极大地减免物理伤害。",
    "innateskill2": "龙息喷吐",
    "innateskill1info2": "德尔菲亚龙人能够喷出炽热的龙息，对敌人造成火焰伤害。",
    "innateskill3": "龙族飞行",
    "innateskill1info3": "德尔菲亚龙人能够短暂飞行，迅速移动到战场的任意位置。",
    "healthpoint": 400,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 10,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 5,
    "faith": 0,
    "attack": 5,
    "armourclass": 20,
    "physicaldefense": 20,
    "magicdefense": 5
  },
  {
    "id": 17,
    "name": "卢米纳拉夜精灵",
    "innateskill1": "暗影隐匿",
    "innateskill1info1": "卢米纳拉夜精灵能够在黑暗中隐藏自己，使敌人难以发现。",
    "innateskill2": "夜视",
    "innateskill1info2": "卢米纳拉夜精灵拥有在黑暗中清晰视物的能力。",
    "innateskill3": "月光祝福",
    "innateskill1info3": "卢米纳拉夜精灵在月光下获得额外的力量和速度。",
    "healthpoint": 200,
    "maxmagicpoint": 5,
    "sturdypoint": 5,
    "stamina": 5,
    "dexterity": 15,
    "spiritualintuition": 15,
    "luckyvalue": 5,
    "intelligence": 10,
    "faith": 5,
    "attack": 10,
    "armourclass": 10,
    "physicaldefense": 10,
    "magicdefense": 10
  },
  {
    "id": 18,
    "name": "埃尔洛希尔火精灵",
    "innateskill1": "火焰之心",
    "innateskill1info1": "埃尔洛希尔火精灵天生拥有火焰之心，能够操控火焰进行攻击。",
    "innateskill2": "燃烧之怒",
    "innateskill1info2": "埃尔洛希尔火精灵在受到攻击时能够激发内心的怒火，提升攻击力。",
    "innateskill3": "火焰护盾",
    "innateskill1info3": "埃尔洛希尔火精灵能够召唤火焰护盾，减少受到的物理伤害。",
    "healthpoint": 300,
    "maxmagicpoint": 20,
    "sturdypoint": 10,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 5,
    "intelligence": 0,
    "faith": 0,
    "attack": 25,
    "armourclass": 10,
    "physicaldefense": 15,
    "magicdefense": 0
  },
  {
    "id": 19,
    "name": "法尔尼尔风精灵",
    "innateskill1": "疾风步",
    "innateskill1info1": "法尔尼尔风精灵能够在战斗中迅速移动，闪避敌人的攻击。",
    "innateskill2": "风刃",
    "innateskill1info2": "法尔尼尔风精灵能够召唤锋利的风刃，对敌人造成切割伤害。",
    "innateskill3": "风之屏障",
    "innateskill1info3": "法尔尼尔风精灵能够召唤风之屏障，减少受到的魔法伤害。",
    "healthpoint": 100,
    "maxmagicpoint": 5,
    "sturdypoint": 5,
    "stamina": 10,
    "dexterity": 10,
    "spiritualintuition": 5,
    "luckyvalue": 10,
    "intelligence": 5,
    "faith": 0,
    "attack": 5,
    "armourclass": 5,
    "physicaldefense": 0,
    "magicdefense": 20
  },
  {
    "id": 20,
    "name": "瑟瑞尔水精灵",
    "innateskill1": "水之治愈",
    "innateskill1info1": "瑟瑞尔水精灵能够利用水元素治愈自身或队友的伤口。",
    "innateskill2": "冰冻之触",
    "innateskill1info2": "瑟瑞尔水精灵能够将水元素转化为冰冻之力，冻结敌人。",
    "innateskill3": "水遁",
    "innateskill1info3": "瑟瑞尔水精灵能够快速在水中移动，并在水中隐匿身形。",
    "healthpoint": 300,
    "maxmagicpoint": 20,
    "sturdypoint": 30,
    "stamina": 0,
    "dexterity": 15,
    "spiritualintuition": 5,
    "luckyvalue": 15,
    "intelligence": 0,
    "faith": 10,
    "attack": 0,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 21,
    "name": "克雷斯泰尔光精灵",
    "innateskill1": "光之祝福",
    "innateskill1info1": "克雷斯泰尔光精灵能够用光之力量祝福自己或队友，提升防御。",
    "innateskill2": "光之箭",
    "innateskill1info2": "克雷斯泰尔光精灵能够射出充满光之能量的箭矢，对敌人造成魔法伤害。",
    "innateskill3": "光之护盾",
    "innateskill1info3": "克雷斯泰尔光精灵能够召唤光之护盾，减少受到的物理伤害。",
    "healthpoint": 200,
    "maxmagicpoint": 0,
    "sturdypoint": 20,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 20,
    "luckyvalue": 20,
    "intelligence": 20,
    "faith": 5,
    "attack": 10,
    "armourclass": 10,
    "physicaldefense": 5,
    "magicdefense": 5
  },
  {
    "id": 22,
    "name": "阿尔特拉斯火精灵",
    "innateskill1": "烈焰之心",
    "innateskill1info1": "阿尔特拉斯火精灵拥有烈焰之心，能够操控火焰进行攻击。",
    "innateskill2": "火焰冲击",
    "innateskill1info2": "阿尔特拉斯火精灵能够释放火焰冲击波，对周围敌人造成火焰伤害。",
    "innateskill3": "火焰护盾",
    "innateskill1info3": "阿尔特拉斯火精灵能够召唤火焰护盾，减少受到的物理伤害。",
    "healthpoint": 200,
    "maxmagicpoint": 10,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 10,
    "intelligence": 20,
    "faith": 0,
    "attack": 15,
    "armourclass": 15,
    "physicaldefense": 15,
    "magicdefense": 5
  },
  {
    "id": 23,
    "name": "纳迦利斯冰精灵",
    "innateskill1": "冰霜之触",
    "innateskill1info1": "纳迦利斯冰精灵能够将水元素转化为冰霜之力，冻结敌人。",
    "innateskill2": "冰墙",
    "innateskill1info2": "纳迦利斯冰精灵能够召唤冰墙，阻挡敌人的攻击并减缓其速度。",
    "innateskill3": "冰之护盾",
    "innateskill1info3": "纳迦利斯冰精灵能够召唤冰之护盾，减少受到的物理伤害。",
    "healthpoint": 200,
    "maxmagicpoint": 0,
    "sturdypoint": 20,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 10,
    "intelligence": 20,
    "faith": 0,
    "attack": 30,
    "armourclass": 30,
    "physicaldefense": 20,
    "magicdefense": 0
  },
  {
    "id": 24,
    "name": "阿拉曼瑟暗精灵",
    "innateskill1": "暗影潜行",
    "innateskill1info1": "阿拉曼瑟暗精灵能够在黑暗中隐藏自己，使敌人难以发现。",
    "innateskill2": "暗影箭",
    "innateskill1info2": "阿拉曼瑟暗精灵能够射出充满暗影能量的箭矢，对敌人造成魔法伤害。",
    "innateskill3": "暗影护盾",
    "innateskill1info3": "阿拉曼瑟暗精灵能够召唤暗影护盾，减少受到的物理伤害。",
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 10,
    "stamina": 10,
    "dexterity": 15,
    "spiritualintuition": 15,
    "luckyvalue": 10,
    "intelligence": 15,
    "faith": 0,
    "attack": 15,
    "armourclass": 0,
    "physicaldefense": 15,
    "magicdefense": 5
  },
  {
    "id": 25,
    "name": "伊利尔雷巨人",
    "innateskill1": "雷霆之力",
    "innateskill1info1": "伊利尔雷巨人体内蕴含着强大的雷霆之力，能够在战斗中爆发出惊人的破坏力。",
    "innateskill2": "雷霆之怒",
    "innateskill1info2": "伊利尔雷巨人在受到攻击时进入雷霆之怒状态，提高攻击力和速度。",
    "innateskill3": "雷电护盾",
    "innateskill1info3": "伊利尔雷巨人能够召唤雷电护盾，减少受到的魔法伤害。",
    "healthpoint": 300,
    "maxmagicpoint": 0,
    "sturdypoint": 20,
    "stamina": 10,
    "dexterity": 10,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 15,
    "armourclass": 40,
    "physicaldefense": 0,
    "magicdefense": 20
  },
  {
    "id": 26,
    "name": "维拉尼亚火巨人",
    "innateskill1": "火焰之怒",
    "innateskill1info1": "维拉尼亚火巨人拥有强大的火焰之怒，能够在战斗中释放火焰攻击敌人。",
    "innateskill2": "炎爆",
    "innateskill1info2": "维拉尼亚火巨人能够召唤火焰爆炸，对周围的敌人造成大量火焰伤害。",
    "innateskill3": "火焰之盾",
    "innateskill1info3": "维拉尼亚火巨人能够召唤火焰之盾，减少受到的物理伤害。",
    "healthpoint": 500,
    "maxmagicpoint": 0,
    "sturdypoint": 20,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 5,
    "intelligence": 10,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 15,
    "magicdefense": 0
  },
  {
    "id": 27,
    "name": "西尔瓦林植物精灵",
    "innateskill1": "自然之力",
    "innateskill1info1": "西尔瓦林植物精灵能够召唤自然之力，快速恢复自身或队友的生命值。",
    "innateskill2": "荆棘之触",
    "innateskill1info2": "西尔瓦林植物精灵能够召唤荆棘攻击敌人，使其行动缓慢。",
    "innateskill3": "树皮护盾",
    "innateskill1info3": "西尔瓦林植物精灵能够将自身覆盖树皮，减少受到的物理伤害。",
    "healthpoint": 200,
    "maxmagicpoint": 5,
    "sturdypoint": 15,
    "stamina": 0,
    "dexterity": 15,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 20,
    "attack": 15,
    "armourclass": 40,
    "physicaldefense": 10,
    "magicdefense": 0
  },
  {
    "id": 28,
    "name": "阿斯特拉影精灵",
    "innateskill1": "影遁",
    "innateskill1info1": "阿斯特拉影精灵能够在战斗中隐身，避免敌人的攻击。",
    "innateskill2": "暗影突袭",
    "innateskill1info2": "阿斯特拉影精灵能够从暗影中突袭敌人，造成高额伤害。",
    "innateskill3": "影之屏障",
    "innateskill1info3": "阿斯特拉影精灵能够召唤影之屏障，减少受到的魔法伤害。",
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 20,
    "stamina": 10,
    "dexterity": 15,
    "spiritualintuition": 15,
    "luckyvalue": 10,
    "intelligence": 15,
    "faith": 5,
    "attack": 25,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 30
  },
  {
    "id": 29,
    "name": "埃尔达温光精灵",
    "innateskill1": "光辉之力",
    "innateskill1info1": "埃尔达温光精灵能够释放光辉之力，治疗自身或队友的伤口。",
    "innateskill2": "光之箭",
    "innateskill1info2": "埃尔达温光精灵能够射出光之箭，对敌人造成魔法伤害。",
    "innateskill3": "光之护盾",
    "innateskill1info3": "埃尔达温光精灵能够召唤光之护盾，减少受到的物理伤害。",
    "healthpoint": 100,
    "maxmagicpoint": 10,
    "sturdypoint": 15,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 10,
    "faith": 20,
    "attack": 10,
    "armourclass": 5,
    "physicaldefense": 20,
    "magicdefense": 5
  },
  {
    "id": 30,
    "name": "德鲁恩雷精灵",
    "innateskill1": "雷霆之击",
    "innateskill1info1": "德鲁恩雷精灵能够释放雷霆之击，对敌人造成电击伤害。",
    "innateskill2": "闪电奔袭",
    "innateskill1info2": "德鲁恩雷精灵能够迅速接近敌人，进行闪电般的攻击。",
    "innateskill3": "雷电屏障",
    "innateskill1info3": "德鲁恩雷精灵能够召唤雷电屏障，减少受到的魔法伤害。",
    "healthpoint": 200,
    "maxmagicpoint": 5,
    "sturdypoint": 10,
    "stamina": 10,
    "dexterity": 10,
    "spiritualintuition": 10,
    "luckyvalue": 10,
    "intelligence": 5,
    "faith": 5,
    "attack": 5,
    "armourclass": 5,
    "physicaldefense": 5,
    "magicdefense": 10
  },
  {
    "id": 31,
    "name": "纳格瑞斯冰精灵",
    "innateskill1": "冰霜之触",
    "innateskill1info1": "纳格瑞斯冰精灵能够将水元素转化为冰霜之力，冻结敌人。",
    "innateskill2": "寒冰刺",
    "innateskill1info2": "纳格瑞斯冰精灵能够召唤寒冰刺攻击敌人，使其受到冰冻伤害。",
    "innateskill3": "冰之护盾",
    "innateskill1info3": "纳格瑞斯冰精灵能够召唤冰之护盾，减少受到的物理伤害。",
    "healthpoint": 200,
    "maxmagicpoint": 20,
    "sturdypoint": 10,
    "stamina": 10,
    "dexterity": 0,
    "spiritualintuition": 10,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 5,
    "attack": 10,
    "armourclass": 10,
    "physicaldefense": 15,
    "magicdefense": 5
  },
  {
    "id": 32,
    "name": "阿尔泰兰火巨人",
    "innateskill1": "烈焰之心",
    "innateskill1info1": "阿尔泰兰火巨人拥有烈焰之心，能够操控火焰进行攻击。",
    "innateskill2": "火焰冲击",
    "innateskill1info2": "阿尔泰兰火巨人能够释放火焰冲击波，对周围敌人造成火焰伤害。",
    "innateskill3": "火焰护盾",
    "innateskill1info3": "阿尔泰兰火巨人能够召唤火焰护盾，减少受到的物理伤害。",
    "healthpoint": 400,
    "maxmagicpoint": 20,
    "sturdypoint": 20,
    "stamina": 5,
    "dexterity": 10,
    "spiritualintuition": 10,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 5,
    "attack": 15,
    "armourclass": 20,
    "physicaldefense": 15,
    "magicdefense": 0
  },
  {
    "id": 33,
    "name": "萨卡利亚黑精灵",
    "innateskill1": "黑暗之触",
    "innateskill1info1": "萨卡利亚黑精灵能够释放黑暗之触，削弱敌人的力量。",
    "innateskill2": "暗影突袭",
    "innateskill1info2": "萨卡利亚黑精灵能够从暗影中突袭敌人，造成高额伤害。",
    "innateskill3": "暗影护盾",
    "innateskill1info3": "萨卡利亚黑精灵能够召唤暗影护盾，减少受到的魔法伤害。",
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 10,
    "stamina": 10,
    "dexterity": 10,
    "spiritualintuition": 10,
    "luckyvalue": 10,
    "intelligence": 0,
    "faith": 0,
    "attack": 20,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 20
  },
  {
    "id": 34,
    "name": "塞尔利亚水精灵",
    "innateskill1": "水之守护",
    "innateskill1info1": "塞尔利亚水精灵能够操控水元素进行攻击，并在受到攻击时自动治疗自己。",
    "innateskill2": "水波攻击",
    "innateskill1info2": "塞尔利亚水精灵能够释放水波攻击敌人，使其受到水属性伤害。",
    "innateskill3": "水之护盾",
    "innateskill1info3": "塞尔利亚水精灵能够召唤水之护盾，减少受到的物理伤害。",
    "healthpoint": 200,
    "maxmagicpoint": 100,
    "sturdypoint": 10,
    "stamina": 20,
    "dexterity": 0,
    "spiritualintuition": 20,
    "luckyvalue": 10,
    "intelligence": 0,
    "faith": 10,
    "attack": 15,
    "armourclass": 15,
    "physicaldefense": 20,
    "magicdefense": 10
  },
  {
    "id": 35,
    "name": "暗影峡谷亡灵",
    "innateskill1": "灵魂吞噬",
    "innateskill1info1": "暗影峡谷亡灵能够吞噬敌人的灵魂，恢复自身的生命值并增强力量。",
    "innateskill2": "死亡缠绕",
    "innateskill1info2": "暗影峡谷亡灵能够释放死亡缠绕，使敌人陷入恐惧并持续受到伤害。",
    "innateskill3": "阴影步",
    "innateskill1info3": "暗影峡谷亡灵能够进入阴影状态，暂时避开所有攻击并增加移动速度。",
    "healthpoint": 600,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 10,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 10,
    "magicdefense": 10
  },
  {
    "id": 36,
    "name": "血月平原吸血鬼",
    "innateskill1": "鲜血汲取",
    "innateskill1info1": "血月平原吸血鬼能够从敌人身上汲取鲜血，迅速恢复自身生命值。",
    "innateskill2": "夜之拥抱",
    "innateskill1info2": "血月平原吸血鬼能够在夜晚增加攻击力和防御力，使自己更强大。",
    "innateskill3": "魅惑之眼",
    "innateskill1info3": "血月平原吸血鬼能够通过魅惑之眼使敌人短暂失去行动能力。",
    "healthpoint": 400,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 20,
    "intelligence": 0,
    "faith": 0,
    "attack": 20,
    "armourclass": 20,
    "physicaldefense": 5,
    "magicdefense": 5
  },
  {
    "id": 37,
    "name": "深渊洞穴兽人",
    "innateskill1": "狂暴之力",
    "innateskill1info1": "深渊洞穴兽人能够在战斗中激发狂暴之力，提升攻击力和抗打击能力。",
    "innateskill2": "撕裂猛击",
    "innateskill1info2": "深渊洞穴兽人能够用巨力撕裂敌人的护甲，造成大量物理伤害。",
    "innateskill3": "狂战士之魂",
    "innateskill1info3": "深渊洞穴兽人在生命值低于一定程度时进入狂战士状态，提高攻击速度和致命一击几率。",
    "healthpoint": 200,
    "maxmagicpoint": 0,
    "sturdypoint": 10,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 20,
    "armourclass": 0,
    "physicaldefense": 5,
    "magicdefense": 5
  },
  {
    "id": 38,
    "name": "幽冥森林妖精",
    "innateskill1": "幻影之舞",
    "innateskill1info1": "幽冥森林妖精能够在战斗中施展幻影之舞，迷惑敌人并闪避攻击。",
    "innateskill2": "毒液之吻",
    "innateskill1info2": "幽冥森林妖精能够对敌人施展毒液之吻，使其中毒并持续受到伤害。",
    "innateskill3": "魅惑之歌",
    "innateskill1info3": "幽冥森林妖精能够通过魅惑之歌使敌人短暂失去抵抗能力。",
    "healthpoint": 0,
    "maxmagicpoint": 200,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 20,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 10,
    "physicaldefense": 5,
    "magicdefense": 5
  },
  {
    "id": 39,
    "name": "黑暗荒原地狱犬",
    "innateskill1": "火焰之牙",
    "innateskill1info1": "黑暗荒原地狱犬能够在攻击时释放火焰之牙，造成额外的火焰伤害。",
    "innateskill2": "地狱火焰",
    "innateskill1info2": "黑暗荒原地狱犬能够召唤地狱火焰，灼烧周围的敌人。",
    "innateskill3": "暗影疾走",
    "innateskill1info3": "黑暗荒原地狱犬能够进入暗影疾走状态，增加移动速度并避开攻击。",
    "healthpoint": 300,
    "maxmagicpoint": 0,
    "sturdypoint": 5,
    "stamina": 5,
    "dexterity": 5,
    "spiritualintuition": 5,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 10,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 40,
    "name": "炼狱山脉恶魔",
    "innateskill1": "地狱之火",
    "innateskill1info1": "炼狱山脉恶魔能够召唤地狱之火，焚烧敌人并造成持续伤害。",
    "innateskill2": "恶魔之爪",
    "innateskill1info2": "炼狱山脉恶魔拥有强大的恶魔之爪，能够撕裂敌人的护甲并造成严重伤害。",
    "innateskill3": "恐惧之吼",
    "innateskill1info3": "炼狱山脉恶魔能够发出恐惧之吼，使周围的敌人陷入恐慌。",
    "healthpoint": 400,
    "maxmagicpoint": 0,
    "sturdypoint": 5,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 10,
    "luckyvalue": 20,
    "intelligence": 0,
    "faith": 0,
    "attack": 20,
    "armourclass": 5,
    "physicaldefense": 10,
    "magicdefense": 10
  },
  {
    "id": 41,
    "name": "邪影山谷梦魇",
    "innateskill1": "梦魇侵蚀",
    "innateskill1info1": "邪影山谷梦魇能够侵蚀敌人的精神，使其陷入恐惧和幻觉。",
    "innateskill2": "暗影步",
    "innateskill1info2": "邪影山谷梦魇能够在战斗中利用暗影步迅速接近或远离敌人。",
    "innateskill3": "噩梦之触",
    "innateskill1info3": "邪影山谷梦魇能够通过噩梦之触削弱敌人的力量和意志。",
    "healthpoint": 500,
    "maxmagicpoint": 10,
    "sturdypoint": 20,
    "stamina": 0,
    "dexterity": 10,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 10,
    "faith": 10,
    "attack": 0,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 42,
    "name": "幽影荒漠亡魂",
    "innateskill1": "幽灵之触",
    "innateskill1info1": "幽影荒漠亡魂能够通过幽灵之触削弱敌人的生命力，并吸取部分生命能量。",
    "innateskill2": "死亡之影",
    "innateskill1info2": "幽影荒漠亡魂能够释放死亡之影，使周围的敌人陷入恐慌并持续受到伤害。",
    "innateskill3": "幽灵漫步",
    "innateskill1info3": "幽影荒漠亡魂能够在战斗中进行幽灵漫步，迅速穿越敌人的防线并造成混乱。",
    "healthpoint": 100,
    "maxmagicpoint": 20,
    "sturdypoint": 10,
    "stamina": 0,
    "dexterity": 10,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 20,
    "physicaldefense": 10,
    "magicdefense": 10
  },
  {
    "id": 43,
    "name": "暗影湮灭者",
    "innateskill1": "暗影之触",
    "innateskill1info1": "暗影湮灭者能够通过暗影之触侵入敌人的精神世界，造成精神损伤和恐惧效果。",
    "innateskill2": "虚空融合",
    "innateskill1info2": "暗影湮灭者能够融合虚空的力量，暂时提升自身的魔法抵抗和幽灵形态。",
    "innateskill3": "黑暗之怒",
    "innateskill1info3": "暗影湮灭者能够释放黑暗之怒，对周围的敌人造成巨大的暗影伤害和恐慌。",
    "healthpoint": 300,
    "maxmagicpoint": 0,
    "sturdypoint": 20,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 10,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 10,
    "physicaldefense": 10,
    "magicdefense": 30
  }
];

// src/index/skills.ts
var skillJson = [
  {
    "id": 0,
    "name": "无技能",
    "harm": 0,
    "advanced": 0,
    "types": 0,
    "price": 0,
    "consumptionofmagic": 10,
    "skillinfo": "",
    "attckinfo": "",
    "endinfo": "",
    "needhealthpoint": 0,
    //需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
    //
  },
  {
    "id": 1,
    "name": "火球",
    "harm": 20,
    "advanced": 0,
    "types": 2,
    "price": 100,
    "consumptionofmagic": 30,
    "skillinfo": "聚集炽热的火元素",
    "attckinfo": "迅发而出",
    "endinfo": "将对方覆盖",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
    //
  },
  {
    "id": 2,
    "name": "水球",
    "harm": 20,
    "advanced": 0,
    "types": 2,
    "price": 100,
    "consumptionofmagic": 30,
    "skillinfo": "聚集温和的水元素",
    "attckinfo": "迸发而出",
    "endinfo": "将对方击中",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
    //
  },
  {
    "id": 3,
    "name": "土球",
    "harm": 20,
    "advanced": 0,
    "types": 2,
    "price": 100,
    "consumptionofmagic": 30,
    "skillinfo": "聚集厚重的土元素",
    "attckinfo": "迅猛飞出",
    "endinfo": "将对方砸中",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
    //
  },
  {
    "id": 4,
    "name": "风球",
    "harm": 20,
    "advanced": 0,
    "types": 2,
    "price": 100,
    "consumptionofmagic": 30,
    "skillinfo": "聚集无形的风元素",
    "attckinfo": "",
    "endinfo": "将对方缠绕",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
    //
  },
  {
    "id": 5,
    "name": "灵球",
    "harm": 20,
    "advanced": 0,
    "types": 2,
    "price": 100,
    "consumptionofmagic": 30,
    "skillinfo": "聚集无形的灵力",
    "attckinfo": "",
    "endinfo": "将对方覆盖",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
    //
  },
  {
    "id": 6,
    "name": "光球",
    "harm": 20,
    "advanced": 0,
    "types": 2,
    "price": 100,
    "consumptionofmagic": 30,
    "skillinfo": "聚集耀眼的光元素",
    "attckinfo": "",
    "endinfo": "将对方侵蚀",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
    //
  },
  {
    "id": 7,
    "name": "黑球",
    "harm": 20,
    "advanced": 0,
    "types": 2,
    "price": 100,
    "consumptionofmagic": 30,
    "skillinfo": "聚集浑浊的暗元素",
    "attckinfo": "",
    "endinfo": "将对方侵蚀",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
    //
  },
  {
    "id": 8,
    "name": "风炎斩",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 300,
    "consumptionofmagic": 40,
    "skillinfo": "风火元素缠绕在剑身",
    "attckinfo": "将猛烈的斩击劈向对方",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
    //
  },
  {
    "id": 9,
    "name": "烈焰刃",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 330,
    "consumptionofmagic": 40,
    "skillinfo": "火焰元素围绕武器缠绕",
    "attckinfo": "释放炽热的刀刃斩向敌人",
    "endinfo": "强烈的火焰斩击迸发出来",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 10,
    "name": "寒冰刺",
    "harm": 30,
    "advanced": 0,
    "types": 2,
    "price": 320,
    "consumptionofmagic": 40,
    "skillinfo": "冰霜元素凝结在武器上",
    "attckinfo": "迅速刺向敌人，释放寒冷能量",
    "endinfo": "冰冷的攻击穿透目标",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 11,
    "name": "雷霆斩",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 340,
    "consumptionofmagic": 40,
    "skillinfo": "雷电能量聚集在武器上",
    "attckinfo": "释放强力的雷电攻击",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 12,
    "name": "飓风刃",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 350,
    "consumptionofmagic": 40,
    "skillinfo": "风元素化作旋风围绕武器",
    "attckinfo": "释放旋风般的刀刃攻击",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 13,
    "name": "极寒刺",
    "harm": 30,
    "advanced": 0,
    "types": 2,
    "price": 340,
    "consumptionofmagic": 40,
    "skillinfo": "极寒元素覆盖武器",
    "attckinfo": "冰冷的刺击穿透敌人",
    "endinfo": "寒冷的力量扭曲敌人的防御",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 14,
    "name": "雷霆刃",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 360,
    "consumptionofmagic": 40,
    "skillinfo": "雷电能量聚集在武器上",
    "attckinfo": "释放强力的雷霆斩击",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 15,
    "name": "火焰烈刃",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 370,
    "consumptionofmagic": 40,
    "skillinfo": "熊熊火焰覆盖武器",
    "attckinfo": "火焰刀刃炽热地斩向目标",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 16,
    "name": "冰封之刺",
    "harm": 30,
    "advanced": 0,
    "types": 2,
    "price": 350,
    "consumptionofmagic": 40,
    "skillinfo": "冰霜之力在武器中凝聚",
    "attckinfo": "冰封刺击凝固敌人",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 17,
    "name": "雷霆裂地",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 380,
    "consumptionofmagic": 40,
    "skillinfo": "雷电能量聚集在地面上",
    "attckinfo": "雷霆之力裂地而起",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 18,
    "name": "风暴之刃",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 390,
    "consumptionofmagic": 40,
    "skillinfo": "风暴元素在武器上形成",
    "attckinfo": "释放狂暴风暴的力量",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 19,
    "name": "霜冻刺",
    "harm": 20,
    "advanced": 0,
    "types": 2,
    "price": 360,
    "consumptionofmagic": 30,
    "skillinfo": "寒冰能量凝结在武器上",
    "attckinfo": "释放极寒刺击",
    "endinfo": "寒冷的力量冻结目标",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 20,
    "name": "雷霆风暴",
    "harm": 30,
    "advanced": 0,
    "types": 2,
    "price": 600,
    "consumptionofmagic": 40,
    "skillinfo": "雷电与风暴交织在一起",
    "attckinfo": "释放毁灭性的雷霆风暴",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 21,
    "name": "烈焰风暴",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 800,
    "consumptionofmagic": 50,
    "skillinfo": "熊熊烈焰化为狂暴风暴",
    "attckinfo": "烈焰的风暴摧毁一切",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 22,
    "name": "幻影刃",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 800,
    "consumptionofmagic": 50,
    "skillinfo": "暗影能量缠绕在武器上",
    "attckinfo": "释放幻影般的刀刃攻击",
    "endinfo": "暗影之刃穿透敌人的防御",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 23,
    "name": "极寒之风",
    "harm": 30,
    "advanced": 0,
    "types": 2,
    "price": 370,
    "consumptionofmagic": 40,
    "skillinfo": "寒风之力在武器上凝聚",
    "attckinfo": "寒冷之风斩向敌人",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 24,
    "name": "闪电锋刃",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 450,
    "consumptionofmagic": 40,
    "skillinfo": "闪电能量融入武器之中",
    "attckinfo": "释放迅捷的闪电攻击",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 25,
    "name": "幽冥之刃",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 400,
    "consumptionofmagic": 40,
    "skillinfo": "幽冥力量覆盖武器",
    "attckinfo": "释放幽冥刀刃攻击",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 26,
    "name": "冰刃之舞",
    "harm": 30,
    "advanced": 0,
    "types": 2,
    "price": 410,
    "consumptionofmagic": 40,
    "skillinfo": "冰霜之力在武器上流转",
    "attckinfo": "释放冰刃般的攻击",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 27,
    "name": "雷霆裁决",
    "harm": 60,
    "advanced": 0,
    "types": 2,
    "price": 1200,
    "consumptionofmagic": 60,
    "skillinfo": "雷霆之力集中于武器",
    "attckinfo": "释放雷霆的裁决",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 28,
    "name": "暗影刺",
    "harm": 30,
    "advanced": 0,
    "types": 2,
    "price": 400,
    "consumptionofmagic": 40,
    "skillinfo": "暗影能量注入武器",
    "attckinfo": "释放暗影刺击",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 29,
    "name": "寒冰屠戮",
    "harm": 30,
    "advanced": 0,
    "types": 2,
    "price": 440,
    "consumptionofmagic": 40,
    "skillinfo": "冰霜之力在武器上爆发",
    "attckinfo": "释放寒冰屠戮",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 30,
    "name": "雷霆审判",
    "harm": 30,
    "advanced": 0,
    "types": 2,
    "price": 450,
    "consumptionofmagic": 40,
    "skillinfo": "雷霆之力裁决敌人",
    "attckinfo": "释放雷霆审判",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 31,
    "name": "桜花剣",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 420,
    "consumptionofmagic": 40,
    "skillinfo": "樱花之力缠绕在剑上",
    "attckinfo": "释放如樱花般的剑刃",
    "endinfo": "剑刃如樱花般绽放，洒落刀光",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 32,
    "name": "雪花刃",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 410,
    "consumptionofmagic": 40,
    "skillinfo": "冰雪之力凝聚在刃上",
    "attckinfo": "释放冰雪般的刀刃",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 33,
    "name": "雷神之刃",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 430,
    "consumptionofmagic": 40,
    "skillinfo": "雷电之神的力量注入武器",
    "attckinfo": "释放雷电般的刀锋",
    "endinfo": "刀锋如雷神之怒，轰鸣而过",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 34,
    "name": "紫电剑",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 440,
    "consumptionofmagic": 40,
    "skillinfo": "紫色闪电在剑上闪耀",
    "attckinfo": "释放紫电般的剑刃",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 35,
    "name": "冰蔷薇刃",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 450,
    "consumptionofmagic": 40,
    "skillinfo": "冰霜之花缠绕在刃上",
    "attckinfo": "释放冰蔷薇般的刀锋",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 36,
    "name": "神风剑",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 460,
    "consumptionofmagic": 40,
    "skillinfo": "神风之力在剑上流转",
    "attckinfo": "释放神风般的剑刃",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 37,
    "name": "夜莲剑",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 470,
    "consumptionofmagic": 40,
    "skillinfo": "夜莲之力在剑上幽魅流转",
    "attckinfo": "释放夜莲般的剑锋",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 38,
    "name": "霜华刃",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 800,
    "consumptionofmagic": 50,
    "skillinfo": "霜华之力凝聚在刃上",
    "attckinfo": "释放霜华般的刀锋",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 39,
    "name": "雷霆之舞",
    "harm": 30,
    "advanced": 0,
    "types": 2,
    "price": 490,
    "consumptionofmagic": 50,
    "skillinfo": "雷霆之力化作舞姿",
    "attckinfo": "释放雷霆之舞的剑锋",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 40,
    "name": "秋叶刃",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 500,
    "consumptionofmagic": 40,
    "skillinfo": "秋叶之力在剑上流转",
    "attckinfo": "释放如秋叶般的剑锋",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 41,
    "name": "猎鹰之怒",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 480,
    "consumptionofmagic": 40,
    "skillinfo": "剑身缠绕着猛禽之力",
    "attckinfo": "释放如猎鹰般的剑击",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 42,
    "name": "冰霜巨龙",
    "harm": 30,
    "advanced": 0,
    "types": 2,
    "price": 800,
    "consumptionofmagic": 40,
    "skillinfo": "剑刃凝聚着冰霜巨龙之力",
    "attckinfo": "释放冰霜巨龙的刀锋",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 43,
    "name": "黑暗审判",
    "harm": 30,
    "advanced": 0,
    "types": 2,
    "price": 800,
    "consumptionofmagic": 40,
    "skillinfo": "剑身闪耀着黑暗审判之力",
    "attckinfo": "释放黑暗审判的剑锋",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 44,
    "name": "血色剑魂",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 800,
    "consumptionofmagic": 40,
    "skillinfo": "剑魂凝聚着血色之力",
    "attckinfo": "释放血色的剑刃",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 45,
    "name": "狂风剑雨",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 600,
    "consumptionofmagic": 40,
    "skillinfo": "剑雨如狂风般肆虐",
    "attckinfo": "释放狂风般的剑刃",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 46,
    "name": "圣光审判",
    "harm": 40,
    "advanced": 0,
    "types": 2,
    "price": 800,
    "consumptionofmagic": 50,
    "skillinfo": "剑身闪耀着圣光审判之力",
    "attckinfo": "释放圣光审判的剑锋",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 47,
    "name": "黎明之剑",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 800,
    "consumptionofmagic": 50,
    "skillinfo": "剑身闪烁着黎明之光",
    "attckinfo": "释放黎明般的剑刃",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 48,
    "name": "赤焰长剑",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 600,
    "consumptionofmagic": 40,
    "skillinfo": "长剑上燃烧着赤红的火焰",
    "attckinfo": "释放赤焰的长剑",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 49,
    "name": "暗夜断魂剑",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 800,
    "consumptionofmagic": 50,
    "skillinfo": "剑身散发着暗夜断魂之力",
    "attckinfo": "释放暗夜断魂的剑锋",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 50,
    "name": "圣殿神剑",
    "harm": 60,
    "advanced": 0,
    "types": 1,
    "price": 1200,
    "consumptionofmagic": 70,
    "skillinfo": "神剑上凝聚着圣殿的神圣之力",
    "attckinfo": "释放神圣的圣殿之剑",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 51,
    "name": "星莲华符「彗星剑」",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 800,
    "consumptionofmagic": 30,
    "skillinfo": "剑身缠绕着星莲华符之力",
    "attckinfo": "释放如彗星般的剑刃",
    "endinfo": "彗星剑刃轰击敌人，光芒四射",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 52,
    "name": "月之疾风符「月光剑」",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 800,
    "consumptionofmagic": 40,
    "skillinfo": "剑刃凝聚着月之疾风符之力",
    "attckinfo": "释放月光般的刀锋",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 53,
    "name": "红雾符「烈焰剑」",
    "harm": 30,
    "advanced": 0,
    "types": 3,
    "price": 800,
    "consumptionofmagic": 40,
    "skillinfo": "剑身闪耀着红雾符之力",
    "attckinfo": "释放烈焰般的剑锋",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 54,
    "name": "风神符「旋风剑」",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 800,
    "consumptionofmagic": 40,
    "skillinfo": "剑刃环绕着风神符之力",
    "attckinfo": "释放旋风般的剑刃",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 55,
    "name": "星火符「流星剑」",
    "harm": 30,
    "advanced": 0,
    "types": 2,
    "price": 800,
    "consumptionofmagic": 40,
    "skillinfo": "剑刃凝聚着星火符之力",
    "attckinfo": "释放流星般的刀锋",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 56,
    "name": "月华符「月华剑」",
    "harm": 30,
    "advanced": 0,
    "types": 2,
    "price": 800,
    "consumptionofmagic": 40,
    "skillinfo": "剑身闪耀着月华符之力",
    "attckinfo": "释放月华般的剑锋",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 57,
    "name": "虹彩符「虹光剑」",
    "harm": 30,
    "advanced": 0,
    "types": 2,
    "price": 800,
    "consumptionofmagic": 40,
    "skillinfo": "剑刃闪耀着虹彩符之力",
    "attckinfo": "释放虹光般的剑刃",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 58,
    "name": "寒冰符「极寒剑」",
    "harm": 30,
    "advanced": 0,
    "types": 2,
    "price": 800,
    "consumptionofmagic": 40,
    "skillinfo": "剑身凝聚着寒冰符之力",
    "attckinfo": "释放极寒般的剑锋",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 59,
    "name": "幻梦符「幻梦剑」",
    "harm": 30,
    "advanced": 0,
    "types": 2,
    "price": 800,
    "consumptionofmagic": 40,
    "skillinfo": "剑身幻化出幻梦符之力",
    "attckinfo": "释放幻梦般的剑锋",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 60,
    "name": "霓虹符「霓虹剑」",
    "harm": 40,
    "advanced": 0,
    "types": 2,
    "price": 800,
    "consumptionofmagic": 50,
    "skillinfo": "剑刃闪耀着霓虹符之力",
    "attckinfo": "释放霓虹般的剑刃",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 61,
    "name": "治疗术",
    "harm": 60,
    "advanced": 0,
    "types": 3,
    "price": 100,
    "consumptionofmagic": 40,
    "skillinfo": "法阵中涌动着神圣之光",
    "attckinfo": "施展治愈之力，唤醒生命之泉",
    "endinfo": "治疗术的光芒笼罩四周",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 62,
    "name": "祝福术",
    "harm": 80,
    "advanced": 0,
    "types": 3,
    "price": 300,
    "consumptionofmagic": 60,
    "skillinfo": "法阵中涌动着神圣之光",
    "attckinfo": "施展祝福之力，唤醒生命之泉",
    "endinfo": "祝福术的光芒笼罩四周",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 63,
    "name": "大祝福术",
    "harm": 120,
    "advanced": 0,
    "types": 3,
    "price": 1600,
    "consumptionofmagic": 80,
    "skillinfo": "法阵中涌动着神圣之光",
    "attckinfo": "施展祝福之力，唤醒生命之泉",
    "endinfo": "大祝福术的光芒笼罩四周",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 64,
    "name": "沐浴圣光",
    "harm": 120,
    "advanced": 0,
    "types": 3,
    "price": 1600,
    "consumptionofmagic": 80,
    "skillinfo": "法阵中涌动着神圣之光",
    "attckinfo": "施展圣神之力",
    "endinfo": "神圣的光芒降下",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 65,
    "name": "圣光恩泽",
    "harm": 150,
    "advanced": 0,
    "types": 3,
    "price": 1800,
    "consumptionofmagic": 90,
    "skillinfo": "庄严的存在看向了你",
    "attckinfo": "",
    "endinfo": "神圣的光束降下",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 66,
    "name": "神圣治愈",
    "harm": 120,
    "advanced": 0,
    "types": 3,
    "price": 1200,
    "consumptionofmagic": 80,
    "skillinfo": "纯净的圣光充满了治愈的力量",
    "attckinfo": "释放出温暖的圣光",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 67,
    "name": "光辉疗愈",
    "harm": 120,
    "advanced": 0,
    "types": 3,
    "price": 1200,
    "consumptionofmagic": 80,
    "skillinfo": "纯净的圣光充满了治愈的力量",
    "attckinfo": "释放出温暖的圣光",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 68,
    "name": "天使之触",
    "harm": 160,
    "advanced": 0,
    "types": 3,
    "price": 2e3,
    "consumptionofmagic": 100,
    "skillinfo": "神圣的存在朝你伸手",
    "attckinfo": "",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 69,
    "name": "光明之赐",
    "harm": 140,
    "advanced": 0,
    "types": 3,
    "price": 1600,
    "consumptionofmagic": 90,
    "skillinfo": "光明的力量源自神圣的祝福",
    "attckinfo": "释放出闪耀的光明之力，笼罩着受伤者",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 70,
    "name": "圣灵庇护",
    "harm": 140,
    "advanced": 0,
    "types": 3,
    "price": 1600,
    "consumptionofmagic": 90,
    "skillinfo": "神圣的存在给你施加了庇护",
    "attckinfo": "",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 71,
    "name": "神圣复苏",
    "harm": 180,
    "advanced": 0,
    "types": 4,
    "price": 1600,
    "consumptionofmagic": 100,
    "skillinfo": "祈祷神圣的存在为其重新赋予生命",
    "attckinfo": "",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 72,
    "name": "永恒回归",
    "harm": 200,
    "advanced": 0,
    "types": 4,
    "price": 1800,
    "consumptionofmagic": 100,
    "skillinfo": "祈祷赐福重新回归于你",
    "attckinfo": "",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 73,
    "name": "复活之光",
    "harm": 50,
    "advanced": 0,
    "types": 4,
    "price": 300,
    "consumptionofmagic": 100,
    "skillinfo": "祈祷使得微弱的光粒融入死亡的身体",
    "attckinfo": "",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 74,
    "name": "再临之术",
    "harm": 60,
    "advanced": 0,
    "types": 4,
    "price": 400,
    "consumptionofmagic": 100,
    "skillinfo": "祈祷之力使得逝去的生命再次降临",
    "attckinfo": "",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 75,
    "name": "神恩再生",
    "harm": 100,
    "advanced": 0,
    "types": 4,
    "price": 800,
    "consumptionofmagic": 100,
    "skillinfo": "你的祈祷让不知名的存在动容,逝去的生命重新回归",
    "attckinfo": "",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 76,
    "name": "轮回之触",
    "harm": 200,
    "advanced": 0,
    "types": 4,
    "price": 1800,
    "consumptionofmagic": 100,
    "skillinfo": "你的祈祷惊动了不知名的存在,逝去的灵魂回归尸体",
    "attckinfo": "",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  },
  {
    "id": 77,
    "name": "复苏之焰",
    "harm": 10,
    "advanced": 0,
    "types": 4,
    "price": 250,
    "consumptionofmagic": 100,
    "skillinfo": "祈祷的火焰燃尽尸体,逝去的冒险者自火焰中重新回归",
    "attckinfo": "",
    "endinfo": "",
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0
  }
];

// src/index/profession.ts
var professionJson = [
  {
    "id": 0,
    "name": "无业",
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 0,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 1,
    "name": "铁匠",
    "healthpoint": 1,
    "maxmagicpoint": 1,
    "sturdypoint": 1,
    "stamina": 1,
    "dexterity": 1,
    "spiritualintuition": 1,
    "luckyvalue": 1,
    "intelligence": 1,
    "faith": 1,
    "attack": 1,
    "armourclass": 1,
    "physicaldefense": 1,
    "magicdefense": 1
  },
  {
    "id": 2,
    "name": "流浪者",
    "healthpoint": 1,
    "maxmagicpoint": 1,
    "sturdypoint": 1,
    "stamina": 1,
    "dexterity": 1,
    "spiritualintuition": 1,
    "luckyvalue": 1,
    "intelligence": 1,
    "faith": 1,
    "attack": 1,
    "armourclass": 1,
    "physicaldefense": 1,
    "magicdefense": 1
  },
  {
    "id": 3,
    "name": "乞丐",
    "healthpoint": 1,
    "maxmagicpoint": 1,
    "sturdypoint": 1,
    "stamina": 1,
    "dexterity": 1,
    "spiritualintuition": 1,
    "luckyvalue": 1,
    "intelligence": 1,
    "faith": 1,
    "attack": 1,
    "armourclass": 1,
    "physicaldefense": 1,
    "magicdefense": 1
  },
  {
    "id": 4,
    "name": "剑术家",
    "healthpoint": 1,
    "maxmagicpoint": 1,
    "sturdypoint": 1,
    "stamina": 1,
    "dexterity": 1,
    "spiritualintuition": 1,
    "luckyvalue": 1,
    "intelligence": 1,
    "faith": 1,
    "attack": 1,
    "armourclass": 1,
    "physicaldefense": 1,
    "magicdefense": 1
  },
  {
    "id": 5,
    "name": "弓术家",
    "healthpoint": 1,
    "maxmagicpoint": 1,
    "sturdypoint": 1,
    "stamina": 1,
    "dexterity": 1,
    "spiritualintuition": 1,
    "luckyvalue": 1,
    "intelligence": 1,
    "faith": 1,
    "attack": 1,
    "armourclass": 1,
    "physicaldefense": 1,
    "magicdefense": 1
  }
];

// src/index/prefixlibrary.ts
var prefixLibraryJson = [
  {
    "id": 0,
    "name": "你不应该看到这个前缀",
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 0,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 1,
    "name": "无耻的",
    "healthpoint": 1,
    "maxmagicpoint": 1,
    "sturdypoint": 1,
    "stamina": 1,
    "dexterity": 1,
    "spiritualintuition": 1,
    "luckyvalue": 1,
    "intelligence": 1,
    "faith": 1,
    "attack": 1,
    "armourclass": 1,
    "physicaldefense": 1,
    "magicdefense": 1
  },
  {
    "id": 2,
    "name": "强大的",
    "healthpoint": 1,
    "maxmagicpoint": 1,
    "sturdypoint": 1,
    "stamina": 1,
    "dexterity": 1,
    "spiritualintuition": 1,
    "luckyvalue": 1,
    "intelligence": 1,
    "faith": 1,
    "attack": 1,
    "armourclass": 1,
    "physicaldefense": 1,
    "magicdefense": 1
  },
  {
    "id": 3,
    "name": "锋利的",
    "healthpoint": 1,
    "maxmagicpoint": 1,
    "sturdypoint": 1,
    "stamina": 1,
    "dexterity": 1,
    "spiritualintuition": 1,
    "luckyvalue": 1,
    "intelligence": 1,
    "faith": 1,
    "attack": 1,
    "armourclass": 1,
    "physicaldefense": 1,
    "magicdefense": 1
  },
  {
    "id": 4,
    "name": "诡异的",
    "healthpoint": 1,
    "maxmagicpoint": 1,
    "sturdypoint": 1,
    "stamina": 1,
    "dexterity": 1,
    "spiritualintuition": 1,
    "luckyvalue": 1,
    "intelligence": 1,
    "faith": 1,
    "attack": 1,
    "armourclass": 1,
    "physicaldefense": 1,
    "magicdefense": 1
  },
  {
    "id": 5,
    "name": "恐怖的",
    "healthpoint": 1,
    "maxmagicpoint": 1,
    "sturdypoint": 1,
    "stamina": 1,
    "dexterity": 1,
    "spiritualintuition": 1,
    "luckyvalue": 1,
    "intelligence": 1,
    "faith": 1,
    "attack": 1,
    "armourclass": 1,
    "physicaldefense": 1,
    "magicdefense": 1
  },
  {
    "id": 6,
    "name": "善良的",
    "healthpoint": 1,
    "maxmagicpoint": 1,
    "sturdypoint": 1,
    "stamina": 1,
    "dexterity": 1,
    "spiritualintuition": 1,
    "luckyvalue": 1,
    "intelligence": 1,
    "faith": 1,
    "attack": 1,
    "armourclass": 1,
    "physicaldefense": 1,
    "magicdefense": 1
  }
];

// src/index/interlocutorylibrary.ts
var interlocutorylibraryJson = [
  {
    "id": 0,
    "name": "你不应该看到这个称号",
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 0,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 1,
    "name": "虚妄之人",
    "healthpoint": 1,
    "maxmagicpoint": 1,
    "sturdypoint": 1,
    "stamina": 1,
    "dexterity": 1,
    "spiritualintuition": 1,
    "luckyvalue": 1,
    "intelligence": 1,
    "faith": 1,
    "attack": 1,
    "armourclass": 1,
    "physicaldefense": 1,
    "magicdefense": 1
  },
  {
    "id": 2,
    "name": "痴愚之人",
    "healthpoint": 1,
    "maxmagicpoint": 1,
    "sturdypoint": 1,
    "stamina": 1,
    "dexterity": 1,
    "spiritualintuition": 1,
    "luckyvalue": 1,
    "intelligence": 1,
    "faith": 1,
    "attack": 1,
    "armourclass": 1,
    "physicaldefense": 1,
    "magicdefense": 1
  },
  {
    "id": 3,
    "name": "强大之人",
    "healthpoint": 1,
    "maxmagicpoint": 1,
    "sturdypoint": 1,
    "stamina": 1,
    "dexterity": 1,
    "spiritualintuition": 1,
    "luckyvalue": 1,
    "intelligence": 1,
    "faith": 1,
    "attack": 1,
    "armourclass": 1,
    "physicaldefense": 1,
    "magicdefense": 1
  },
  {
    "id": 4,
    "name": "虔诚的人",
    "healthpoint": 1,
    "maxmagicpoint": 1,
    "sturdypoint": 1,
    "stamina": 1,
    "dexterity": 1,
    "spiritualintuition": 1,
    "luckyvalue": 1,
    "intelligence": 1,
    "faith": 1,
    "attack": 1,
    "armourclass": 1,
    "physicaldefense": 1,
    "magicdefense": 1
  },
  {
    "id": 5,
    "name": "江湖小偷",
    "healthpoint": 1,
    "maxmagicpoint": 1,
    "sturdypoint": 1,
    "stamina": 1,
    "dexterity": 1,
    "spiritualintuition": 1,
    "luckyvalue": 1,
    "intelligence": 1,
    "faith": 1,
    "attack": 1,
    "armourclass": 1,
    "physicaldefense": 1,
    "magicdefense": 1
  },
  {
    "id": 6,
    "name": "魂魄刺杀者",
    "healthpoint": 1,
    "maxmagicpoint": 1,
    "sturdypoint": 1,
    "stamina": 1,
    "dexterity": 1,
    "spiritualintuition": 1,
    "luckyvalue": 1,
    "intelligence": 1,
    "faith": 1,
    "attack": 1,
    "armourclass": 1,
    "physicaldefense": 1,
    "magicdefense": 1
  },
  {
    "id": 7,
    "name": "舞蹈家",
    "healthpoint": 1,
    "maxmagicpoint": 1,
    "sturdypoint": 1,
    "stamina": 1,
    "dexterity": 1,
    "spiritualintuition": 1,
    "luckyvalue": 1,
    "intelligence": 1,
    "faith": 1,
    "attack": 1,
    "armourclass": 1,
    "physicaldefense": 1,
    "magicdefense": 1
  }
];

// src/index/suffixlibrary.ts
var suffixlibraryJson = [
  {
    "id": 0,
    "name": "你不应该看到这个后缀",
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 0,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 1,
    "name": "护道者",
    "healthpoint": 1,
    "maxmagicpoint": 1,
    "sturdypoint": 1,
    "stamina": 1,
    "dexterity": 1,
    "spiritualintuition": 1,
    "luckyvalue": 1,
    "intelligence": 1,
    "faith": 1,
    "attack": 1,
    "armourclass": 1,
    "physicaldefense": 1,
    "magicdefense": 1
  },
  {
    "id": 2,
    "name": "控偶者",
    "healthpoint": 1,
    "maxmagicpoint": 1,
    "sturdypoint": 1,
    "stamina": 1,
    "dexterity": 1,
    "spiritualintuition": 1,
    "luckyvalue": 1,
    "intelligence": 1,
    "faith": 1,
    "attack": 1,
    "armourclass": 1,
    "physicaldefense": 1,
    "magicdefense": 1
  },
  {
    "id": 3,
    "name": "最终结局",
    "healthpoint": 1,
    "maxmagicpoint": 1,
    "sturdypoint": 1,
    "stamina": 1,
    "dexterity": 1,
    "spiritualintuition": 1,
    "luckyvalue": 1,
    "intelligence": 1,
    "faith": 1,
    "attack": 1,
    "armourclass": 1,
    "physicaldefense": 1,
    "magicdefense": 1
  },
  {
    "id": 4,
    "name": "破灭幻想",
    "healthpoint": 1,
    "maxmagicpoint": 1,
    "sturdypoint": 1,
    "stamina": 1,
    "dexterity": 1,
    "spiritualintuition": 1,
    "luckyvalue": 1,
    "intelligence": 1,
    "faith": 1,
    "attack": 1,
    "armourclass": 1,
    "physicaldefense": 1,
    "magicdefense": 1
  },
  {
    "id": 5,
    "name": "不幸未来",
    "healthpoint": 1,
    "maxmagicpoint": 1,
    "sturdypoint": 1,
    "stamina": 1,
    "dexterity": 1,
    "spiritualintuition": 1,
    "luckyvalue": 1,
    "intelligence": 1,
    "faith": 1,
    "attack": 1,
    "armourclass": 1,
    "physicaldefense": 1,
    "magicdefense": 1
  },
  {
    "id": 6,
    "name": "死而复生",
    "healthpoint": 1,
    "maxmagicpoint": 1,
    "sturdypoint": 1,
    "stamina": 1,
    "dexterity": 1,
    "spiritualintuition": 1,
    "luckyvalue": 1,
    "intelligence": 1,
    "faith": 1,
    "attack": 1,
    "armourclass": 1,
    "physicaldefense": 1,
    "magicdefense": 1
  },
  {
    "id": 7,
    "name": "最终亡灵",
    "healthpoint": 1,
    "maxmagicpoint": 1,
    "sturdypoint": 1,
    "stamina": 1,
    "dexterity": 1,
    "spiritualintuition": 1,
    "luckyvalue": 1,
    "intelligence": 1,
    "faith": 1,
    "attack": 1,
    "armourclass": 1,
    "physicaldefense": 1,
    "magicdefense": 1
  }
];

// src/index/arsenal.ts
var arsenalJson = [
  {
    "id": 0,
    //模板
    "name": "你不该看到这把武器",
    "path": "/img2/未装备.png",
    "harm": 0,
    "advanced": 0,
    "types": 0,
    "price": 0,
    "fightkirelease": 50,
    //技能释放倍率
    "magicrelease": 40,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 0,
    //加成属性
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 0,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 1,
    "name": "弱小短剑",
    "path": "/img2/未装备.png",
    "harm": 20,
    "advanced": 0,
    "types": 1,
    "price": 50,
    "fightkirelease": 80,
    "magicrelease": 40,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 5,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 2,
    "name": "普通长剑",
    "path": "/img2/未装备.png",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 250,
    "fightkirelease": 80,
    "magicrelease": 40,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 3,
    "name": "士兵长剑",
    "path": "/img2/未装备.png",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 250,
    "fightkirelease": 80,
    "magicrelease": 40,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 15,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 4,
    "name": "赐福长剑",
    "path": "/img2/未装备.png",
    "harm": 38,
    "advanced": 0,
    "types": 1,
    "price": 500,
    "fightkirelease": 80,
    "magicrelease": 80,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 10,
    "faith": 10,
    "attack": 15,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 5,
    "name": "木弓",
    "path": "/img2/未装备.png",
    "harm": 25,
    "advanced": 0,
    "types": 3,
    "price": 50,
    "fightkirelease": 80,
    "magicrelease": 40,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 5,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 6,
    "name": "精致短刃",
    "path": "/img2/未装备.png",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 250,
    "fightkirelease": 80,
    "magicrelease": 40,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 7,
    "name": "雅致细剑",
    "path": "/img2/未装备.png",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 250,
    "fightkirelease": 80,
    "magicrelease": 40,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 8,
    "name": "优雅长剑",
    "path": "/img2/未装备.png",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 250,
    "fightkirelease": 80,
    "magicrelease": 40,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 9,
    "name": "华丽刺剑",
    "path": "/img2/未装备.png",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 250,
    "fightkirelease": 80,
    "magicrelease": 40,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 10,
    "name": "高雅刺剑",
    "path": "/img2/未装备.png",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 250,
    "fightkirelease": 80,
    "magicrelease": 40,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 11,
    "name": "典雅细剑",
    "path": "/img2/未装备.png",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 250,
    "fightkirelease": 80,
    "magicrelease": 40,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 12,
    "name": "华美细剑",
    "path": "/img2/未装备.png",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 250,
    "fightkirelease": 80,
    "magicrelease": 40,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 13,
    "name": "绅士长剑",
    "path": "/img2/未装备.png",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 250,
    "fightkirelease": 80,
    "magicrelease": 40,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 14,
    "name": "华贵长剑",
    "path": "/img2/未装备.png",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 250,
    "fightkirelease": 80,
    "magicrelease": 80,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 15,
    "name": "绅士剑刃",
    "path": "/img2/未装备.png",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 250,
    "fightkirelease": 80,
    "magicrelease": 80,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 16,
    "name": "华贵剑刃",
    "path": "/img2/未装备.png",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 250,
    "fightkirelease": 80,
    "magicrelease": 80,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 17,
    "name": "苍穹之翼",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 550,
    "fightkirelease": 80,
    "magicrelease": 90,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 18,
    "name": "月华之刃",
    "path": "/img2/未装备.png",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 250,
    "fightkirelease": 80,
    "magicrelease": 90,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 19,
    "name": "魔星之锋",
    "path": "/img2/未装备.png",
    "harm": 50,
    "advanced": 0,
    "types": 1,
    "price": 800,
    "fightkirelease": 70,
    "magicrelease": 80,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 10,
    "attack": 20,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 20,
    "name": "炽炎之刃",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 500,
    "fightkirelease": 80,
    "magicrelease": 80,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 21,
    "name": "幽影之刃",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 500,
    "fightkirelease": 80,
    "magicrelease": 80,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 22,
    "name": "霜寒之锋",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 500,
    "fightkirelease": 80,
    "magicrelease": 80,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 23,
    "name": "神圣之刃",
    "path": "/img2/未装备.png",
    "harm": 42,
    "advanced": 0,
    "types": 1,
    "price": 550,
    "fightkirelease": 80,
    "magicrelease": 100,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 24,
    "name": "光辉之翼",
    "path": "/img2/未装备.png",
    "harm": 42,
    "advanced": 0,
    "types": 1,
    "price": 550,
    "fightkirelease": 80,
    "magicrelease": 100,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 25,
    "name": "暗影之牙",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 500,
    "fightkirelease": 100,
    "magicrelease": 80,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 26,
    "name": "破晓之刃",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 500,
    "fightkirelease": 80,
    "magicrelease": 80,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 27,
    "name": "银翼之刃",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 500,
    "fightkirelease": 80,
    "magicrelease": 80,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 28,
    "name": "影月之刃",
    "path": "/img2/未装备.png",
    "harm": 50,
    "advanced": 0,
    "types": 1,
    "price": 1e3,
    "fightkirelease": 100,
    "magicrelease": 100,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 29,
    "name": "龙吟之刃",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 500,
    "fightkirelease": 80,
    "magicrelease": 100,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 30,
    "name": "冰霜之刃",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 500,
    "fightkirelease": 80,
    "magicrelease": 80,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 31,
    "name": "烈焰之刃",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 500,
    "fightkirelease": 80,
    "magicrelease": 80,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 32,
    "name": "静谧之刃",
    "path": "/img2/未装备.png",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 650,
    "fightkirelease": 80,
    "magicrelease": 80,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 10,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 33,
    "name": "天空之刃",
    "path": "/img2/未装备.png",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 800,
    "fightkirelease": 80,
    "magicrelease": 100,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 10,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 34,
    "name": "幻影之刃",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 500,
    "fightkirelease": 80,
    "magicrelease": 80,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 35,
    "name": "流星之刃",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 500,
    "fightkirelease": 80,
    "magicrelease": 80,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 36,
    "name": "雷霆之刃",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 500,
    "fightkirelease": 80,
    "magicrelease": 80,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 37,
    "name": "狂风之刃",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 500,
    "fightkirelease": 80,
    "magicrelease": 80,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 38,
    "name": "寒霜巨锤",
    "path": "/img2/未装备.png",
    "harm": 60,
    "advanced": 0,
    "types": 1,
    "price": 1200,
    "fightkirelease": 60,
    "magicrelease": 60,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 39,
    "name": "星辰弓",
    "path": "/img2/未装备.png",
    "harm": 45,
    "advanced": 0,
    "types": 1,
    "price": 650,
    "fightkirelease": 80,
    "magicrelease": 100,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 40,
    "name": "熔岩刀刃",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 500,
    "fightkirelease": 80,
    "magicrelease": 80,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 0,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 41,
    "name": "荆棘鞭",
    "path": "/img2/未装备.png",
    "harm": 55,
    "advanced": 0,
    "types": 1,
    "price": 1e3,
    "fightkirelease": 80,
    "magicrelease": 60,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 10,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 42,
    "name": "夜刃",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 500,
    "fightkirelease": 80,
    "magicrelease": 80,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 43,
    "name": "蜂刺长矛",
    "path": "/img2/未装备.png",
    "harm": 35,
    "advanced": 0,
    "types": 1,
    "price": 400,
    "fightkirelease": 80,
    "magicrelease": 80,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 44,
    "name": "巨人战锤",
    "path": "/img2/未装备.png",
    "harm": 50,
    "advanced": 0,
    "types": 1,
    "price": 1200,
    "fightkirelease": 100,
    "magicrelease": 40,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 20,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 45,
    "name": "烈焰长剑",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 500,
    "fightkirelease": 60,
    "magicrelease": 90,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 46,
    "name": "苍穹剑",
    "path": "/img2/未装备.png",
    "harm": 35,
    "advanced": 0,
    "types": 1,
    "price": 800,
    "fightkirelease": 80,
    "magicrelease": 120,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 10,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 47,
    "name": "暗影匕首",
    "path": "/img2/未装备.png",
    "harm": 20,
    "advanced": 0,
    "types": 1,
    "price": 300,
    "fightkirelease": 80,
    "magicrelease": 120,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 5,
    "dexterity": 10,
    "spiritualintuition": 0,
    "luckyvalue": 5,
    "intelligence": 10,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 48,
    "name": "光明法杖",
    "path": "/img2/未装备.png",
    "harm": 20,
    "advanced": 0,
    "types": 2,
    "price": 1e3,
    "fightkirelease": 60,
    "magicrelease": 140,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 40,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 10,
    "intelligence": 30,
    "faith": 0,
    "attack": 0,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 49,
    "name": "光辉圣剑",
    "path": "/img2/未装备.png",
    "harm": 45,
    "advanced": 0,
    "types": 1,
    "price": 1200,
    "fightkirelease": 80,
    "magicrelease": 120,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 5,
    "spiritualintuition": 0,
    "luckyvalue": 10,
    "intelligence": 10,
    "faith": 0,
    "attack": 15,
    "armourclass": 0,
    "physicaldefense": 5,
    "magicdefense": 0
  },
  {
    "id": 50,
    "name": "暗影镰刀",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 800,
    "fightkirelease": 120,
    "magicrelease": 80,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 5,
    "spiritualintuition": 0,
    "luckyvalue": 1,
    "intelligence": 10,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 51,
    "name": "星辉法杖",
    "path": "/img2/未装备.png",
    "harm": 30,
    "advanced": 0,
    "types": 2,
    "price": 1600,
    "fightkirelease": 60,
    "magicrelease": 150,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 40,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 5,
    "intelligence": 20,
    "faith": 10,
    "attack": 0,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 52,
    "name": "烈火之刃",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 500,
    "fightkirelease": 80,
    "magicrelease": 80,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 53,
    "name": "冰晶弓",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 3,
    "price": 500,
    "fightkirelease": 100,
    "magicrelease": 80,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 54,
    "name": "神圣长枪",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 800,
    "fightkirelease": 100,
    "magicrelease": 100,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 10,
    "faith": 10,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 55,
    "name": "地狱战斧",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 800,
    "fightkirelease": 100,
    "magicrelease": 70,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 10,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 15,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 56,
    "name": "雷霆巨剑",
    "path": "/img2/未装备.png",
    "harm": 60,
    "advanced": 0,
    "types": 1,
    "price": 2200,
    "fightkirelease": 120,
    "magicrelease": 80,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 10,
    "luckyvalue": 10,
    "intelligence": 10,
    "faith": 20,
    "attack": 20,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 57,
    "name": "幻影弩",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 3,
    "price": 800,
    "fightkirelease": 100,
    "magicrelease": 60,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 10,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 5,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 58,
    "name": "水晶短剑",
    "path": "/img2/未装备.png",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 300,
    "fightkirelease": 80,
    "magicrelease": 120,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 10,
    "faith": 0,
    "attack": 5,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 59,
    "name": "沉默哀嚎",
    "path": "/img2/未装备.png",
    "harm": 80,
    "advanced": 0,
    "types": 1,
    "price": 4500,
    "fightkirelease": 80,
    "magicrelease": 120,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 20,
    "stamina": 10,
    "dexterity": 10,
    "spiritualintuition": 0,
    "luckyvalue": 10,
    "intelligence": 20,
    "faith": 10,
    "attack": 30,
    "armourclass": 0,
    "physicaldefense": 10,
    "magicdefense": 0
  },
  {
    "id": 60,
    "name": "最后的决断",
    "path": "/img2/未装备.png",
    "harm": 80,
    "advanced": 0,
    "types": 1,
    "price": 4500,
    "fightkirelease": 140,
    "magicrelease": 20,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 30,
    "stamina": 0,
    "dexterity": 10,
    "spiritualintuition": 0,
    "luckyvalue": 20,
    "intelligence": 0,
    "faith": 10,
    "attack": 20,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 61,
    "name": "炎之刃",
    "path": "/img2/未装备.png",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 300,
    "fightkirelease": 80,
    "magicrelease": 120,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 10,
    "faith": 0,
    "attack": 5,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 62,
    "name": "冰封之刃",
    "path": "/img2/未装备.png",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 300,
    "fightkirelease": 80,
    "magicrelease": 120,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 10,
    "faith": 0,
    "attack": 5,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 63,
    "name": "雷霆之刃",
    "path": "/img2/未装备.png",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 300,
    "fightkirelease": 80,
    "magicrelease": 120,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 10,
    "faith": 0,
    "attack": 5,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 64,
    "name": "神秘之刃",
    "path": "/img2/未装备.png",
    "harm": 15,
    "advanced": 0,
    "types": 1,
    "price": 800,
    "fightkirelease": 80,
    "magicrelease": 120,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 10,
    "stamina": 0,
    "dexterity": 10,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 30,
    "attack": 0,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 65,
    "name": "星光之刃",
    "path": "/img2/未装备.png",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 300,
    "fightkirelease": 80,
    "magicrelease": 120,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 10,
    "faith": 0,
    "attack": 5,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 66,
    "name": "秘术之刃",
    "path": "/img2/未装备.png",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 500,
    "fightkirelease": 80,
    "magicrelease": 120,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 15,
    "faith": 0,
    "attack": 5,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 67,
    "name": "魔法之刃",
    "path": "/img2/未装备.png",
    "harm": 25,
    "advanced": 0,
    "types": 1,
    "price": 600,
    "fightkirelease": 80,
    "magicrelease": 120,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 20,
    "faith": 5,
    "attack": 5,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 68,
    "name": "圣光之刃",
    "path": "/img2/未装备.png",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 600,
    "fightkirelease": 80,
    "magicrelease": 120,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 15,
    "faith": 0,
    "attack": 5,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 69,
    "name": "暗影之刃",
    "path": "/img2/未装备.png",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 500,
    "fightkirelease": 80,
    "magicrelease": 120,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 15,
    "faith": 5,
    "attack": 5,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 5
  },
  {
    "id": 70,
    "name": "幻光之刃",
    "path": "/img2/未装备.png",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 800,
    "fightkirelease": 80,
    "magicrelease": 120,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 5,
    "intelligence": 20,
    "faith": 5,
    "attack": 5,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 71,
    "name": "紫阳剑",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 350,
    "fightkirelease": 80,
    "magicrelease": 80,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 0,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 72,
    "name": "风华长剑",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 550,
    "fightkirelease": 100,
    "magicrelease": 100,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 10,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 73,
    "name": "沉默之剑",
    "path": "/img2/未装备.png",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 300,
    "fightkirelease": 90,
    "magicrelease": 90,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 5,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 74,
    "name": "妖刃",
    "path": "/img2/未装备.png",
    "harm": 45,
    "advanced": 0,
    "types": 1,
    "price": 600,
    "fightkirelease": 100,
    "magicrelease": 120,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 0,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 75,
    "name": "静寂之剑",
    "path": "/img2/未装备.png",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 450,
    "fightkirelease": 80,
    "magicrelease": 100,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 10,
    "faith": 0,
    "attack": 0,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 76,
    "name": "朝阳",
    "path": "/img2/未装备.png",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 450,
    "fightkirelease": 100,
    "magicrelease": 100,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 0,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 77,
    "name": "暗夜之刃",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 450,
    "fightkirelease": 100,
    "magicrelease": 100,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 10,
    "faith": 0,
    "attack": 5,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 78,
    "name": "凛冬之刃",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 500,
    "fightkirelease": 110,
    "magicrelease": 110,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 10,
    "faith": 0,
    "attack": 5,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 79,
    "name": "枯叶之刃",
    "path": "/img2/未装备.png",
    "harm": 45,
    "advanced": 0,
    "types": 1,
    "price": 600,
    "fightkirelease": 80,
    "magicrelease": 120,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 10,
    "faith": 0,
    "attack": 5,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 80,
    "name": "飞雪之刃",
    "path": "/img2/未装备.png",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 350,
    "fightkirelease": 100,
    "magicrelease": 100,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 10,
    "faith": 0,
    "attack": 5,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 81,
    "name": "星镰刀",
    "path": "/img2/未装备.png",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 450,
    "fightkirelease": 100,
    "magicrelease": 100,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 10,
    "intelligence": 0,
    "faith": 0,
    "attack": 0,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 82,
    "name": "碎海战戟",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 500,
    "fightkirelease": 100,
    "magicrelease": 100,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 83,
    "name": "暮影短弓",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 3,
    "price": 600,
    "fightkirelease": 100,
    "magicrelease": 100,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 10,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 15,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 84,
    "name": "炽翼长枪",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 600,
    "fightkirelease": 100,
    "magicrelease": 100,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 15,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 85,
    "name": "霜风剑",
    "path": "/img2/未装备.png",
    "harm": 30,
    "advanced": 0,
    "types": 1,
    "price": 450,
    "fightkirelease": 100,
    "magicrelease": 100,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 86,
    "name": "幻蝶双剑",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 500,
    "fightkirelease": 100,
    "magicrelease": 100,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 0,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 87,
    "name": "暗川之枪",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 450,
    "fightkirelease": 100,
    "magicrelease": 100,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 88,
    "name": "枯叶之刃",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 450,
    "fightkirelease": 100,
    "magicrelease": 100,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 89,
    "name": "飞雪之刃",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 450,
    "fightkirelease": 100,
    "magicrelease": 100,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 90,
    "name": "绝影斩",
    "path": "/img2/未装备.png",
    "harm": 45,
    "advanced": 0,
    "types": 1,
    "price": 800,
    "fightkirelease": 120,
    "magicrelease": 100,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 10,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 15,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 91,
    "name": "烈焰长枪",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 450,
    "fightkirelease": 100,
    "magicrelease": 100,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 92,
    "name": "寒冰守卫",
    "path": "/img2/未装备.png",
    "harm": 1,
    "advanced": 0,
    "types": 4,
    "price": 3e3,
    "fightkirelease": 40,
    "magicrelease": 40,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 0,
    "armourclass": 50,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 93,
    "name": "雷霆枪槌",
    "path": "/img2/未装备.png",
    "harm": 40,
    "advanced": 0,
    "types": 1,
    "price": 450,
    "fightkirelease": 100,
    "magicrelease": 100,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 94,
    "name": "赤炎战槌",
    "path": "/img2/未装备.png",
    "harm": 45,
    "advanced": 0,
    "types": 1,
    "price": 600,
    "fightkirelease": 120,
    "magicrelease": 100,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 5,
    "faith": 0,
    "attack": 10,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 95,
    "name": "冰晶战槌",
    "path": "/img2/未装备.png",
    "harm": 45,
    "advanced": 0,
    "types": 1,
    "price": 600,
    "fightkirelease": 100,
    "magicrelease": 120,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 10,
    "faith": 0,
    "attack": 5,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 96,
    "name": "暗影战槌",
    "path": "/img2/未装备.png",
    "harm": 45,
    "advanced": 0,
    "types": 1,
    "price": 600,
    "fightkirelease": 100,
    "magicrelease": 120,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 10,
    "faith": 0,
    "attack": 5,
    "armourclass": 10,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 97,
    "name": "霜火长戟",
    "path": "/img2/未装备.png",
    "harm": 45,
    "advanced": 0,
    "types": 1,
    "price": 600,
    "fightkirelease": 100,
    "magicrelease": 120,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 10,
    "faith": 0,
    "attack": 5,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 98,
    "name": "闪电之锤",
    "path": "/img2/未装备.png",
    "harm": 45,
    "advanced": 0,
    "types": 1,
    "price": 600,
    "fightkirelease": 100,
    "magicrelease": 120,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 10,
    "faith": 0,
    "attack": 5,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 99,
    "name": "漆黑长戟",
    "path": "/img2/未装备.png",
    "harm": 45,
    "advanced": 0,
    "types": 1,
    "price": 600,
    "fightkirelease": 100,
    "magicrelease": 120,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 10,
    "faith": 0,
    "attack": 5,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 100,
    "name": "末世毁灭",
    "path": "/img2/未装备.png",
    "harm": 80,
    "advanced": 0,
    "types": 1,
    "price": 4e3,
    "fightkirelease": 140,
    "magicrelease": 10,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 50,
    "armourclass": -30,
    "physicaldefense": 0,
    "magicdefense": 0
  }
];

// src/index/armour.ts
var armourJson = [
  {
    "id": 0,
    "name": "你不该看到这个盔甲",
    "path": "/img2/未装备.png",
    "price": 0,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 0,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 0,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 1,
    "name": "木盔甲",
    "path": "/img2/未装备.png",
    "price": 50,
    "types": 2,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 200,
    "maxmagicpoint": 0,
    "sturdypoint": 5,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 5,
    "armourclass": 10,
    "physicaldefense": 10,
    "magicdefense": 0
  },
  {
    "id": 2,
    "name": "铁盔甲",
    "path": "/img2/未装备.png",
    "price": 300,
    "types": 1,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 400,
    "maxmagicpoint": 0,
    "sturdypoint": 10,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 0,
    "armourclass": 20,
    "physicaldefense": 15,
    "magicdefense": 0
  },
  {
    "id": 3,
    "name": "黄金盔甲",
    "path": "/img2/未装备.png",
    "price": 800,
    "types": 1,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 500,
    "maxmagicpoint": 0,
    "sturdypoint": 10,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 0,
    "armourclass": 15,
    "physicaldefense": 15,
    "magicdefense": 0
  },
  {
    "id": 4,
    "name": "钻石盔甲",
    "path": "/img2/未装备.png",
    "price": 2e3,
    "types": 1,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 800,
    "maxmagicpoint": 0,
    "sturdypoint": 25,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 0,
    "armourclass": 40,
    "physicaldefense": 30,
    "magicdefense": 0
  },
  {
    "id": 5,
    "name": "龙鳞钢甲",
    "path": "/img2/未装备.png",
    "price": 2e3,
    "types": 1,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 600,
    "maxmagicpoint": 0,
    "sturdypoint": 15,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 0,
    "armourclass": 40,
    "physicaldefense": 30,
    "magicdefense": 0
  },
  {
    "id": 6,
    "name": "凤羽甲",
    "path": "/img2/未装备.png",
    "price": 2e3,
    "types": 3,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 300,
    "maxmagicpoint": 400,
    "sturdypoint": 10,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 10,
    "intelligence": 0,
    "faith": 10,
    "attack": 5,
    "armourclass": 20,
    "physicaldefense": 10,
    "magicdefense": 40
  },
  {
    "id": 7,
    "name": "幽冥甲",
    "path": "/img2/未装备.png",
    "price": 2e3,
    "types": 2,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 300,
    "maxmagicpoint": 400,
    "sturdypoint": 10,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 10,
    "intelligence": 0,
    "faith": 10,
    "attack": 5,
    "armourclass": 20,
    "physicaldefense": 10,
    "magicdefense": 40
  },
  {
    "id": 8,
    "name": "赤铜甲",
    "path": "/img2/未装备.png",
    "price": 800,
    "types": 1,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 500,
    "maxmagicpoint": 0,
    "sturdypoint": 10,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 0,
    "armourclass": 15,
    "physicaldefense": 15,
    "magicdefense": 0
  },
  {
    "id": 9,
    "name": "紫金甲",
    "path": "/img2/未装备.png",
    "price": 900,
    "types": 1,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 550,
    "maxmagicpoint": 0,
    "sturdypoint": 15,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 0,
    "armourclass": 20,
    "physicaldefense": 15,
    "magicdefense": 0
  },
  {
    "id": 10,
    "name": "星陨甲",
    "path": "/img2/未装备.png",
    "price": 1600,
    "types": 3,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 400,
    "maxmagicpoint": 300,
    "sturdypoint": 15,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 20,
    "faith": 20,
    "attack": 0,
    "armourclass": 20,
    "physicaldefense": 10,
    "magicdefense": 10
  },
  {
    "id": 11,
    "name": "狱炎甲",
    "path": "/img2/未装备.png",
    "price": 1600,
    "types": 1,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 300,
    "maxmagicpoint": 100,
    "sturdypoint": 10,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 40,
    "physicaldefense": 10,
    "magicdefense": 10
  },
  {
    "id": 12,
    "name": "红木盔甲",
    "path": "/img2/未装备.png",
    "price": 50,
    "types": 2,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 200,
    "maxmagicpoint": 0,
    "sturdypoint": 5,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 5,
    "armourclass": 10,
    "physicaldefense": 10,
    "magicdefense": 0
  },
  {
    "id": 13,
    "name": "针叶木盔甲",
    "path": "/img2/未装备.png",
    "price": 50,
    "types": 2,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 200,
    "maxmagicpoint": 0,
    "sturdypoint": 5,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 5,
    "armourclass": 10,
    "physicaldefense": 10,
    "magicdefense": 0
  },
  {
    "id": 14,
    "name": "棕榈木盔甲",
    "path": "/img2/未装备.png",
    "price": 50,
    "types": 2,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 200,
    "maxmagicpoint": 0,
    "sturdypoint": 5,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 5,
    "armourclass": 10,
    "physicaldefense": 10,
    "magicdefense": 0
  },
  {
    "id": 15,
    "name": "乌木盔甲",
    "path": "/img2/未装备.png",
    "price": 50,
    "types": 2,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 200,
    "maxmagicpoint": 0,
    "sturdypoint": 5,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 5,
    "armourclass": 10,
    "physicaldefense": 10,
    "magicdefense": 0
  },
  {
    "id": 16,
    "name": "防雪盔甲",
    "path": "/img2/未装备.png",
    "price": 300,
    "types": 1,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 300,
    "maxmagicpoint": 0,
    "sturdypoint": 10,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 5,
    "faith": 0,
    "attack": 0,
    "armourclass": 15,
    "physicaldefense": 10,
    "magicdefense": 5
  },
  {
    "id": 17,
    "name": "铜盔甲",
    "path": "/img2/未装备.png",
    "price": 150,
    "types": 1,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 250,
    "maxmagicpoint": 50,
    "sturdypoint": 10,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 0,
    "armourclass": 10,
    "physicaldefense": 10,
    "magicdefense": 5
  },
  {
    "id": 18,
    "name": "锡盔甲",
    "path": "/img2/未装备.png",
    "price": 150,
    "types": 2,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 250,
    "maxmagicpoint": 50,
    "sturdypoint": 10,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 0,
    "armourclass": 10,
    "physicaldefense": 10,
    "magicdefense": 5
  },
  {
    "id": 19,
    "name": "铂金盔甲",
    "path": "/img2/未装备.png",
    "price": 1200,
    "types": 1,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 600,
    "maxmagicpoint": 50,
    "sturdypoint": 15,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 0,
    "armourclass": 20,
    "physicaldefense": 15,
    "magicdefense": 10
  },
  {
    "id": 20,
    "name": "黑曜石盔甲",
    "path": "/img2/未装备.png",
    "price": 1400,
    "types": 1,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 600,
    "maxmagicpoint": 0,
    "sturdypoint": 20,
    "stamina": -10,
    "dexterity": -20,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 10,
    "armourclass": 40,
    "physicaldefense": 40,
    "magicdefense": 0
  },
  {
    "id": 21,
    "name": "流星盔甲",
    "path": "/img2/未装备.png",
    "price": 1e3,
    "types": 3,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 100,
    "maxmagicpoint": 300,
    "sturdypoint": 10,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 20,
    "faith": 0,
    "attack": 0,
    "armourclass": 20,
    "physicaldefense": 10,
    "magicdefense": 10
  },
  {
    "id": 22,
    "name": "死灵盔甲",
    "path": "/img2/未装备.png",
    "price": 1e3,
    "types": 2,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 100,
    "maxmagicpoint": 300,
    "sturdypoint": 10,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 20,
    "faith": 0,
    "attack": 0,
    "armourclass": 20,
    "physicaldefense": 10,
    "magicdefense": 10
  },
  {
    "id": 23,
    "name": "远古暗影盔甲",
    "path": "/img2/未装备.png",
    "price": 1200,
    "types": 2,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 200,
    "maxmagicpoint": 250,
    "sturdypoint": 10,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 20,
    "faith": 0,
    "attack": 5,
    "armourclass": 15,
    "physicaldefense": 10,
    "magicdefense": 20
  },
  {
    "id": 24,
    "name": "暗影盔甲",
    "path": "/img2/未装备.png",
    "price": 1e3,
    "types": 2,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 100,
    "maxmagicpoint": 300,
    "sturdypoint": 10,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 20,
    "faith": 0,
    "attack": 0,
    "armourclass": 20,
    "physicaldefense": 10,
    "magicdefense": 10
  },
  {
    "id": 25,
    "name": "猩红盔甲",
    "path": "/img2/未装备.png",
    "price": 1e3,
    "types": 1,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 400,
    "maxmagicpoint": 100,
    "sturdypoint": 10,
    "stamina": 10,
    "dexterity": 10,
    "spiritualintuition": 0,
    "luckyvalue": 10,
    "intelligence": 5,
    "faith": 0,
    "attack": 0,
    "armourclass": 20,
    "physicaldefense": 10,
    "magicdefense": 10
  },
  {
    "id": 26,
    "name": "熔岩盔甲",
    "path": "/img2/未装备.png",
    "price": 1e3,
    "types": 1,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 500,
    "maxmagicpoint": 0,
    "sturdypoint": 5,
    "stamina": 10,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 0,
    "armourclass": 25,
    "physicaldefense": 15,
    "magicdefense": 0
  },
  {
    "id": 27,
    "name": "蜘蛛盔甲",
    "path": "/img2/未装备.png",
    "price": 500,
    "types": 2,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 300,
    "maxmagicpoint": 200,
    "sturdypoint": 10,
    "stamina": 0,
    "dexterity": 5,
    "spiritualintuition": 0,
    "luckyvalue": 10,
    "intelligence": 15,
    "faith": 0,
    "attack": 0,
    "armourclass": 15,
    "physicaldefense": 0,
    "magicdefense": 15
  },
  {
    "id": 28,
    "name": "秘银盔甲",
    "path": "/img2/未装备.png",
    "price": 1600,
    "types": 3,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 600,
    "maxmagicpoint": 300,
    "sturdypoint": 5,
    "stamina": 5,
    "dexterity": 5,
    "spiritualintuition": 5,
    "luckyvalue": 5,
    "intelligence": 20,
    "faith": 5,
    "attack": 5,
    "armourclass": 20,
    "physicaldefense": 20,
    "magicdefense": 25
  },
  {
    "id": 29,
    "name": "钯金盔甲",
    "path": "/img2/未装备.png",
    "price": 1600,
    "types": 1,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 600,
    "maxmagicpoint": 100,
    "sturdypoint": 5,
    "stamina": 5,
    "dexterity": 5,
    "spiritualintuition": 5,
    "luckyvalue": 5,
    "intelligence": 10,
    "faith": 5,
    "attack": 10,
    "armourclass": 30,
    "physicaldefense": 25,
    "magicdefense": 15
  },
  {
    "id": 30,
    "name": "山铜盔甲",
    "path": "/img2/未装备.png",
    "price": 1600,
    "types": 1,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 600,
    "maxmagicpoint": 100,
    "sturdypoint": 5,
    "stamina": 5,
    "dexterity": 5,
    "spiritualintuition": 5,
    "luckyvalue": 5,
    "intelligence": 10,
    "faith": 5,
    "attack": 10,
    "armourclass": 30,
    "physicaldefense": 25,
    "magicdefense": 15
  },
  {
    "id": 31,
    "name": "精金盔甲",
    "path": "/img2/未装备.png",
    "price": 2e3,
    "types": 1,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 800,
    "maxmagicpoint": 300,
    "sturdypoint": 15,
    "stamina": 10,
    "dexterity": 5,
    "spiritualintuition": 10,
    "luckyvalue": 10,
    "intelligence": 10,
    "faith": 10,
    "attack": 10,
    "armourclass": 40,
    "physicaldefense": 25,
    "magicdefense": 20
  },
  {
    "id": 32,
    "name": "钛金盔甲",
    "path": "/img2/未装备.png",
    "price": 2e3,
    "types": 1,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 800,
    "maxmagicpoint": 300,
    "sturdypoint": 15,
    "stamina": 10,
    "dexterity": 5,
    "spiritualintuition": 10,
    "luckyvalue": 10,
    "intelligence": 10,
    "faith": 10,
    "attack": 10,
    "armourclass": 40,
    "physicaldefense": 20,
    "magicdefense": 25
  },
  {
    "id": 33,
    "name": "水晶刺客盔甲",
    "path": "/img2/未装备.png",
    "price": 500,
    "types": 2,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 200,
    "maxmagicpoint": 300,
    "sturdypoint": 5,
    "stamina": 0,
    "dexterity": 10,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 5,
    "faith": 0,
    "attack": 15,
    "armourclass": 15,
    "physicaldefense": 5,
    "magicdefense": 10
  },
  {
    "id": 34,
    "name": "寒霜盔甲",
    "path": "/img2/未装备.png",
    "price": 1e3,
    "types": 1,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 450,
    "maxmagicpoint": 100,
    "sturdypoint": 5,
    "stamina": 10,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 10,
    "faith": 0,
    "attack": 0,
    "armourclass": 35,
    "physicaldefense": 5,
    "magicdefense": 10
  },
  {
    "id": 35,
    "name": "禁戒盔甲",
    "path": "/img2/未装备.png",
    "price": 2500,
    "types": 1,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 1600,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 0,
    "armourclass": 5,
    "physicaldefense": 1,
    "magicdefense": 0
  },
  {
    "id": 36,
    "name": "武僧盔甲",
    "path": "/img2/未装备.png",
    "price": 1e3,
    "types": 2,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 600,
    "maxmagicpoint": 0,
    "sturdypoint": 15,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 0,
    "intelligence": 0,
    "faith": 0,
    "attack": 20,
    "armourclass": 0,
    "physicaldefense": 0,
    "magicdefense": 0
  },
  {
    "id": 37,
    "name": "神圣盔甲",
    "path": "/img2/未装备.png",
    "price": 2400,
    "types": 1,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 600,
    "maxmagicpoint": 300,
    "sturdypoint": 20,
    "stamina": 10,
    "dexterity": 0,
    "spiritualintuition": 10,
    "luckyvalue": 20,
    "intelligence": 30,
    "faith": 20,
    "attack": 5,
    "armourclass": 40,
    "physicaldefense": 25,
    "magicdefense": 25
  },
  {
    "id": 38,
    "name": "远古神圣盔甲",
    "path": "/img2/未装备.png",
    "price": 2800,
    "types": 1,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 1e3,
    "maxmagicpoint": 300,
    "sturdypoint": 20,
    "stamina": 10,
    "dexterity": 0,
    "spiritualintuition": 10,
    "luckyvalue": 20,
    "intelligence": 30,
    "faith": 20,
    "attack": 10,
    "armourclass": 40,
    "physicaldefense": 25,
    "magicdefense": 40
  },
  {
    "id": 39,
    "name": "叶绿盔甲",
    "path": "/img2/未装备.png",
    "price": 2400,
    "types": 1,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 800,
    "maxmagicpoint": 100,
    "sturdypoint": 15,
    "stamina": 10,
    "dexterity": 5,
    "spiritualintuition": 10,
    "luckyvalue": 10,
    "intelligence": 10,
    "faith": 10,
    "attack": 20,
    "armourclass": 25,
    "physicaldefense": 25,
    "magicdefense": 25
  },
  {
    "id": 40,
    "name": "海龟盔甲",
    "path": "/img2/未装备.png",
    "price": 2e3,
    "types": 1,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 1200,
    "maxmagicpoint": 100,
    "sturdypoint": 20,
    "stamina": 10,
    "dexterity": -10,
    "spiritualintuition": 10,
    "luckyvalue": 10,
    "intelligence": 10,
    "faith": 10,
    "attack": 15,
    "armourclass": 40,
    "physicaldefense": 30,
    "magicdefense": 15
  },
  {
    "id": 41,
    "name": "甲虫盔甲",
    "path": "/img2/未装备.png",
    "price": 2500,
    "types": 1,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 1e3,
    "maxmagicpoint": 50,
    "sturdypoint": 20,
    "stamina": 10,
    "dexterity": 10,
    "spiritualintuition": 10,
    "luckyvalue": 15,
    "intelligence": 0,
    "faith": 20,
    "attack": 15,
    "armourclass": 40,
    "physicaldefense": 30,
    "magicdefense": 10
  },
  {
    "id": 42,
    "name": "幽灵盔甲",
    "path": "/img2/未装备.png",
    "price": 2500,
    "types": 3,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 600,
    "maxmagicpoint": 600,
    "sturdypoint": 10,
    "stamina": 10,
    "dexterity": 20,
    "spiritualintuition": 10,
    "luckyvalue": 15,
    "intelligence": 40,
    "faith": 20,
    "attack": 0,
    "armourclass": 20,
    "physicaldefense": 5,
    "magicdefense": 30
  },
  {
    "id": 43,
    "name": "英灵殿骑士盔甲",
    "path": "/img2/未装备.png",
    "price": 800,
    "types": 2,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 600,
    "maxmagicpoint": 0,
    "sturdypoint": 0,
    "stamina": 0,
    "dexterity": 0,
    "spiritualintuition": 0,
    "luckyvalue": 20,
    "intelligence": 0,
    "faith": 0,
    "attack": 15,
    "armourclass": 25,
    "physicaldefense": 10,
    "magicdefense": 10
  },
  {
    "id": 44,
    "name": "暗黑艺术家盔甲",
    "path": "/img2/未装备.png",
    "price": 800,
    "types": 3,
    "needhealthpoint": 0,
    //装备需求属性
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    //
    "healthpoint": 400,
    "maxmagicpoint": 300,
    "sturdypoint": 5,
    "stamina": 0,
    "dexterity": 10,
    "spiritualintuition": 0,
    "luckyvalue": 5,
    "intelligence": 15,
    "faith": 0,
    "attack": 0,
    "armourclass": 15,
    "physicaldefense": 5,
    "magicdefense": 20
  },
  {
    "id": 45,
    "name": "耀斑盔甲",
    "path": "/img2/未装备.png",
    "price": 3e3,
    "types": 1,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 1200,
    "maxmagicpoint": 200,
    "sturdypoint": 20,
    "stamina": 10,
    "dexterity": 10,
    "spiritualintuition": 15,
    "luckyvalue": 10,
    "intelligence": 0,
    "faith": 0,
    "attack": 20,
    "armourclass": 60,
    "physicaldefense": 40,
    "magicdefense": 20
  },
  {
    "id": 46,
    "name": "星旋盔甲",
    "path": "/img2/未装备.png",
    "price": 3e3,
    "types": 2,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 1e3,
    "maxmagicpoint": 200,
    "sturdypoint": 20,
    "stamina": 10,
    "dexterity": 25,
    "spiritualintuition": 20,
    "luckyvalue": 30,
    "intelligence": 0,
    "faith": 0,
    "attack": 25,
    "armourclass": 30,
    "physicaldefense": 20,
    "magicdefense": 10
  },
  {
    "id": 47,
    "name": "星云盔甲",
    "path": "/img2/未装备.png",
    "price": 3e3,
    "types": 3,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 800,
    "maxmagicpoint": 1e3,
    "sturdypoint": 20,
    "stamina": 10,
    "dexterity": 10,
    "spiritualintuition": 20,
    "luckyvalue": 30,
    "intelligence": 40,
    "faith": 40,
    "attack": 10,
    "armourclass": 20,
    "physicaldefense": 10,
    "magicdefense": 40
  },
  {
    "id": 48,
    "name": "星尘盔甲",
    "path": "/img2/未装备.png",
    "price": 3e3,
    "types": 2,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 1e3,
    "maxmagicpoint": 800,
    "sturdypoint": 10,
    "stamina": 30,
    "dexterity": 10,
    "spiritualintuition": 20,
    "luckyvalue": 30,
    "intelligence": 10,
    "faith": 10,
    "attack": 15,
    "armourclass": 40,
    "physicaldefense": 30,
    "magicdefense": 15
  },
  {
    "id": 49,
    "name": "布莱泽盔甲",
    "path": "/img2/未装备.png",
    "price": 2e3,
    "types": 2,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 1200,
    "maxmagicpoint": 0,
    "sturdypoint": 20,
    "stamina": -15,
    "dexterity": 15,
    "spiritualintuition": 20,
    "luckyvalue": 20,
    "intelligence": 5,
    "faith": 10,
    "attack": 15,
    "armourclass": 15,
    "physicaldefense": 15,
    "magicdefense": 15
  },
  {
    "id": 50,
    "name": "黑夜骑兵盔甲",
    "path": "/img2/未装备.png",
    "price": 2e3,
    "types": 1,
    "needhealthpoint": 0,
    "needmaxmagicpoint": 0,
    "needsturdypoint": 0,
    "needstamina": 0,
    "needdexterity": 0,
    "needspiritualintuition": 0,
    "needluckyvalue": 0,
    "needintelligence": 0,
    "needfaith": 0,
    "needattack": 0,
    "healthpoint": 1100,
    "maxmagicpoint": 0,
    "sturdypoint": 25,
    "stamina": -20,
    "dexterity": 15,
    "spiritualintuition": 10,
    "luckyvalue": 15,
    "intelligence": 5,
    "faith": 0,
    "attack": 25,
    "armourclass": 20,
    "physicaldefense": 20,
    "magicdefense": 15
  }
];

// src/database.ts
var logger = new import_koishi.Logger("[AXLMLYRPG]>> ");
var Rpgdata = class {
  static {
    __name(this, "Rpgdata");
  }
  ctx;
  cfg;
  arsenals;
  armour;
  skill;
  store;
  // public logger:Logger;
  constructor(context, config) {
    this.ctx = context;
    this.cfg = config;
    this.arsenals = arsenalJson;
    this.armour = armourJson;
    this.skill = skillJson;
    this.store = { arsenals: [], armour: [], skill: [] };
    this.updateShopList();
    setInterval(() => this.updateShopList(), 24 * 60 * 60 * 1e3);
    this.ctx.database.extend("role_playing_game", {
      id: "string",
      //id
      name: "string",
      //名字
      level: "unsigned",
      //等级
      status: "unsigned",
      //状态
      healthpoint: "unsigned",
      //生命值
      maxhealthpoint: "unsigned",
      //最大生命值
      healthpointEnd: "unsigned",
      //最终生命值
      magicpoint: "unsigned",
      //魔力值
      maxmagicpoint: "unsigned",
      //最大魔力值
      magicpointEnd: "unsigned",
      //最终魔力值
      sturdypoint: "unsigned",
      //体质
      stamina: "unsigned",
      //耐力
      dexterity: "unsigned",
      //敏捷
      spiritualintuition: "unsigned",
      //灵性直觉
      luckyvalue: "unsigned",
      //幸运值
      intelligence: "unsigned",
      //智力
      faith: "unsigned",
      //信仰
      attack: "unsigned",
      //力量
      armourclass: "unsigned",
      //护甲值
      physicaldefense: "unsigned",
      //物理防御力
      magicdefense: "unsigned",
      //魔法防御力
      killnumber: "unsigned",
      //击杀统计
      coins: "unsigned",
      //硬币
      kudos: "integer",
      //声望
      experiencepoint: "unsigned"
      //经验值
    });
    this.ctx.database.extend("role_playing_game_attach", {
      id: "string",
      status: "unsigned",
      //状态
      prefix: "unsigned",
      //前缀称号
      interlocutory: "unsigned",
      //中间称号
      suffix: "unsigned",
      //后缀称号
      skillpoint: "unsigned",
      //技能点数
      duels: "unsigned",
      //对战次数
      resetproperties: "unsigned",
      //重置属性次数
      skill1: "unsigned",
      skill2: "unsigned",
      skill3: "unsigned",
      primaryweapon: "unsigned",
      //主武器
      secondaryweapon: "unsigned",
      //副武器
      armour: "unsigned",
      //盔甲
      racist: "unsigned",
      //种族
      faith: "unsigned",
      //信仰
      profession: "unsigned",
      //职业
      itembar: "list",
      //武器库
      armourbar: "list",
      //盔甲库
      skillbar: "list",
      //技能栏
      prefixlibrary: "list",
      //前缀库
      interlocutorylibrary: "list",
      //称号库
      suffixlibrary: "list"
      //后缀库
    });
    this.ctx.database.extend("role_playing_game_cd", {
      id: "string",
      status: "unsigned",
      //状态
      statuscd: "unsigned",
      //状态cd
      attackcd: "unsigned",
      duelscd: "unsigned",
      skillcd: "unsigned"
    });
  }
  //处理数据库异步
  async userdata(session, ctx) {
    let name2;
    if (ctx.database) {
      name2 = session.username ?? session.member?.nick;
      if (name2.length <= 0) {
        name2 = session.user.name;
      } else if (name2 === void 0) {
        name2 = session.user.name;
      }
    }
    if (!name2) {
      name2 = session.author?.name ?? session.member?.nick;
      if (name2.length <= 0) {
        name2 = session.user.name;
      } else if (name2 === void 0) {
        name2 = session.user.name;
      }
    } else {
      name2 = session.username ?? session.member?.nick;
      if (name2.length <= 0) {
        name2 = session.user.name;
      } else if (name2 === void 0) {
        name2 = session.user.name;
      }
    }
    name2 = name2.length > 12 ? name2.substring(0, 12) : name2;
    let time = import_koishi.Time.template("yyyy-MM-dd hh:mm:ss", /* @__PURE__ */ new Date());
    let dbname = (await ctx.database.get("role_playing_game", { id: String(session.userId ?? session.member.user.id) }))[0]?.name;
    let level = (await ctx.database.get("role_playing_game", { id: String(session.userId ?? session.member.user.id) }))[0]?.level;
    let status = (await ctx.database.get("role_playing_game", { id: String(session.userId ?? session.member.user.id) }))[0]?.status;
    let healthpoint = (await ctx.database.get("role_playing_game", { id: String(session.userId ?? session.member.user.id) }))[0]?.healthpoint;
    let maxhealthpoint = (await ctx.database.get("role_playing_game", { id: String(session.userId ?? session.member.user.id) }))[0]?.maxhealthpoint;
    let healthpointEnd = (await ctx.database.get("role_playing_game", { id: String(session.userId ?? session.member.user.id) }))[0]?.healthpointEnd;
    let magicpoint = (await ctx.database.get("role_playing_game", { id: String(session.userId ?? session.member.user.id) }))[0]?.magicpoint;
    let maxmagicpoint = (await ctx.database.get("role_playing_game", { id: String(session.userId ?? session.member.user.id) }))[0]?.maxmagicpoint;
    let magicpointEnd = (await ctx.database.get("role_playing_game", { id: String(session.userId ?? session.member.user.id) }))[0]?.magicpointEnd;
    let sturdypoint = (await ctx.database.get("role_playing_game", { id: String(session.userId ?? session.member.user.id) }))[0]?.sturdypoint;
    let stamina = (await ctx.database.get("role_playing_game", { id: String(session.userId ?? session.member.user.id) }))[0]?.stamina;
    let dexterity = (await ctx.database.get("role_playing_game", { id: String(session.userId ?? session.member.user.id) }))[0]?.dexterity;
    let spiritualintuition = (await ctx.database.get("role_playing_game", { id: String(session.userId ?? session.member.user.id) }))[0]?.spiritualintuition;
    let luckyvalue = (await ctx.database.get("role_playing_game", { id: String(session.userId ?? session.member.user.id) }))[0]?.luckyvalue;
    let intelligence = (await ctx.database.get("role_playing_game", { id: String(session.userId ?? session.member.user.id) }))[0]?.intelligence;
    let faith = (await ctx.database.get("role_playing_game", { id: String(session.userId ?? session.member.user.id) }))[0]?.faith;
    let attack = (await ctx.database.get("role_playing_game", { id: String(session.userId ?? session.member.user.id) }))[0]?.attack;
    let armourclass = (await ctx.database.get("role_playing_game", { id: String(session.userId ?? session.member.user.id) }))[0]?.armourclass;
    let physicaldefense = (await ctx.database.get("role_playing_game", { id: String(session.userId ?? session.member.user.id) }))[0]?.physicaldefense;
    let magicdefense = (await ctx.database.get("role_playing_game", { id: String(session.userId ?? session.member.user.id) }))[0]?.magicdefense;
    let killnumber = (await ctx.database.get("role_playing_game", { id: String(session.userId ?? session.member.user.id) }))[0]?.killnumber;
    let coins = (await ctx.database.get("role_playing_game", { id: String(session.userId ?? session.member.user.id) }))[0]?.coins;
    let kudos = (await ctx.database.get("role_playing_game", { id: String(session.userId ?? session.member.user.id) }))[0]?.kudos;
    let experiencepoint = (await ctx.database.get("role_playing_game", { id: String(session.userId ?? session.member.user.id) }))[0]?.experiencepoint;
    let prefix = (await ctx.database.get("role_playing_game_attach", { id: String(session.userId ?? session.member.user.id) }))[0]?.prefix;
    let interlocutory = (await ctx.database.get("role_playing_game_attach", { id: String(session.userId ?? session.member.user.id) }))[0]?.interlocutory;
    let suffix = (await ctx.database.get("role_playing_game_attach", { id: String(session.userId ?? session.member.user.id) }))[0]?.suffix;
    let skillpoint = (await ctx.database.get("role_playing_game_attach", { id: String(session.userId ?? session.member.user.id) }))[0]?.skillpoint;
    let duels = (await ctx.database.get("role_playing_game_attach", { id: String(session.userId ?? session.member.user.id) }))[0]?.duels;
    let skill1 = (await ctx.database.get("role_playing_game_attach", { id: String(session.userId ?? session.member.user.id) }))[0]?.skill1;
    let skill2 = (await ctx.database.get("role_playing_game_attach", { id: String(session.userId ?? session.member.user.id) }))[0]?.skill2;
    let skill3 = (await ctx.database.get("role_playing_game_attach", { id: String(session.userId ?? session.member.user.id) }))[0]?.skill3;
    let primaryweapon = (await ctx.database.get("role_playing_game_attach", { id: String(session.userId ?? session.member.user.id) }))[0]?.primaryweapon;
    let secondaryweapon = (await ctx.database.get("role_playing_game_attach", { id: String(session.userId ?? session.member.user.id) }))[0]?.secondaryweapon;
    let armour = (await ctx.database.get("role_playing_game_attach", { id: String(session.userId ?? session.member.user.id) }))[0]?.armour;
    let racist = (await ctx.database.get("role_playing_game_attach", { id: String(session.userId ?? session.member.user.id) }))[0]?.racist;
    let faiths = (await ctx.database.get("role_playing_game_attach", { id: String(session.userId ?? session.member.user.id) }))[0]?.faith;
    let profession = (await ctx.database.get("role_playing_game_attach", { id: String(session.userId ?? session.member.user.id) }))[0]?.profession;
    let itembar = (await ctx.database.get("role_playing_game_attach", { id: String(session.userId ?? session.member.user.id) }))[0]?.itembar;
    let armourbar = (await ctx.database.get("role_playing_game_attach", { id: String(session.userId ?? session.member.user.id) }))[0]?.armourbar;
    let skillbar = (await ctx.database.get("role_playing_game_attach", { id: String(session.userId ?? session.member.user.id) }))[0]?.skillbar;
    let prefixlibrary = (await ctx.database.get("role_playing_game_attach", { id: String(session.userId ?? session.member.user.id) }))[0]?.prefixlibrary;
    let interlocutorylibrary = (await ctx.database.get("role_playing_game_attach", { id: String(session.userId ?? session.member.user.id) }))[0]?.interlocutorylibrary;
    let suffixlibrary = (await ctx.database.get("role_playing_game_attach", { id: String(session.userId ?? session.member.user.id) }))[0]?.suffixlibrary;
    let statuscd = (await ctx.database.get("role_playing_game_cd", { id: String(session.userId ?? session.member.user.id) }))[0]?.status;
    let attackcd = (await ctx.database.get("role_playing_game_cd", { id: String(session.userId ?? session.member.user.id) }))[0]?.attackcd;
    let duelscd = (await ctx.database.get("role_playing_game_cd", { id: String(session.userId ?? session.member.user.id) }))[0]?.duelscd;
    const total = this.cfg.resetpropertiestotal;
    const n = 9;
    const minValue = this.cfg.resetpropertiesminValue < this.cfg.resetpropertiesmaxValue ? this.cfg.resetpropertiesminValue : 10;
    const maxValue = this.cfg.resetpropertiesmaxValue > this.cfg.resetpropertiesmaxValue ? this.cfg.resetpropertiesmaxValue : 38;
    const distributedValues = this.distributeValues(total, n, minValue, maxValue);
    let randomSturdypoint = distributedValues[0];
    let randomStamina = distributedValues[1];
    let randomDexterity = distributedValues[2];
    let randomSpiritualintuition = distributedValues[3];
    let randomLuckyvalue = distributedValues[4];
    let randomIntelligence = distributedValues[5];
    let randomFaith = distributedValues[6];
    let randomAttack = distributedValues[7];
    let randomArmourclass = distributedValues[8];
    let randomFaiths = import_koishi.Random.pick(godJson);
    let randomRacist = import_koishi.Random.pick(raceJson);
    if (!dbname) {
      await ctx.database.upsert("role_playing_game", [{
        id: String(session.userId ?? session.member.user.id),
        name: name2
      }]);
    }
    if (!armourclass) {
      await ctx.database.upsert("role_playing_game", [
        {
          id: String(session.userId ?? session.member.user.id),
          name: name2,
          //名称
          level: 0,
          //等级
          status: 1,
          //状态
          healthpoint: 1e3,
          //生命值
          maxhealthpoint: 1e3,
          //最大生命值
          magicpoint: 100,
          //魔力值
          maxmagicpoint: 100,
          //最大魔力值
          sturdypoint: Number(randomSturdypoint),
          //体质
          stamina: Number(randomStamina),
          //耐力
          dexterity: Number(randomDexterity),
          //敏捷
          spiritualintuition: Number(randomSpiritualintuition),
          //灵性直觉
          luckyvalue: Number(randomLuckyvalue),
          //幸运值
          intelligence: Number(randomIntelligence),
          //智力
          faith: Number(randomFaith),
          //信仰
          attack: Number(randomAttack),
          //力量
          armourclass: Number(randomArmourclass),
          //护甲值
          physicaldefense: 0,
          //物理防御力
          magicdefense: 0,
          //魔法防御力
          killnumber: 0,
          //击杀统计
          // coins: 0, //硬币
          kudos: 0,
          //声望
          experiencepoint: 0
          //经验值
        }
      ]);
      await ctx.database.upsert("role_playing_game_attach", [{
        id: String(session.userId ?? session.member.user.id),
        status: 1,
        //状态
        prefix: 0,
        interlocutory: 0,
        suffix: 0,
        skillpoint: 0,
        duels: this.cfg.duels,
        resetproperties: 1,
        skill1: 0,
        skill2: 0,
        skill3: 0,
        primaryweapon: 0,
        secondaryweapon: 0,
        armour: 0,
        racist: Number(randomRacist.id),
        //种族
        faith: Number(randomFaiths.id),
        //信仰
        profession: 0,
        itembar: [],
        // 初始化为空数组
        armourbar: [],
        skillbar: [],
        // 初始化为空数组
        prefixlibrary: []
        // 初始化为空数组
      }]);
      await ctx.database.upsert("role_playing_game_cd", [{
        id: String(session.userId ?? session.member.user.id),
        status: 0,
        //状态
        statuscd: this.dateToTimestamp(time) - 1e5,
        attackcd: this.dateToTimestamp(time) - 1e5,
        duelscd: this.dateToTimestamp(time) - 1e5,
        skillcd: this.dateToTimestamp(time) - 1e5
      }]);
      console.log(parseInt(time, 10));
      logger.info(`${name2}(${session.userId ?? session.member.user.id}) 首次使用，写入数据库！`);
      return {
        "level": level,
        //等级
        "status": status,
        //状态"
        "healthpoint": healthpoint,
        //生命值
        "maxhealthpoint": maxhealthpoint,
        //最大生命值"
        "healthpointEnd": healthpointEnd,
        //最终生命值"
        "magicpoint": magicpoint,
        //魔力值
        "maxmagicpoint": maxmagicpoint,
        //最大魔力值
        "magicpointEnd": magicpointEnd,
        //最终魔力值"
        "sturdypoint": sturdypoint,
        //体质
        "stamina": stamina,
        //耐力
        "dexterity": dexterity,
        //敏捷
        "spiritualintuition": spiritualintuition,
        //灵性直觉
        "luckyvalue": luckyvalue,
        //幸运值
        "intelligence": intelligence,
        //智力
        "faith": faith,
        //信仰
        "profession": profession,
        //职业
        "attack": attack,
        //力量
        "armourclass": armourclass,
        //护甲值
        "physicaldefense": physicaldefense,
        //物理防御力
        "magicdefense": magicdefense,
        //魔法防御力
        "killnumber": killnumber,
        //击杀统计
        "coins": coins,
        //硬币
        "kudos": kudos,
        //声望
        "experiencepoint": experiencepoint,
        //经验值
        "prefix": prefix,
        //前缀
        "interlocutory": interlocutory,
        //中间
        "suffix": suffix,
        //后缀
        "skillpoint": skillpoint,
        //属性点
        "duels": duels,
        "skill1": skill1,
        "skill2": skill2,
        "skill3": skill3,
        "primaryweapon": primaryweapon,
        //主武器
        "secondaryweapon": secondaryweapon,
        //副武器
        "armour": armour,
        //盔甲
        "racist": racist,
        //种族
        "faiths": faiths,
        //信仰
        "itembar": itembar,
        //物品栏
        "armourbar": armourbar,
        //盔甲库
        "skillbar": skillbar,
        //技能栏
        "prefixlibrary": prefixlibrary,
        //前缀库
        "interlocutorylibrary": interlocutorylibrary,
        //称号库
        "suffixlibrary": suffixlibrary,
        //后缀库
        "attackcd": attackcd,
        //攻击冷却
        "duelscd": duelscd
        //决斗冷却
      };
    }
    return {
      "level": level,
      //等级
      "status": status,
      //状态"
      "healthpoint": healthpoint,
      //生命值
      "maxhealthpoint": maxhealthpoint,
      //最大生命值"
      "healthpointEnd": healthpointEnd,
      //最终生命值"
      "magicpoint": magicpoint,
      //魔力值
      "maxmagicpoint": maxmagicpoint,
      //最大魔力值
      "magicpointEnd": magicpointEnd,
      //最终魔力值"
      "sturdypoint": sturdypoint,
      //体质
      "stamina": stamina,
      //耐力
      "dexterity": dexterity,
      //敏捷
      "spiritualintuition": spiritualintuition,
      //灵性直觉
      "luckyvalue": luckyvalue,
      //幸运值
      "intelligence": intelligence,
      //智力
      "faith": faith,
      //信仰
      "profession": profession,
      //职业
      "attack": attack,
      //力量
      "armourclass": armourclass,
      //护甲值
      "physicaldefense": physicaldefense,
      //物理防御力
      "magicdefense": magicdefense,
      //魔法防御力
      "killnumber": killnumber,
      //击杀统计
      "coins": coins,
      //硬币
      "kudos": kudos,
      //声望
      "experiencepoint": experiencepoint,
      //经验值
      "prefix": prefix,
      //前缀
      "interlocutory": interlocutory,
      //中间
      "suffix": suffix,
      //后缀
      "skillpoint": skillpoint,
      //属性点
      "duels": duels,
      "skill1": skill1,
      "skill2": skill2,
      "skill3": skill3,
      "primaryweapon": primaryweapon,
      //主武器
      "secondaryweapon": secondaryweapon,
      //副武器
      "armour": armour,
      //盔甲
      "racist": racist,
      //种族
      "faiths": faiths,
      //信仰
      "itembar": itembar,
      //物品栏
      "armourbar": armourbar,
      //盔甲库
      "skillbar": skillbar,
      //技能栏
      "prefixlibrary": prefixlibrary,
      //前缀库
      "interlocutorylibrary": interlocutorylibrary,
      //称号库
      "suffixlibrary": suffixlibrary,
      //后缀库
      "attackcd": attackcd,
      //攻击冷却
      "duelscd": duelscd
      //决斗冷却
    };
  }
  levelJudge(experiencepoint) {
    for (const levelInfo of levelInfos) {
      if (experiencepoint <= levelInfo.level_line) {
        return levelInfo;
      }
    }
    return levelInfos[levelInfos.length - 1];
  }
  getGodId(id) {
    const god = godJson.find((g) => g.id === id);
    return god || null;
  }
  getRaceId(id) {
    const race = raceJson.find((r) => r.id === id);
    return race || null;
  }
  getSkillsByIds(ids) {
    const skills = skillJson.filter((skill) => ids.includes(skill.id));
    return skills;
  }
  getSkillId(id) {
    const skill = skillJson.find((s) => s.id === id);
    return skill || null;
  }
  getProfessionId(id) {
    const profession = professionJson.find((p) => p.id === id);
    return profession || null;
  }
  getPrefixLibraryId(id) {
    const profession = prefixLibraryJson.find((p) => p.id === id);
    return profession || null;
  }
  getInterlocutorylibraryId(id) {
    const profession = interlocutorylibraryJson.find((i) => i.id === id);
    return profession || null;
  }
  getSuffixlibraryId(id) {
    const profession = suffixlibraryJson.find((s) => s.id === id);
    return profession || null;
  }
  getArsenalId(id) {
    const arsenal = arsenalJson.find((a) => a.id === id);
    return arsenal || null;
  }
  getArmourId(id) {
    const armour = armourJson.find((a) => a.id === id);
    return armour || null;
  }
  seededRandom(seed) {
    let state = seed;
    return function() {
      state = (state * 1664525 + 1013904223) % 4294967296;
      return state / 4294967296;
    };
  }
  getRandomItems(items, count, random, exclude = []) {
    const filteredItems = items.filter((item) => item.id !== 0 && !exclude.includes(item.id));
    const shuffled = filteredItems.slice();
    for (let i = shuffled.length - 1; i > 0; i--) {
      const j = Math.floor(random() * (i + 1));
      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];
    }
    return shuffled.slice(0, count);
  }
  updateShopList() {
    const currentDate = (/* @__PURE__ */ new Date()).toISOString().slice(0, 10);
    const seed = Number(currentDate.split("-").join(""));
    const random = this.seededRandom(seed);
    this.store.arsenals = this.getRandomItems(this.arsenals, 10, random);
    this.store.armour = this.getRandomItems(this.armour, 10, random);
    this.store.skill = this.getRandomItems(this.skill, 10, random);
  }
  getShopList() {
    return this.store;
  }
  dateToTimestamp(dateString) {
    let date = new Date(dateString);
    let timestamp = date.getTime();
    return timestamp;
  }
  distributeValues(total, n, minValue, maxValue) {
    const values = Array(n).fill(minValue);
    let remaining = total - n * minValue;
    for (let i = values.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [values[i], values[j]] = [values[j], values[i]];
    }
    while (remaining > 0) {
      const index = Math.floor(Math.random() * n);
      const maxIncrement = maxValue - values[index];
      if (maxIncrement <= 0)
        continue;
      const increment = Math.min(Math.floor(Math.random() * remaining) + 1, maxIncrement);
      values[index] += increment;
      remaining -= increment;
    }
    return values;
  }
};

// src/index.ts
var fs = __toESM(require("fs"));
var import_path3 = __toESM(require("path"));

// src/menuhtml.ts
var import_path = __toESM(require("path"));
var menuHtml = class {
  static {
    __name(this, "menuHtml");
  }
  async menuimg(sessions, config, ctx) {
    const getdatarpg = new Rpgdata(ctx, config);
    const getrpgjson = await getdatarpg.userdata(sessions, ctx);
    let avatarUrl = sessions.platform == "qq" ? `http://q.qlogo.cn/qqapp/${sessions.bot.config.id}/${sessions.event.user?.id}/640` : sessions.member?.user.avatar ?? sessions.author.avatar;
    const img = import_path.default.join(__dirname, "/img/img.jpg").replace(/\\/g, "/");
    const textfont = import_path.default.join(__dirname, "/font/pixel.ttf").replace(/\\/g, "/");
    const healthpoint = getrpgjson.healthpoint;
    const magicpoint = getrpgjson.magicpoint;
    const maxmagicpoint = getrpgjson.maxmagicpoint;
    const sturdypoint = getrpgjson.sturdypoint;
    const stamina = getrpgjson.stamina;
    const dexterity = getrpgjson.dexterity;
    const spiritualintuition = getrpgjson.spiritualintuition;
    const luckyvalue = getrpgjson.luckyvalue;
    const intelligence = getrpgjson.intelligence;
    const faith = getrpgjson.faith;
    const attack = getrpgjson.attack;
    const armourclass = getrpgjson.armourclass;
    const physicaldefense = getrpgjson.physicaldefense;
    const magicdefense = getrpgjson.magicdefense;
    const killnumber = getrpgjson.killnumber;
    const coins = getrpgjson.coins;
    const kudos = getrpgjson.kudos;
    const experiencepoint = getrpgjson.experiencepoint;
    const prefix = getrpgjson.prefix;
    const interlocutory = getrpgjson.interlocutory;
    const suffix = getrpgjson.suffix;
    const skillpoint = getrpgjson.skillpoint;
    const skill1 = getrpgjson.skill1;
    const skill2 = getrpgjson.skill2;
    const skill3 = getrpgjson.skill3;
    const primaryweapon = getrpgjson.primaryweapon;
    const secondaryweapon = getrpgjson.secondaryweapon;
    const armour = getrpgjson.armour;
    const racist = getrpgjson.racist;
    const faiths = getrpgjson.faiths;
    const profession = getrpgjson.profession;
    const itembar = getrpgjson.itembar;
    const skillbar = getrpgjson.skillbar;
    const levelold = getrpgjson.level;
    const lvline = getdatarpg.levelJudge(Number(experiencepoint)).level_line;
    const level = getdatarpg.levelJudge(Number(experiencepoint)).level;
    const getRace = getdatarpg.getRaceId(Number(racist));
    const getRaceName = getRace.name;
    let getRaceInnateskill1 = `${getRace.innateskill1}:<br>${getRace.innateskill1info1}`;
    let getRaceInnateskill2 = `${getRace.innateskill2}:<br>${getRace.innateskill1info2}`;
    let getRaceInnateskill3 = `${getRace.innateskill3}:<br>${getRace.innateskill1info3}`;
    const getSkill1 = getdatarpg.getSkillId(Number(skill1));
    const getSkill2 = getdatarpg.getSkillId(Number(skill2));
    const getSkill3 = getdatarpg.getSkillId(Number(skill3));
    let getSkill1Name1 = `${getSkill1.name}:<br>${getSkill1.skillinfo}${getSkill1.attckinfo},${getSkill1.endinfo}`;
    if (skill1 === 0) {
      getSkill1Name1 = "无技能";
    }
    let getSkill2Name1 = `${getSkill2.name}:<br>${getSkill2.skillinfo}${getSkill2.attckinfo},${getSkill2.endinfo}`;
    if (skill2 === 0) {
      getSkill2Name1 = "无技能";
    }
    let getSkill3Name1 = `${getSkill3.name}:<br>${getSkill3.skillinfo}${getSkill3.attckinfo},${getSkill3.endinfo}`;
    if (skill3 === 0) {
      getSkill3Name1 = "无技能";
    }
    const getPrefix = getdatarpg.getPrefixLibraryId(Number(prefix));
    let getPrefixName;
    if (getPrefix.id === 0) {
      getPrefixName = "";
    } else {
      getPrefixName = getPrefix.name + "•";
    }
    const getinterlocutory = getdatarpg.getInterlocutorylibraryId(Number(interlocutory));
    let getinterlocutoryName;
    if (getinterlocutory.id === 0) {
      getinterlocutoryName = "";
    } else {
      getinterlocutoryName = getinterlocutory.name;
    }
    const getSuffix = getdatarpg.getSuffixlibraryId(Number(suffix));
    let getSuffixName;
    if (getSuffix.id === 0) {
      getSuffixName = "";
    } else {
      getSuffixName = "&#x2020;" + getSuffix.name + "&#x2020;";
    }
    const getPrimaryweapon = getdatarpg.getArsenalId(Number(primaryweapon));
    let getPrimaryweaponName;
    let getPrimaryweaponPath;
    if (getPrimaryweapon.id === 0) {
      getPrimaryweaponName = "未装备武器";
      getPrimaryweaponPath = import_path.default.join(__dirname, getPrimaryweapon.path).replace(/\\/g, "/");
    } else {
      getPrimaryweaponName = getPrimaryweapon.name;
      getPrimaryweaponPath = import_path.default.join(__dirname, getPrimaryweapon.path).replace(/\\/g, "/");
    }
    const getSecondaryweapon = getdatarpg.getArsenalId(Number(secondaryweapon));
    let getSecondaryweaponName;
    let getSecondaryweaponPath;
    if (getSecondaryweapon.id === 0) {
      getSecondaryweaponName = "未装备武器";
      getSecondaryweaponPath = import_path.default.join(__dirname, getSecondaryweapon.path).replace(/\\/g, "/");
    } else {
      getSecondaryweaponName = getSecondaryweapon.name;
      getSecondaryweaponPath = import_path.default.join(__dirname, getSecondaryweapon.path).replace(/\\/g, "/");
    }
    const getArmour = getdatarpg.getArmourId(Number(armour));
    let getArmourName;
    let getArmourPath;
    if (getArmour.id === 0) {
      getArmourName = "未装备衣物";
      getArmourPath = import_path.default.join(__dirname, getArmour.path).replace(/\\/g, "/");
    } else {
      getArmourName = getArmour.name;
      getArmourPath = import_path.default.join(__dirname, getArmour.path).replace(/\\/g, "/");
    }
    const getProfession = getdatarpg.getProfessionId(Number(profession));
    let getProfessionName = getProfession.name;
    const getGod = getdatarpg.getGodId(Number(faiths));
    let getGodHead = getGod.godhead;
    let getGodName = getGod.name;
    let staminaEnd = getrpgjson.stamina + getRace.stamina + getPrimaryweapon.stamina + Math.round(getSecondaryweapon.stamina / 2) + getArmour.stamina + getGod.stamina + getProfession.stamina + getPrefix.stamina + getinterlocutory.stamina + getSuffix.stamina;
    if (staminaEnd < 0) {
      staminaEnd = 0;
    }
    let physicaldefenseEnd = getrpgjson.physicaldefense + getRace.physicaldefense + getPrimaryweapon.physicaldefense + Math.round(getSecondaryweapon.physicaldefense / 2) + getArmour.physicaldefense + getGod.physicaldefense + getProfession.physicaldefense + getPrefix.physicaldefense + getinterlocutory.physicaldefense + getSuffix.physicaldefense + Math.round(staminaEnd * 0.5);
    let magicdefenseEnd = getrpgjson.magicdefense + getRace.magicdefense + getPrimaryweapon.magicdefense + Math.round(getSecondaryweapon.magicdefense / 2) + getArmour.magicdefense + getGod.magicdefense + getProfession.magicdefense + getPrefix.magicdefense + getinterlocutory.magicdefense + getSuffix.magicdefense + Math.round(staminaEnd * 0.3);
    if (physicaldefenseEnd > 70) {
      physicaldefenseEnd = 70;
    } else if (physicaldefenseEnd < 0) {
      physicaldefenseEnd = 0;
    }
    if (magicdefenseEnd > 70) {
      magicdefenseEnd = 70;
    } else if (magicdefenseEnd < 0) {
      magicdefenseEnd = 0;
    }
    let sturdypointEnd = getrpgjson.sturdypoint + getRace.sturdypoint + getPrimaryweapon.sturdypoint + Math.round(getSecondaryweapon.sturdypoint / 2) + getArmour.sturdypoint + getGod.sturdypoint + getProfession.sturdypoint + getPrefix.sturdypoint + getinterlocutory.sturdypoint + getSuffix.sturdypoint;
    if (sturdypointEnd < 0) {
      sturdypointEnd = 0;
    }
    let dexterityEnd = getrpgjson.dexterity + getRace.dexterity + getPrimaryweapon.dexterity + Math.round(getSecondaryweapon.dexterity / 2) + getArmour.dexterity + getGod.dexterity + getProfession.dexterity + getPrefix.dexterity + getinterlocutory.dexterity + getSuffix.dexterity;
    if (dexterityEnd < 0) {
      dexterityEnd = 0;
    }
    let spiritualintuitionEnd = getrpgjson.spiritualintuition + getRace.spiritualintuition + getPrimaryweapon.spiritualintuition + Math.round(getSecondaryweapon.spiritualintuition / 2) + getArmour.spiritualintuition + getGod.spiritualintuition + getProfession.spiritualintuition + getPrefix.spiritualintuition + getinterlocutory.spiritualintuition + getSuffix.spiritualintuition;
    if (spiritualintuitionEnd < 0) {
      spiritualintuitionEnd = 0;
    }
    let luckyvalueEnd = getrpgjson.luckyvalue + getRace.luckyvalue + getPrimaryweapon.luckyvalue + Math.round(getSecondaryweapon.luckyvalue / 2) + getArmour.luckyvalue + getGod.luckyvalue + getProfession.luckyvalue + getPrefix.luckyvalue + getinterlocutory.luckyvalue + getSuffix.luckyvalue;
    if (luckyvalueEnd < 0) {
      luckyvalueEnd = 0;
    }
    let intelligenceEnd = getrpgjson.intelligence + getRace.intelligence + getPrimaryweapon.intelligence + Math.round(getSecondaryweapon.intelligence / 2) + getArmour.intelligence + getGod.intelligence + getProfession.intelligence + getPrefix.intelligence + getinterlocutory.intelligence + getSuffix.intelligence;
    if (intelligenceEnd < 0) {
      intelligenceEnd = 0;
    }
    let faithEnd = getrpgjson.faith + getRace.faith + getPrimaryweapon.faith + Math.round(getSecondaryweapon.faith / 2) + getArmour.faith + getGod.faith + getProfession.faith + getPrefix.faith + getinterlocutory.faith + getSuffix.faith;
    if (faithEnd < 0) {
      faithEnd = 0;
    }
    let attackEnd = getrpgjson.attack + getRace.attack + getPrimaryweapon.attack + Math.round(getSecondaryweapon.attack / 2) + getArmour.attack + getGod.attack + getProfession.attack + getPrefix.attack + getinterlocutory.attack + getSuffix.attack;
    if (attackEnd < 0) {
      attackEnd = 0;
    }
    let armourclassEnd = getrpgjson.armourclass + getRace.armourclass + getPrimaryweapon.armourclass + Math.round(getSecondaryweapon.armourclass / 2) + getArmour.armourclass + getGod.armourclass + getProfession.armourclass + getPrefix.armourclass + getinterlocutory.armourclass + getSuffix.armourclass;
    if (armourclassEnd < 0) {
      armourclassEnd = 0;
    }
    const healthpointEnd = getrpgjson.maxhealthpoint + getRace.healthpoint + getPrimaryweapon.healthpoint + Math.round(getSecondaryweapon.healthpoint / 2) + getArmour.healthpoint + getGod.healthpoint + getProfession.healthpoint + getPrefix.healthpoint + getinterlocutory.healthpoint + getSuffix.healthpoint + sturdypointEnd * 10;
    const maxmagicpointEnd = getrpgjson.maxmagicpoint + getRace.maxmagicpoint + getPrimaryweapon.maxmagicpoint + Math.round(getSecondaryweapon.maxmagicpoint / 2) + getArmour.maxmagicpoint + getGod.maxmagicpoint + getProfession.maxmagicpoint + getPrefix.maxmagicpoint + getinterlocutory.maxmagicpoint + getSuffix.maxmagicpoint + intelligenceEnd * 5;
    let newskillpoint = Number((level - levelold) * 5);
    let exppoint = (Number(experiencepoint) / lvline * 100).toFixed(3).toString();
    const lifepoint = (Number(healthpoint) / healthpointEnd * 100).toFixed(3).toString();
    const molizi = (Number(magicpoint) / maxmagicpointEnd * 100).toFixed(3).toString();
    await ctx.database.upsert("role_playing_game_attach", [{
      id: String(sessions.userId ?? sessions.member.user.id),
      skillpoint: skillpoint + newskillpoint
    }]);
    await ctx.database.upsert("role_playing_game", [{
      id: String(sessions.userId ?? sessions.member.user.id),
      level,
      healthpointEnd,
      magicpointEnd: maxmagicpointEnd
    }]);
    let newskillpoints = (await ctx.database.get("role_playing_game_attach", { id: String(sessions.userId ?? sessions.member.user.id) }))[0]?.skillpoint;
    let name2;
    if (ctx.database) {
      name2 = sessions.username ?? sessions.member?.nick;
      if (name2.length <= 0) {
        name2 = sessions.user.name;
      }
      if (name2 === void 0) {
        name2 = sessions.user.name;
      }
    }
    if (!name2) {
      name2 = sessions.author?.name ?? sessions.member?.nick;
      if (name2.length <= 0) {
        name2 = sessions.user.name;
      }
      if (name2 === void 0) {
        name2 = sessions.user.name;
      }
    }
    name2 = name2.length > 8 ? name2.substring(0, 8 - 1) + "…" : name2;
    let statuscd = (await ctx.database.get("role_playing_game_cd", { id: String(sessions.userId) }))[0]?.status;
    let status;
    if (getrpgjson.status === 1) {
      status = `☺`;
    } else {
      status = `☹`;
    }
    if (statuscd === 1) {
      status = `☼`;
    }
    const httpContent = `
        <!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>角色面板</title>
    <style>
    @font-face {
        font-family: "pixel";
        src: url("${textfont}") format("truetype");
        }
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            background-color: #ffffff;
            background-image: url('${img}'); /* 设置背景图片 */
            background-size: cover;  /* 图片覆盖整个背景区域 */
            background-repeat: no-repeat; /* 不重复图片 */
            background-position: center center; /* 居中对齐图片 */
        }
        .container {
            padding: 20px; /* 父元素的内边距 */
        }
        .profile-card {
            border-radius: 50px;
            position: relative;
            /*width: 100%; !* 适当的宽度 *!*/
            max-height: 2000px; /* 适当的高度 */
            background-color: rgba(61, 58, 58, 0.2); /* 背景颜色 */
            margin: 50px 20px 10px 20px; /* 居中 */
            padding: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* 阴影效果 */
        }
        .title-word {
            font-size: 80px;
            text-align: center;
            color: rgb(0,0,0);
        }
        .caption {
            border-radius: 20px;
            margin: auto;
            width: 70%;
            height: 20px;
            background-color: rgba(0,0,0,0.8);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* 阴影效果 */
        }
        .flex-container {
            display: flex; /* 使用 Flexbox 布局 */
            justify-content: space-between; /* 在主轴上均匀分布 */
            align-items: flex-start; /* 在交叉轴上从顶部对齐 */
            margin-top: 20px; /* 额外的顶部外边距，确保从顶部开始排列 */
        }
        .profile-backcard {
            /*display: flex; !* 使用 Flexbox 布局 *!*/
            /*justify-content: space-between; !* 在主轴上均匀分布 *!*/
            align-items: flex-start; /* 在交叉轴上从顶部对齐 */
            margin: 20px; /* 额外的顶部外边距，确保从顶部开始排列 */
            padding: 10px;
            border-radius: 50px;
            width: 60%; /* 设置不同的宽度，例如 60% */
            max-height: 900px; /* 适当的高度 */
            background-color: rgba(255,255,255,0.2); /* 背景颜色 */
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* 阴影效果 */
        }
        .profile-rightbackcard {
            /*display: flex; !* 使用 Flexbox 布局 *!*/
            /*justify-content: space-between; !* 在主轴上均匀分布 *!*/
            /*align-items: flex-start; !* 在交叉轴上从顶部对齐 *!*/
            margin: 20px;
            padding: 10px;
            border-radius: 50px;
            width: 35%; /* 设置不同的宽度，例如 35% */
            max-height: 600px; /* 适当的高度 */
            background-color: rgba(236, 230, 233, 0.2); /* 背景颜色 */
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* 阴影效果 */
        }
        .profile-card img {
            width: 100%;
        }
        .avatar {
            /*margin: 20px 0 0 20px;*/
            max-width: 262px;
            max-height: 262px;
            border-radius: 10px;
            border: 10px solid #fff;
            background: #fff;
        }
        .level-bar {
            padding: 40px 0 0 40px;
            display: flex;
            align-items: flex-start;
            gap: 20px; /* 增加图片和进度条之间的间距 */
        }
        .level-bar .bar-container {
            width: 100%;
            background: rgba(79,76,76,0.23);
            border-radius: 15px;
            overflow: hidden;
            position: static;
            margin: 10px auto;
        }
        .group {
            width: 100%; /* 适当的宽度 */
            height: 60%; /* 适当的高度 */
            background-color: rgba(236,230,233,0.21); /* 背景颜色 */
            border-radius: 15px;
            padding: 0 20px 0 20px;
            display: flex;
            /*align-items: center;*/
            flex-direction: column;
            margin: 0 20px 0 0;
        }
        .group2 {
            width: 60%; /* 适当的宽度 */
            height: 60%; /* 适当的高度 */
            background-color: rgba(236,230,233,0.21);
            border-radius: 15px;
            padding: 10px 20px 0 0;
            display: flex;
            align-items: flex-start;
            flex-direction: column;
            /*margin: 0 20px 20px 0;*/
        }
        .group7{
            max-width: 100%; /* 适当的宽度 */
            height: 60%; /* 适当的高度 */
            /*padding: 0 20px 0 0;*/
            display: flex;
            flex-direction: row;
            align-items: flex-end;
            /*gap: 80px; !* 增加图片和进度条之间的间距 *!*/
        }
        .group .group7{
            max-width: 100%; /* 适当的宽度 */
            height: 60%; /* 适当的高度 */
            padding: 0 20px 0 0;
            display: flex;
            flex-direction: row;
            align-items: flex-end;
            gap: 80px; /* 增加图片和进度条之间的间距 */
        }
        .group7 .text2{
            /*max-width: 100%; !* 适当的宽度 *!*/
            color: #000000;
            font-size: 40px;
            gap: 80px; /* 增加图片间距 */
            padding: 0 0 0 0;
        }
        .group3 {
            max-width: 100%; /* 适当的宽度 */
            height: 60%; /* 适当的高度 */
            background-color: rgba(236,230,233,0.21);
            border-radius: 15px;
            padding: 5px 0 5px 20px;
            margin-top: 10px;
            margin-bottom: 22px;
            display: flex;
            align-items: flex-start;
            flex-direction: column;
        }
        .group5 {
            max-width: 100%; /* 适当的宽度 */
            height: 60%; /* 适当的高度 */
            background-color: rgba(236,230,233,0.21);
            border-radius: 15px;
            padding: 5px 0 5px 20px;
            margin-top: 10px;
            margin-bottom: 22px;
            display: flex;
            align-items: flex-start;
            flex-direction: column;
        }
        .group4 {
            width: 100%; /* 适当的宽度 */
            height: 60%; /* 适当的高度 */
            padding: 0 20px 0 10px;
            display: flex;
            align-items: flex-start;
            flex-direction: column;
        }
        .group2 .group3 {
            width: 100%; /* 适当的宽度 */
            height: 60%; /* 适当的高度 */
            background-color: rgba(236,230,233,0);
            border-radius: 15px;
            padding: 20px 0 0 10px;
            margin-bottom: 10px;
            display: flex;
            align-items: flex-start;
            flex-direction: column;
        }
        .text-container {
            padding: 0 20px 0 20px;
            display: flex;
            justify-content: center;
            gap: 5px; /* 增加图片和进度条之间的间距 */
        }
        .text {
            /*text-align: center;*/
            font-family:'pixel';
            color: #000000;
            font-size: 45px;
            padding: 5px;
            margin: 4px;
        }
        .text2 {
            color: #000000;
            font-size: 40px;
            padding: 0 10px 0 0;
        }
        .text3 {
            /*text-align: center;*/
            width: 100%;
            height: auto;
            color: #000000;
            font-size: 30px;
            padding: 10px;
            /*margin: 10px auto;*/
            overflow: hidden; /* 隐藏溢出内容 */
            text-overflow: ellipsis; /* 使用省略号表示溢出部分 */
            /*border: 1px solid #000; !* 可选：添加边框以便更容易看到效果 *!*/
        }
        .text4 {
            color: rgba(0,0,0,0.6);
            font-size: 24px;
            padding: 0 10px 0 0;
            display: flex;
            flex-direction: row-reverse;
        }
        .text5 {
            /*text-align: center;*/
            font-family:'pixel',serif;
            width: 100%;
            height: auto;
            color: #000000;
            font-size: 40px;
            text-align: center;
            padding: 10px;
            /*margin: 10px auto;*/
            overflow: hidden; /* 隐藏溢出内容 */
            text-overflow: ellipsis; /* 使用省略号表示溢出部分 */
            /*border: 1px solid #000; !* 可选：添加边框以便更容易看到效果 *!*/
        }
        .level-bar .progress {
            width: calc(${lifepoint}%);
            height: 30px;
            font-size: 20px;
            background-color: rgba(255,0,0,0.6);
            border-radius: 15px;
            border: 1px solid rgb(255,115,115);
            display: flex;
            align-items: center;
            justify-content: center;
            color: #000;
            transition: width 0.3s;
        }
        .level-bar .magicpoint {
            width: calc(${molizi}%);
            height: 30px;
            font-size: 20px;
            background-color: rgba(0,153,153,0.6);
            border-radius: 15px;
            border: 1px solid rgb(92,204,204);
            display: flex;
            align-items: center;
            justify-content: center;
            color: #000;
            transition: width 0.3s;
        }
        .level-bar .exp {
            width: calc(${exppoint}%);
            height: 30px;
            font-size: 20px;
            /*margin-bottom: 10px;*/
            background: rgba(0,193,43,0.6);
            border-radius: 15px;
            border: 1px solid rgb(101,224,128);
            display: flex;
            align-items: center;
            justify-content: center;
            color: #000;
            transition: width 0.3s;
        }
        .name-container {
            /*padding: 40px 40px 0 40px;*/
            width: 100%; /* 适当的宽度 */
            display: flex;
            align-items: flex-start;
            gap: 10px; /* 增加图片和进度条之间的间距 */
        }
        .name {
            color: #000000;
            max-width: 100%; /* 适当的宽度 */
            font-size: 40px;
            font-weight: bold;
            padding: 10px;
            margin: 0 0 0 40px;
        }
        .name2 {
            color: #000000;
            max-width: 100%; /* 适当的宽度 */
            font-size: 40px;
            font-weight: bold;
            padding: 10px;
            margin: 0 0 0 10px;
        }
        .kill {
            color: #000000;
            font-size: 45px;
            /*padding: 10px;*/
            margin: 0 0 0 10%;
            /*text-align: center;*/
        }
        .title {
            color: #000000;
            font-size: 40px;
            padding: 0 0 10px 0;
            margin: 10px 0 0 0;
            /*display: flex;*/
            /*align-items: center;*/
            text-align: center;
        }
        .flex-container1 {
            display: flex; /* 使用 Flexbox 布局 */
            justify-content: space-between; /* 在主轴上均匀分布 */
            align-items: flex-start; /* 在交叉轴上从顶部对齐 */
            margin: 0 20px 20px 20px;
        }
        .profile-card1 {
            align-items: flex-start; /* 在交叉轴上从顶部对齐 */
            margin: 0 20px 20px 0; /* 额外的顶部外边距，确保从顶部开始排列 */
            padding: 10px;
            border-radius: 50px;
            width: 60%; /* 设置不同的宽度，例如 60% */
            max-height: 900px; /* 适当的高度 */
            background-color: rgba(255,255,255,0.2); /* 背景颜色 */
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* 阴影效果 */
        }
        .profile-card1 .group7{
            width: 100%; /* 适当的宽度 */
            height: 30%; /* 适当的高度 */
            background-color: rgba(82,80,80,0.3); /* 背景颜色 */
            border-radius: 15px;
            padding: 0 0 0 0;
            display: flex;
            align-items: center;
            flex-direction: column;
            margin: 10px 20px 0 20px;
        }
        .profile-card1 .text3 {
            text-align: center;
            /*width: 100%;*/
            height: auto;
            color: #000000;
            font-size: 25px;
            padding: 5px;
            margin-bottom: 5px;
            /*overflow: hidden; !* 隐藏溢出内容 *!*/
            /*text-overflow: ellipsis; !* 使用省略号表示溢出部分 *!*/
            /*border: 1px solid #000; !* 可选：添加边框以便更容易看到效果 *!*/
        }
        .profile-card1 .avatar {
            /*margin: 20px 0 0 20px;*/
            width: 250px;
            height: 250px;
            border-radius: 10px;
            border: 10px solid #fff;
            background: #fff;
        }
        .profile-card2 {
            margin: 0 20px 20px 20px;
            padding: 10px;
            border-radius: 50px;
            width: 35%; /* 设置不同的宽度，例如 35% */
            max-height: 800px; /* 适当的高度 */
            background-color: rgba(236, 230, 233, 0.2); /* 背景颜色 */
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* 阴影效果 */
        }
        .profile-card3 {
            margin: 0 0 20px 20px;
            padding: 10px;
            border-radius: 50px;
            width: 35%; /* 设置不同的宽度，例如 35% */
            max-height: 600px; /* 适当的高度 */
            background-color: rgba(236, 230, 233, 0.2); /* 背景颜色 */
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* 阴影效果 */
        }
        .group6 {
            /*width: 100%; !* 适当的宽度 *!*/
            max-height: 50%; /* 适当的高度 */
            background-color: rgba(82,80,80,0.3); /* 背景颜色 */
            border-radius: 15px;
            padding: 0 10px 0 10px;
            display: flex;
            align-items: flex-start;
            flex-direction: column;
            margin: 10px 20px 0 20px;
        }
        .profile-card3 .text {
            /*text-align: center;*/
            color: #000000;
            font-size: 40px;
            padding: 2px;
        }
        .profile-card3 .text-container {
            padding: 0 20px 0 20px;
            display: flex;
            align-items: flex-start;
            flex-direction: column;
            /*gap: 20px; !* 增加图片和进度条之间的间距 *!*/
        }
        .title-word1 {
            font-size: 50px;
            text-align: center;
            color: rgb(0,0,0);
        }
        .caption1 {
            border-radius: 20px;
            margin: auto;
            width: 90%;
            height: 5px;
            background-color: rgba(54,52,52,0.6);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* 阴影效果 */
        }
        .credit {
            text-align: center;
            color: #999;
            font-size: 40px;
            padding: 10px;
        }
    </style>
</head>
<body id="body">
    <div class="container">
        <div class="profile-card">
            <div class="title-word"><strong>♦Menu♦</strong></div>
            <div class="caption"></div>
            <div class="flex-container">
                <div class="profile-backcard">
                    <div class="title-word1"><strong>角色状态栏𖨠</strong></div>
                    <div class="caption1"></div>
                    <div class="level-bar">
                        <img class="avatar" src="${avatarUrl}" alt="Avatar">
                        <div class="group2">
                        <div class="group4">
                        <div class="text2"><span style="font-family: pixel,serif"><strong>⚬信仰所属⚬<br>${getGodHead}${getGodName}</strong></span></div>
                        </div>
                        <div class="group3">
                        <div class="text2">HP❤:<span style="font-family: pixel,serif"><strong>${healthpoint}/${healthpointEnd}</strong></span></div>
                        <div class="text2">MP◆:<span style="font-family: pixel,serif"><strong>${magicpoint}/${maxmagicpointEnd}</strong></span></div>
                        <div class="text2">AP⬤:<span style="font-family: pixel,serif"><strong>${newskillpoints}</strong></span></div>
                        </div>
                        </div>
                        <div class="group">
                        <div class="title">${getPrefixName}${getinterlocutoryName}${getSuffixName}</div>
                        <div class="group7">
                        <div class="text2"><span style="font-family: pixel,serif"><strong>Lv▸${level}</strong></span></div>
                        <div class="text2"><span style="font-family: pixel,serif"><strong>种族◉:${getRaceName}</strong></span></div>
                        </div>
                        <div class="bar-container">
                            <div class="progress"></div>
                        </div>
                        <div class="bar-container">
                            <div class="magicpoint"></div>
                        </div>
                        <div class="bar-container">
                            <div class="exp"></div>
                        </div>
                        <div class="text4"><span style="font-family: pixel,serif"><strong>${experiencepoint}/${lvline}✦</strong></span></div>
                        </div>
                    </div>
                    <div class="name-container">
                    <div class="name">冒险铭牌⛉:<span style="font-family: pixel,serif"><strong>${name2} 『${status}』</strong></span></div>
                    <div class="name2">硬币数✾:<span style="font-family: pixel,serif"><strong>${coins}</strong></span></div>
                    <div class="name2">声望值❁:<span style="font-family: pixel,serif"><strong>${kudos}</strong></span></div>
                    <div class="name2">职业🌒:<span style="font-family: pixel,serif"><strong>${getProfessionName}</strong></span></div>
                    </div>
                </div>
                <div class="profile-rightbackcard">
                    <div class="title-word1"><strong>属性栏⚅</strong></div>
                    <div class="caption1"></div>
                    <div class="text-container">
                        <div class="group3">
                            <div class="text"><strong>力量:${attackEnd}『${attack}』</strong></div>
                            <div class="text"><strong>护甲:${armourclassEnd}『${armourclass}』</strong></div>
                            <div class="text"><strong>体质:${sturdypointEnd}『${sturdypoint}』</strong></div>
                            <div class="text"><strong>耐力:${staminaEnd}『${stamina}』</strong></div>
                            <div class="text"><strong>智力:${intelligenceEnd}『${intelligence}』</strong></div>
                            <div class="text"><strong>敏捷:${dexterityEnd}『${dexterity}』</strong></div>
                        </div>
                        <div class="group5">
                            <div class="text"><strong>幸运:${luckyvalueEnd}『${luckyvalue}』</strong></div>
                            <div class="text"><strong>信仰:${faithEnd}『${faith}』</strong></div>
                            <div class="text"><strong>灵性直觉:${spiritualintuitionEnd}『${spiritualintuition}』</strong></div>
                            <div class="text"><strong>物理抗性:${physicaldefenseEnd}『${physicaldefense}』</strong></div>
                            <div class="text"><strong>魔法抗性:${magicdefenseEnd}『${magicdefense}』</strong></div>
                            <div class="text"><strong>击杀数:${killnumber}</strong></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="flex-container1">
            <div class="profile-card1">
            <div class="title-word1"><strong>装备栏⛊</strong></div>
            <div class="caption1"></div>
            <div class="text-container">
                <div class="group7">
                <div class="text5"><strong>主手武器</strong></div>
                <img class="avatar" src="${getPrimaryweaponPath}" alt="Avatar">
                <div class="text5">【${getPrimaryweaponName}】</div>
                </div>
                <div class="group7">
                <div class="text5"><strong>副手武器</strong></div>
                <img class="avatar" src="${getSecondaryweaponPath}" alt="Avatar">
                <div class="text5">【${getSecondaryweaponName}】</div>
                </div>
                <div class="group7">
                <div class="text5"><strong>盔甲</strong></div>
                <img class="avatar" src="${getArmourPath}" alt="Avatar">
                <div class="text5">【${getArmourName}】</div>
                </div>
            </div>
            </div>
            <div class="profile-card2">
            <div class="title-word1"><strong>技能栏☨</strong></div>
            <div class="caption1"></div>
            <div class="group6">
                    <div class="text3"><span style="font-family: pixel,serif"><strong>${getSkill1Name1}</strong></span></div>
                </div>
                <div class="group6">
                    <div class="text3"><span style="font-family: pixel,serif"><strong>${getSkill2Name1}</strong></span></div>
                </div>
                <div class="group6">
                    <div class="text3"><span style="font-family: pixel,serif"><strong>${getSkill3Name1}</strong></span></div>
                </div>
            </div>
            <div class="profile-card3">
                <div class="title-word1"><strong>天赋栏♜</strong></div>
                <div class="caption1"></div>
                <div class="group6">
                    <div class="text3"><span style="font-family: pixel,serif"><strong>${getRaceInnateskill1}</strong></span></div>
                </div>
                <div class="group6">
                    <div class="text3"><span style="font-family: pixel,serif"><strong>${getRaceInnateskill2}</strong></span></div>
                </div>
                <div class="group6">
                    <div class="text3"><span style="font-family: pixel,serif"><strong>${getRaceInnateskill3}</strong></span></div>
                </div>
            </div>
            </div>
        </div>
    </div>
    <footer class="credit">AXLMLYRPG / AXLMLY</footer>
</body>
</html>
    `;
    return {
      "httpContent": httpContent,
      "healthpointEnd": healthpointEnd,
      "maxmagicpointEnd": maxmagicpointEnd,
      "sturdypointEnd": sturdypointEnd,
      "staminaEnd": staminaEnd,
      "dexterityEnd": dexterityEnd,
      "spiritualintuitionEnd": spiritualintuitionEnd,
      "luckyvalueEnd": luckyvalueEnd,
      "intelligenceEnd": intelligenceEnd,
      "faithEnd": faithEnd,
      "attackEnd": attackEnd,
      "armourclassEnd": armourclassEnd,
      "physicaldefenseEnd": physicaldefenseEnd,
      "magicdefenseEnd": magicdefenseEnd
    };
  }
};

// src/duelshtml.ts
var import_path2 = __toESM(require("path"));

// src/battle.ts
function createPlayer(name2, avatarUrl, hp, mp, attack, sturdypoint, dexterity, luckyvalue, spiritualintuition, stamina, intelligence, faith, armourclass, physicaldefense, magicaldefense, criticalhit, Skillid1, Skillname1, Skillharm1, Skilltypes1, Skillskillinfo1, Skillattckinfo1, Skillendinfo1, getSkill1consumptionofmagic, Skillid2, Skillname2, Skillharm2, Skilltypes2, Skillskillinfo2, Skillattckinfo2, Skillendinfo2, getSkill2consumptionofmagic, Skillid3, Skillname3, Skillharm3, Skilltypes3, Skillskillinfo3, Skillattckinfo3, Skillendinfo3, getSkill3consumptionofmagic, getPrimaryweaponname1, getPrimaryweaponharm1, getPrimaryweapontypes1, getPrimaryweaponfightkirelease1, getPrimaryweaponmagicrelease1, getSecondaryweaponname1, getSecondaryweaponharm1, getSecondaryweapontypes1, getSecondaryweaponfightkirelease1, getSecondaryweaponmagicrelease1) {
  return {
    name: name2,
    hp,
    mp,
    avatarUrl,
    attack,
    sturdypoint,
    dexterity,
    luckyvalue,
    spiritualintuition,
    stamina,
    intelligence,
    faith,
    armourclass,
    physicaldefense,
    magicaldefense,
    criticalhit,
    Skillid1,
    Skillname1,
    Skillharm1,
    Skilltypes1,
    Skillskillinfo1,
    Skillattckinfo1,
    Skillendinfo1,
    getSkill1consumptionofmagic,
    Skillid2,
    Skillname2,
    Skillharm2,
    Skilltypes2,
    Skillskillinfo2,
    Skillattckinfo2,
    Skillendinfo2,
    getSkill2consumptionofmagic,
    Skillid3,
    Skillname3,
    Skillharm3,
    Skilltypes3,
    Skillskillinfo3,
    Skillattckinfo3,
    Skillendinfo3,
    getSkill3consumptionofmagic,
    getPrimaryweaponname: getPrimaryweaponname1,
    getPrimaryweaponharm: getPrimaryweaponharm1,
    getPrimaryweapontypes: getPrimaryweapontypes1,
    getPrimaryweaponfightkirelease: getPrimaryweaponfightkirelease1,
    getPrimaryweaponmagicrelease: getPrimaryweaponmagicrelease1,
    getSecondaryweaponname: getSecondaryweaponname1,
    getSecondaryweaponharm: getSecondaryweaponharm1,
    getSecondaryweapontypes: getSecondaryweapontypes1,
    getSecondaryweaponfightkirelease: getSecondaryweaponfightkirelease1,
    getSecondaryweaponmagicrelease: getSecondaryweaponmagicrelease1
  };
}
__name(createPlayer, "createPlayer");
function getRandomAction() {
  const actions = [
    // { action: '近身攻击', weight: 0.05 }, // 10% 概率
    { action: "武器攻击", weight: 0.4 },
    // 60% 概率
    { action: "技能攻击", weight: 0.6 }
    // 40% 概率
  ];
  const totalWeight = actions.reduce((sum, action) => sum + action.weight, 0);
  let random = Math.random() * totalWeight;
  for (const action of actions) {
    if (random < action.weight) {
      return action.action;
    }
    random -= action.weight;
  }
  return actions[0].action;
}
__name(getRandomAction, "getRandomAction");
function simulateBattle(player1, player2) {
  const battleLogs = [];
  let round = 0;
  const maxRounds = 50;
  const hurt101 = Math.round(0.7 * player1.sturdypoint) + player1.attack;
  const hurt102 = hurt101 * 1.3;
  const hurt201 = Math.round(0.7 * player2.sturdypoint) + player2.attack;
  const hurt202 = hurt201 * 1.3;
  const hurt103 = Math.round(player1.attack * 1.7 + 0.7 * player1.sturdypoint + player1.Skillharm1);
  const hurt104 = hurt103 * 1.5;
  const hurt105 = Math.round(player1.attack * 1.7 + 0.7 * player1.sturdypoint + player1.Skillharm2);
  const hurt106 = hurt105 * 1.5;
  const hurt107 = Math.round(player1.attack * 1.7 + 0.7 * player1.sturdypoint + player1.Skillharm3);
  const hurt108 = hurt107 * 1.5;
  const hurt109 = Math.round(player1.intelligence * 1.9 + 0.3 * player1.sturdypoint + player1.Skillharm1);
  const hurt110 = hurt109 * 1.7;
  const hurt111 = Math.round(player1.intelligence * 1.9 + 0.3 * player1.sturdypoint + player1.Skillharm2);
  const hurt112 = hurt111 * 1.7;
  const hurt113 = Math.round(player1.intelligence * 1.9 + 0.3 * player1.sturdypoint + player1.Skillharm3);
  const hurt114 = hurt113 * 1.7;
  const hurt203 = Math.round(player2.attack * 1.7 + 0.7 * player2.sturdypoint + player2.Skillharm1);
  const hurt204 = hurt203 * 1.5;
  const hurt205 = Math.round(player2.attack * 1.7 + 0.7 * player2.sturdypoint + player2.Skillharm2);
  const hurt206 = hurt205 * 1.5;
  const hurt207 = Math.round(player2.attack * 1.7 + 0.7 * player2.sturdypoint + player2.Skillharm3);
  const hurt208 = hurt207 * 1.5;
  const hurt209 = Math.round(player2.intelligence * 1.9 + 0.3 * player2.sturdypoint + player2.Skillharm1);
  const hurt210 = hurt209 * 1.7;
  const hurt211 = Math.round(player2.intelligence * 1.9 + 0.3 * player2.sturdypoint + player2.Skillharm2);
  const hurt212 = hurt211 * 1.7;
  const hurt213 = Math.round(player2.intelligence * 1.9 + 0.3 * player2.sturdypoint + player2.Skillharm3);
  const hurt214 = hurt213 * 1.7;
  const hurt151 = Math.round(player1.attack * 1.7 + player1.getSecondaryweaponharm * 0.7 + 0.9 * player1.sturdypoint + player1.getPrimaryweaponharm);
  const hurt152 = hurt151 * 1.5;
  const hurt153 = Math.round(player1.attack * 1.5 + 0.9 * player1.sturdypoint + player1.getPrimaryweaponharm);
  const hurt154 = hurt153 * 1.5;
  const hurt155 = Math.round(player1.attack * 1.5 + 0.9 * player1.sturdypoint + player1.getSecondaryweaponharm);
  const hurt156 = hurt155 * 1.5;
  const hurt157 = Math.round(player1.intelligence * 1.9 + player1.getSecondaryweaponharm * 0.7 + 0.3 * player1.sturdypoint + player1.getPrimaryweaponharm);
  const hurt158 = hurt157 * 1.5;
  const hurt159 = Math.round(player1.intelligence * 1.7 + 0.3 * player1.sturdypoint + player1.getPrimaryweaponharm);
  const hurt160 = hurt159 * 1.5;
  const hurt161 = Math.round(player1.intelligence * 1.7 + 0.3 * player1.sturdypoint + player1.getSecondaryweaponharm);
  const hurt162 = hurt161 * 1.5;
  const hurt251 = Math.round(player2.attack * 1.7 + player2.getSecondaryweaponharm * 0.7 + 0.9 * player2.sturdypoint + player2.getPrimaryweaponharm);
  const hurt252 = hurt251 * 1.5;
  const hurt253 = Math.round(player2.attack * 1.5 + 0.9 * player2.sturdypoint + player2.getPrimaryweaponharm);
  const hurt254 = hurt253 * 1.5;
  const hurt255 = Math.round(player2.attack * 1.5 + 0.9 * player2.sturdypoint + player2.getSecondaryweaponharm);
  const hurt256 = hurt255 * 1.5;
  const hurt257 = Math.round(player2.intelligence * 1.9 + player2.getSecondaryweaponharm * 0.7 + 0.3 * player2.sturdypoint + player2.getPrimaryweaponharm);
  const hurt258 = hurt257 * 1.5;
  const hurt259 = Math.round(player2.intelligence * 1.7 + 0.3 * player2.sturdypoint + player2.getPrimaryweaponharm);
  const hurt260 = hurt259 * 1.5;
  const hurt261 = Math.round(player2.intelligence * 1.7 + 0.3 * player2.sturdypoint + player2.getSecondaryweaponharm);
  const hurt262 = hurt261 * 1.5;
  const treatment115 = Math.round(0.7 * player1.intelligence + 2 * player1.faith + player1.Skillharm1);
  const treatment116 = treatment115 * 2;
  const treatment117 = Math.round(0.7 * player1.intelligence + 2 * player1.faith + player1.Skillharm2);
  const treatment118 = treatment117 * 2;
  const treatment119 = Math.round(0.7 * player1.intelligence + 2 * player1.faith + player1.Skillharm3);
  const treatment120 = treatment119 * 2;
  const treatment215 = Math.round(0.7 * player2.intelligence + 2 * player2.faith + player2.Skillharm1);
  const treatment216 = treatment215 * 2;
  const treatment217 = Math.round(0.7 * player2.intelligence + 2 * player2.faith + player2.Skillharm2);
  const treatment218 = treatment217 * 2;
  const treatment219 = Math.round(0.7 * player2.intelligence + 2 * player2.faith + player2.Skillharm3);
  const treatment220 = treatment219 * 2;
  function calculateMaxCriticalHit(luckyValue) {
    let maxCriticalHit = Math.round(100 - luckyValue / 50);
    return Math.max(maxCriticalHit, 50);
  }
  __name(calculateMaxCriticalHit, "calculateMaxCriticalHit");
  function calculateCriticalHitRandom(maxCriticalHit) {
    return Math.floor(Math.random() * maxCriticalHit) + 1;
  }
  __name(calculateCriticalHitRandom, "calculateCriticalHitRandom");
  function calculateHurtCriticalHitRandom(hurtMin, hurtMax, luckyValue) {
    let hurtCriticalHitRandom = Math.round(Math.floor(Math.random() * (hurtMax - hurtMin + 1) + hurtMin) + 0.7 * luckyValue);
    return Math.min(hurtCriticalHitRandom, hurtMax);
  }
  __name(calculateHurtCriticalHitRandom, "calculateHurtCriticalHitRandom");
  function calculateTheTreatment(randomValue, defense, release) {
    let treatment = Math.round(randomValue * (1 - defense / 100) * release);
    if (treatment < 0) {
      treatment = 1;
    }
    return treatment;
  }
  __name(calculateTheTreatment, "calculateTheTreatment");
  function calculateCriticaTheTreatment(randomValue, defense, baseTreatment, multiplier = 1, release = 1) {
    let treatment = Math.round((randomValue * (1 - defense / 100) + multiplier * baseTreatment) * release);
    if (treatment < 0) {
      treatment = 1;
    }
    return treatment;
  }
  __name(calculateCriticaTheTreatment, "calculateCriticaTheTreatment");
  function calculateDamage(randomValue, defense, armourClass, sturdyPoint, multiplier = 1, release = 1) {
    let damage = Math.round((randomValue * (1 - defense / 100) - multiplier * (armourClass + 0.2 * sturdyPoint)) * release);
    if (damage < 0) {
      damage = 1;
    }
    return damage;
  }
  __name(calculateDamage, "calculateDamage");
  function calculateCriticalDamage(randomValue, defense, armourClass, sturdyPoint, baseDamage, multiplier = 1, release = 1) {
    let criticalDamage = Math.round((randomValue * (1 - defense / 100) - multiplier * (armourClass + 0.2 * sturdyPoint) + 0.5 * baseDamage) * release);
    if (criticalDamage < 0) {
      criticalDamage = 1;
    }
    return criticalDamage;
  }
  __name(calculateCriticalDamage, "calculateCriticalDamage");
  while (player1.hp > 0 && player2.hp > 0 && round < maxRounds) {
    round++;
    const action = getRandomAction();
    let result = "";
    let maxCriticalHitRandom101 = calculateMaxCriticalHit(player1.luckyvalue);
    let criticalHitRandom1 = calculateCriticalHitRandom(maxCriticalHitRandom101);
    let hurtCriticalHitRandom101 = calculateHurtCriticalHitRandom(hurt101, hurt102, player1.luckyvalue);
    let hurtCriticalHitRandom151 = calculateHurtCriticalHitRandom(hurt151, hurt152, player1.luckyvalue);
    let hurtCriticalHitRandom152 = calculateHurtCriticalHitRandom(hurt153, hurt154, player1.luckyvalue);
    let hurtCriticalHitRandom153 = calculateHurtCriticalHitRandom(hurt155, hurt156, player1.luckyvalue);
    let hurtCriticalHitRandom154 = calculateHurtCriticalHitRandom(hurt157, hurt158, player1.luckyvalue);
    let hurtCriticalHitRandom155 = calculateHurtCriticalHitRandom(hurt159, hurt160, player1.luckyvalue);
    let hurtCriticalHitRandom156 = calculateHurtCriticalHitRandom(hurt161, hurt162, player1.luckyvalue);
    let hurtCriticalHitRandom103 = calculateHurtCriticalHitRandom(hurt103, hurt104, player1.luckyvalue);
    let hurtCriticalHitRandom104 = calculateHurtCriticalHitRandom(hurt105, hurt106, player1.luckyvalue);
    let hurtCriticalHitRandom105 = calculateHurtCriticalHitRandom(hurt107, hurt108, player1.luckyvalue);
    let hurtCriticalHitRandom106 = calculateHurtCriticalHitRandom(hurt109, hurt110, player1.luckyvalue);
    let hurtCriticalHitRandom107 = calculateHurtCriticalHitRandom(hurt111, hurt112, player1.luckyvalue);
    let hurtCriticalHitRandom108 = calculateHurtCriticalHitRandom(hurt113, hurt114, player1.luckyvalue);
    let theTreatmentRandom109 = calculateHurtCriticalHitRandom(treatment116, treatment115, player1.luckyvalue);
    let theTreatmentRandom110 = calculateHurtCriticalHitRandom(treatment118, treatment117, player1.luckyvalue);
    let theTreatmentRandom111 = calculateHurtCriticalHitRandom(treatment120, treatment119, player1.luckyvalue);
    let maxCriticalHitRandom201 = calculateMaxCriticalHit(player2.luckyvalue);
    let criticalHitRandom2 = calculateCriticalHitRandom(maxCriticalHitRandom201);
    let hurtCriticalHitRandom201 = calculateHurtCriticalHitRandom(hurt201, hurt202, player2.luckyvalue);
    let hurtCriticalHitRandom251 = calculateHurtCriticalHitRandom(hurt251, hurt252, player2.luckyvalue);
    let hurtCriticalHitRandom252 = calculateHurtCriticalHitRandom(hurt253, hurt254, player2.luckyvalue);
    let hurtCriticalHitRandom253 = calculateHurtCriticalHitRandom(hurt255, hurt256, player2.luckyvalue);
    let hurtCriticalHitRandom254 = calculateHurtCriticalHitRandom(hurt257, hurt258, player2.luckyvalue);
    let hurtCriticalHitRandom255 = calculateHurtCriticalHitRandom(hurt259, hurt260, player2.luckyvalue);
    let hurtCriticalHitRandom256 = calculateHurtCriticalHitRandom(hurt261, hurt262, player2.luckyvalue);
    let hurtCriticalHitRandom203 = calculateHurtCriticalHitRandom(hurt203, hurt204, player2.luckyvalue);
    let hurtCriticalHitRandom204 = calculateHurtCriticalHitRandom(hurt205, hurt206, player2.luckyvalue);
    let hurtCriticalHitRandom205 = calculateHurtCriticalHitRandom(hurt207, hurt208, player2.luckyvalue);
    let hurtCriticalHitRandom206 = calculateHurtCriticalHitRandom(hurt209, hurt210, player2.luckyvalue);
    let hurtCriticalHitRandom207 = calculateHurtCriticalHitRandom(hurt211, hurt212, player2.luckyvalue);
    let hurtCriticalHitRandom208 = calculateHurtCriticalHitRandom(hurt213, hurt214, player2.luckyvalue);
    let theTreatmentRandom209 = calculateHurtCriticalHitRandom(treatment216, treatment215, player2.luckyvalue);
    let theTreatmentRandom210 = calculateHurtCriticalHitRandom(treatment218, treatment217, player2.luckyvalue);
    let theTreatmentRandom211 = calculateHurtCriticalHitRandom(treatment220, treatment219, player2.luckyvalue);
    let hurtEnd101 = calculateDamage(hurtCriticalHitRandom101, player2.physicaldefense, player2.armourclass, player2.sturdypoint);
    let hurtCriticalhitEnd101 = calculateCriticalDamage(hurtCriticalHitRandom101, player2.physicaldefense, player2.armourclass, player2.sturdypoint, hurtEnd101);
    let hurtEnd201 = calculateDamage(hurtCriticalHitRandom201, player1.physicaldefense, player1.armourclass, player1.sturdypoint);
    let hurtCriticalhitEnd201 = calculateCriticalDamage(hurtCriticalHitRandom201, player1.physicaldefense, player1.armourclass, player1.sturdypoint, hurtEnd201);
    let hurtEnd151 = calculateDamage(hurtCriticalHitRandom151, player2.physicaldefense, player2.armourclass, player2.sturdypoint, 0.75);
    let hurtCriticalhitEnd151 = calculateCriticalDamage(hurtCriticalHitRandom151, player2.physicaldefense, player2.armourclass, player2.sturdypoint, hurtEnd151, 0.75);
    let hurtEnd152 = calculateDamage(hurtCriticalHitRandom152, player2.physicaldefense, player2.armourclass, player2.sturdypoint, 0.75);
    let hurtCriticalhitEnd152 = calculateCriticalDamage(hurtCriticalHitRandom152, player2.physicaldefense, player2.armourclass, player2.sturdypoint, hurtEnd152, 0.75);
    let hurtEnd153 = calculateDamage(hurtCriticalHitRandom153, player2.physicaldefense, player2.armourclass, player2.sturdypoint, 0.75);
    let hurtCriticalhitEnd153 = calculateCriticalDamage(hurtCriticalHitRandom153, player2.physicaldefense, player2.armourclass, player2.sturdypoint, hurtEnd153, 0.75);
    let hurtEnd154 = calculateDamage(hurtCriticalHitRandom154, player2.magicaldefense, player2.armourclass, player2.sturdypoint, 0.5, player1.getPrimaryweaponmagicrelease / 100);
    let hurtCriticalhitEnd154 = calculateCriticalDamage(hurtCriticalHitRandom154, player2.magicaldefense, player2.armourclass, player2.sturdypoint, hurtEnd154, 0.5, player1.getPrimaryweaponmagicrelease / 100);
    let hurtEnd155 = calculateDamage(hurtCriticalHitRandom155, player2.magicaldefense, player2.armourclass, player2.sturdypoint, 0.5, player1.getPrimaryweaponmagicrelease / 100);
    let hurtCriticalhitEnd155 = calculateCriticalDamage(hurtCriticalHitRandom155, player2.magicaldefense, player2.armourclass, player2.sturdypoint, hurtEnd155, 0.5, player1.getPrimaryweaponmagicrelease / 100);
    let hurtEnd156 = calculateDamage(hurtCriticalHitRandom156, player2.magicaldefense, player2.armourclass, player2.sturdypoint, 0.5, player1.getPrimaryweaponmagicrelease / 100);
    let hurtCriticalhitEnd156 = calculateCriticalDamage(hurtCriticalHitRandom156, player2.magicaldefense, player2.armourclass, player2.sturdypoint, hurtEnd156, 0.5, player1.getPrimaryweaponmagicrelease / 100);
    let hurtEnd102 = calculateDamage(hurtCriticalHitRandom103, player2.physicaldefense, player2.armourclass, player2.sturdypoint, 0.75, player1.getPrimaryweaponfightkirelease / 100);
    let hurtCriticalhitEnd102 = calculateCriticalDamage(hurtCriticalHitRandom103, player2.physicaldefense, player2.armourclass, player2.sturdypoint, hurtEnd102, 0.75, player1.getPrimaryweaponfightkirelease / 100);
    let hurtEnd103 = calculateDamage(hurtCriticalHitRandom104, player2.physicaldefense, player2.armourclass, player2.sturdypoint, 0.75, player1.getPrimaryweaponfightkirelease / 100);
    let hurtCriticalhitEnd103 = calculateCriticalDamage(hurtCriticalHitRandom104, player2.physicaldefense, player2.armourclass, player2.sturdypoint, hurtEnd103, 0.75, player1.getPrimaryweaponfightkirelease / 100);
    let hurtEnd104 = calculateDamage(hurtCriticalHitRandom105, player2.physicaldefense, player2.armourclass, player2.sturdypoint, 0.75, player1.getPrimaryweaponfightkirelease / 100);
    let hurtCriticalhitEnd104 = calculateCriticalDamage(hurtCriticalHitRandom105, player2.physicaldefense, player2.armourclass, player2.sturdypoint, hurtEnd104, 0.75, player1.getPrimaryweaponfightkirelease / 100);
    let hurtEnd105 = calculateDamage(hurtCriticalHitRandom106, player2.magicaldefense, player2.armourclass, player2.sturdypoint, 0.5, player1.getPrimaryweaponmagicrelease / 100);
    let hurtCriticalhitEnd105 = calculateCriticalDamage(hurtCriticalHitRandom106, player2.magicaldefense, player2.armourclass, player2.sturdypoint, hurtEnd105, 0.5, player1.getPrimaryweaponmagicrelease / 100);
    let hurtEnd106 = calculateDamage(hurtCriticalHitRandom107, player2.magicaldefense, player2.armourclass, player2.sturdypoint, 0.5, player1.getPrimaryweaponmagicrelease / 100);
    let hurtCriticalhitEnd106 = calculateCriticalDamage(hurtCriticalHitRandom107, player2.magicaldefense, player2.armourclass, player2.sturdypoint, hurtEnd106, 0.5, player1.getPrimaryweaponmagicrelease / 100);
    let hurtEnd107 = calculateDamage(hurtCriticalHitRandom108, player2.magicaldefense, player2.armourclass, player2.sturdypoint, 0.5, player1.getPrimaryweaponmagicrelease / 100);
    let hurtCriticalhitEnd107 = calculateCriticalDamage(hurtCriticalHitRandom108, player2.magicaldefense, player2.armourclass, player2.sturdypoint, hurtEnd107, 0.5, player1.getPrimaryweaponmagicrelease / 100);
    let theTreatmentEnd108 = calculateTheTreatment(theTreatmentRandom109, player2.magicaldefense, player2.getPrimaryweaponmagicrelease / 100);
    let theTreatmentCriticalhitEnd108 = calculateCriticaTheTreatment(theTreatmentRandom109, player2.magicaldefense, theTreatmentEnd108, 0.5, player2.getPrimaryweaponmagicrelease / 100);
    let theTreatmentEnd109 = calculateTheTreatment(theTreatmentRandom110, player2.magicaldefense, player2.getPrimaryweaponmagicrelease / 100);
    let theTreatmentCriticalhitEnd109 = calculateCriticaTheTreatment(theTreatmentRandom110, player2.magicaldefense, theTreatmentEnd109, 0.5, player2.getPrimaryweaponmagicrelease / 100);
    let theTreatmentEnd110 = calculateTheTreatment(theTreatmentRandom111, player2.magicaldefense, player2.getPrimaryweaponmagicrelease / 100);
    let theTreatmentCriticalhitEnd110 = calculateCriticaTheTreatment(theTreatmentRandom111, player2.magicaldefense, theTreatmentEnd110, 0.5, player2.getPrimaryweaponmagicrelease / 100);
    let hurtEnd251 = calculateDamage(hurtCriticalHitRandom251, player1.physicaldefense, player1.armourclass, player1.sturdypoint, 0.75);
    let hurtCriticalhitEnd251 = calculateCriticalDamage(hurtCriticalHitRandom251, player1.physicaldefense, player1.armourclass, player1.sturdypoint, hurtEnd251, 0.75);
    let hurtEnd252 = calculateDamage(hurtCriticalHitRandom252, player1.physicaldefense, player1.armourclass, player1.sturdypoint, 0.75);
    let hurtCriticalhitEnd252 = calculateCriticalDamage(hurtCriticalHitRandom252, player1.physicaldefense, player1.armourclass, player1.sturdypoint, hurtEnd252, 0.75);
    let hurtEnd253 = calculateDamage(hurtCriticalHitRandom253, player1.physicaldefense, player1.armourclass, player1.sturdypoint, 0.75);
    let hurtCriticalhitEnd253 = calculateCriticalDamage(hurtCriticalHitRandom253, player1.physicaldefense, player1.armourclass, player1.sturdypoint, hurtEnd253, 0.75);
    let hurtEnd254 = calculateDamage(hurtCriticalHitRandom254, player1.physicaldefense, player1.armourclass, player1.sturdypoint, 0.5, player2.getPrimaryweaponmagicrelease / 100);
    let hurtCriticalhitEnd254 = calculateCriticalDamage(hurtCriticalHitRandom254, player1.physicaldefense, player1.armourclass, player1.sturdypoint, hurtEnd254, 0.5, player2.getPrimaryweaponmagicrelease / 100);
    let hurtEnd255 = calculateDamage(hurtCriticalHitRandom255, player1.physicaldefense, player1.armourclass, player1.sturdypoint, 0.5, player2.getPrimaryweaponmagicrelease / 100);
    let hurtCriticalhitEnd255 = calculateCriticalDamage(hurtCriticalHitRandom255, player1.physicaldefense, player1.armourclass, player1.sturdypoint, hurtEnd255, 0.5, player2.getPrimaryweaponmagicrelease / 100);
    let hurtEnd256 = calculateDamage(hurtCriticalHitRandom256, player1.physicaldefense, player1.armourclass, player1.sturdypoint, 0.5, player2.getPrimaryweaponmagicrelease / 100);
    let hurtCriticalhitEnd256 = calculateCriticalDamage(hurtCriticalHitRandom256, player1.physicaldefense, player1.armourclass, player1.sturdypoint, hurtEnd256, 0.5, player2.getPrimaryweaponmagicrelease / 100);
    let hurtEnd202 = calculateDamage(hurtCriticalHitRandom203, player1.physicaldefense, player1.armourclass, player1.sturdypoint, 0.75, player2.getPrimaryweaponfightkirelease / 100);
    let hurtCriticalhitEnd202 = calculateCriticalDamage(hurtCriticalHitRandom203, player1.physicaldefense, player1.armourclass, player1.sturdypoint, hurtEnd202, 0.75, player2.getPrimaryweaponfightkirelease / 100);
    let hurtEnd203 = calculateDamage(hurtCriticalHitRandom204, player1.physicaldefense, player1.armourclass, player1.sturdypoint, 0.75, player2.getPrimaryweaponfightkirelease / 100);
    let hurtCriticalhitEnd203 = calculateCriticalDamage(hurtCriticalHitRandom204, player1.physicaldefense, player1.armourclass, player1.sturdypoint, hurtEnd203, 0.75, player2.getPrimaryweaponfightkirelease / 100);
    let hurtEnd204 = calculateDamage(hurtCriticalHitRandom205, player1.physicaldefense, player1.armourclass, player1.sturdypoint, 0.75, player2.getPrimaryweaponfightkirelease / 100);
    let hurtCriticalhitEnd204 = calculateCriticalDamage(hurtCriticalHitRandom205, player1.physicaldefense, player1.armourclass, player1.sturdypoint, hurtEnd204, 0.75, player2.getPrimaryweaponfightkirelease / 100);
    let hurtEnd205 = calculateDamage(hurtCriticalHitRandom206, player1.magicaldefense, player1.armourclass, player1.sturdypoint, 0.5, player2.getPrimaryweaponmagicrelease / 100);
    let hurtCriticalhitEnd205 = calculateCriticalDamage(hurtCriticalHitRandom206, player1.magicaldefense, player1.armourclass, player1.sturdypoint, hurtEnd205, 0.5, player2.getPrimaryweaponmagicrelease / 100);
    let hurtEnd206 = calculateDamage(hurtCriticalHitRandom207, player1.magicaldefense, player1.armourclass, player1.sturdypoint, 0.5, player2.getPrimaryweaponmagicrelease / 100);
    let hurtCriticalhitEnd206 = calculateCriticalDamage(hurtCriticalHitRandom207, player1.magicaldefense, player1.armourclass, player1.sturdypoint, hurtEnd206, 0.5, player2.getPrimaryweaponmagicrelease / 100);
    let hurtEnd207 = calculateDamage(hurtCriticalHitRandom208, player1.magicaldefense, player1.armourclass, player1.sturdypoint, 0.5, player2.getPrimaryweaponmagicrelease / 100);
    let hurtCriticalhitEnd207 = calculateCriticalDamage(hurtCriticalHitRandom208, player1.magicaldefense, player1.armourclass, player1.sturdypoint, hurtEnd207, 0.5, player2.getPrimaryweaponmagicrelease / 100);
    let theTreatmentEnd208 = calculateTheTreatment(theTreatmentRandom209, player2.magicaldefense, player2.getPrimaryweaponmagicrelease / 100);
    let theTreatmentCriticalhitEnd208 = calculateCriticaTheTreatment(theTreatmentRandom209, player2.magicaldefense, theTreatmentEnd208, 0.5, player2.getPrimaryweaponmagicrelease / 100);
    let theTreatmentEnd209 = calculateTheTreatment(theTreatmentRandom210, player2.magicaldefense, player2.getPrimaryweaponmagicrelease / 100);
    let theTreatmentCriticalhitEnd209 = calculateCriticaTheTreatment(theTreatmentRandom210, player2.magicaldefense, theTreatmentEnd209, 0.5, player2.getPrimaryweaponmagicrelease / 100);
    let theTreatmentEnd210 = calculateTheTreatment(theTreatmentRandom211, player2.magicaldefense, player2.getPrimaryweaponmagicrelease / 100);
    let theTreatmentCriticalhitEnd210 = calculateCriticaTheTreatment(theTreatmentRandom211, player2.magicaldefense, theTreatmentEnd210, 0.5, player2.getPrimaryweaponmagicrelease / 100);
    let sidestep1 = Math.round(player1.dexterity + 0.7 * player1.sturdypoint + 0.5 * player1.spiritualintuition + 0.5 * player1.stamina);
    let sidestep3 = Math.floor(Math.random() * (sidestep1 * 2 - sidestep1 + 1)) + sidestep1;
    let sidestep2 = Math.round(player2.dexterity + 0.7 * player2.sturdypoint + 0.5 * player2.spiritualintuition + 0.5 * player2.stamina);
    let sidestep4 = Math.floor(Math.random() * (sidestep2 * 2 - sidestep2 + 1)) + sidestep2;
    let maxsidestep3 = Math.round(Math.floor(Math.random() * (sidestep3 - sidestep1 + 1)) + sidestep1 + 0.7 * player1.luckyvalue);
    if (maxsidestep3 > sidestep3) {
      maxsidestep3 = sidestep3;
    }
    let maxsidestep4 = Math.round(Math.floor(Math.random() * (sidestep4 - sidestep2 + 1)) + sidestep2 + 0.7 * player2.luckyvalue);
    if (maxsidestep4 > sidestep4) {
      maxsidestep4 = sidestep4;
    }
    if (round % 2 !== 0) {
      switch (action) {
        case "武器攻击":
          {
            const skillEffect1 = Math.floor(Math.random() * 3) + 1;
            const primaryWeaponEquipped = player1.getPrimaryweapontypes !== 0;
            const secondaryWeaponEquipped = player1.getSecondaryweapontypes !== 0;
            const isCriticalHit = criticalHitRandom1 < player1.criticalhit;
            if (maxsidestep3 * 2.5 > maxsidestep4) {
              let weaponName, damage, text;
              if (!primaryWeaponEquipped && !secondaryWeaponEquipped) {
                weaponName = "挥拳";
                text = "因未装备武器";
                damage = isCriticalHit ? hurtCriticalhitEnd101 : hurtEnd101;
              } else if (primaryWeaponEquipped && !secondaryWeaponEquipped) {
                if (player1.getPrimaryweapontypes === 1) {
                  weaponName = `挥舞${player1.getPrimaryweaponname}进行斩击`;
                  damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                } else if (player1.getPrimaryweapontypes === 2) {
                  weaponName = `使用${player1.getPrimaryweaponname}释放咒语`;
                  damage = isCriticalHit ? hurtCriticalhitEnd155 : hurtEnd155;
                } else if (player1.getPrimaryweapontypes === 3) {
                  weaponName = `拉开${player1.getPrimaryweaponname}射出利箭`;
                  damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                } else if (player1.getPrimaryweapontypes === 4) {
                  weaponName = `架起${player1.getPrimaryweaponname}进行冲锋`;
                  damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                }
              } else if (!primaryWeaponEquipped && secondaryWeaponEquipped) {
                if (player1.getSecondaryweapontypes === 1) {
                  weaponName = `挥舞${player1.getSecondaryweaponname}进行斩击`;
                  damage = isCriticalHit ? hurtCriticalhitEnd153 : hurtEnd153;
                } else if (player1.getSecondaryweapontypes === 2) {
                  weaponName = `使用${player1.getSecondaryweaponname}释放咒语`;
                  damage = isCriticalHit ? hurtCriticalhitEnd155 : hurtEnd155;
                } else if (player1.getSecondaryweapontypes === 3) {
                  weaponName = `拉开${player1.getSecondaryweaponname}射出利箭`;
                  damage = isCriticalHit ? hurtCriticalhitEnd153 : hurtEnd153;
                } else if (player1.getSecondaryweapontypes === 4) {
                  weaponName = `挥舞${player1.getPrimaryweaponname}进行斩击`;
                  damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                }
              } else {
                if (skillEffect1 === 1) {
                  if (player1.getPrimaryweapontypes === 1 && player1.getSecondaryweapontypes === 1) {
                    weaponName = `双手挥舞${player1.getPrimaryweaponname}与${player1.getSecondaryweaponname}进行斩击`;
                    damage = isCriticalHit ? hurtCriticalhitEnd151 : hurtEnd151;
                  } else if (player1.getPrimaryweapontypes === 1 && player1.getSecondaryweapontypes === 2) {
                    weaponName = `挥舞${player1.getPrimaryweaponname}进行斩击`;
                    damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                  } else if (player1.getPrimaryweapontypes === 1 && player1.getSecondaryweapontypes === 3) {
                    weaponName = `挥舞${player1.getPrimaryweaponname}进行斩击`;
                    damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                  } else if (player1.getPrimaryweapontypes === 1 && player1.getSecondaryweapontypes === 4) {
                    weaponName = `手持${player1.getSecondaryweaponname}挥舞${player1.getPrimaryweaponname}进行斩击`;
                    damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                  } else if (player1.getPrimaryweapontypes === 2 && player1.getSecondaryweapontypes === 1) {
                    weaponName = `使用${player1.getPrimaryweaponname}释放咒语`;
                    damage = isCriticalHit ? hurtCriticalhitEnd155 : hurtEnd155;
                  } else if (player1.getPrimaryweapontypes === 2 && player1.getSecondaryweapontypes === 2) {
                    weaponName = `双持${player1.getPrimaryweaponname}与${player1.getSecondaryweaponname}释放咒语`;
                    damage = isCriticalHit ? hurtCriticalhitEnd154 : hurtEnd154;
                  } else if (player1.getPrimaryweapontypes === 2 && player1.getSecondaryweapontypes === 3) {
                    weaponName = `使用${player1.getPrimaryweaponname}释放咒语`;
                    damage = isCriticalHit ? hurtCriticalhitEnd155 : hurtEnd155;
                  } else if (player1.getPrimaryweapontypes === 2 && player1.getSecondaryweapontypes === 4) {
                    weaponName = `手持${player1.getSecondaryweaponname}使用${player1.getPrimaryweaponname}释放咒语`;
                    damage = isCriticalHit ? hurtCriticalhitEnd155 : hurtEnd155;
                  } else if (player1.getPrimaryweapontypes === 3 && player1.getSecondaryweapontypes === 1) {
                    weaponName = `拉开${player1.getPrimaryweaponname}射出利箭`;
                    damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                  } else if (player1.getPrimaryweapontypes === 3 && player1.getSecondaryweapontypes === 2) {
                    weaponName = `拉开${player1.getPrimaryweaponname}射出利箭`;
                    damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                  } else if (player1.getPrimaryweapontypes === 3 && player1.getSecondaryweapontypes === 3) {
                    weaponName = `双手使用${player1.getPrimaryweaponname}射出利箭`;
                    damage = isCriticalHit ? hurtCriticalhitEnd151 : hurtEnd151;
                  } else if (player1.getPrimaryweapontypes === 3 && player1.getSecondaryweapontypes === 4) {
                    weaponName = `手持${player1.getSecondaryweaponname}使用${player1.getPrimaryweaponname}射出利箭`;
                    damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                  } else if (player1.getPrimaryweapontypes === 4 && player1.getSecondaryweapontypes === 1) {
                    weaponName = `手持${player1.getSecondaryweaponname}挥舞${player1.getPrimaryweaponname}进行斩击`;
                    damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                  } else if (player1.getPrimaryweapontypes === 4 && player1.getSecondaryweapontypes === 2) {
                    weaponName = `手持${player1.getSecondaryweaponname}使用${player1.getPrimaryweaponname}释放咒语`;
                    damage = isCriticalHit ? hurtCriticalhitEnd155 : hurtEnd155;
                  } else if (player1.getPrimaryweapontypes === 4 && player1.getSecondaryweapontypes === 3) {
                    weaponName = `手持${player1.getSecondaryweaponname}使用${player1.getPrimaryweaponname}射出利箭`;
                    damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                  } else if (player1.getPrimaryweapontypes === 4 && player1.getSecondaryweapontypes === 4) {
                    weaponName = `架起${player1.getSecondaryweaponname}与${player1.getPrimaryweaponname}冲锋`;
                    damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                  }
                } else if (skillEffect1 === 2) {
                  if (player1.getPrimaryweapontypes === 1) {
                    weaponName = `挥舞${player1.getPrimaryweaponname}进行斩击`;
                    damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                  } else if (player1.getPrimaryweapontypes === 2) {
                    weaponName = `使用${player1.getPrimaryweaponname}释放咒语`;
                    damage = isCriticalHit ? hurtCriticalhitEnd155 : hurtEnd155;
                  } else if (player1.getPrimaryweapontypes === 3) {
                    weaponName = `拉开${player1.getPrimaryweaponname}射出利箭`;
                    damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                  } else if (player1.getPrimaryweapontypes === 4) {
                    weaponName = `架起${player1.getPrimaryweaponname}进行冲锋`;
                    damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                  }
                } else if (skillEffect1 === 3) {
                  if (player1.getSecondaryweapontypes === 1) {
                    weaponName = `挥舞${player1.getSecondaryweaponname}进行斩击`;
                    damage = isCriticalHit ? hurtCriticalhitEnd153 : hurtEnd153;
                  } else if (player1.getSecondaryweapontypes === 2) {
                    weaponName = `使用${player1.getSecondaryweaponname}释放咒语`;
                    damage = isCriticalHit ? hurtCriticalhitEnd156 : hurtEnd156;
                  } else if (player1.getSecondaryweapontypes === 3) {
                    weaponName = `拉开${player1.getSecondaryweaponname}射出利箭`;
                    damage = isCriticalHit ? hurtCriticalhitEnd153 : hurtEnd153;
                  } else if (player1.getSecondaryweapontypes === 4) {
                    weaponName = `挥舞${player1.getPrimaryweaponname}进行斩击`;
                    damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                  }
                }
              }
              if (text === void 0) {
                text = "";
              }
              player2.hp -= damage;
              if (player1.getPrimaryweapontypes === 2) {
                player1.mp -= 4;
              }
              player1.mp += 6;
              result = isCriticalHit ? `暴击!${text}${player1.name}对${player2.name}${weaponName},造成了${damage}点伤害` : `${text}${player1.name}对${player2.name}${weaponName},造成了${damage}点伤害`;
            } else {
              result = Math.floor(Math.random() * 2) + 1 === 1 ? `${player2.name}挡住了攻击` : `${player2.name}躲过了攻击`;
            }
          }
          break;
        case "技能攻击":
          {
            const skillEffect = Math.floor(Math.random() * 3) + 1;
            const skillCriticalHit = criticalHitRandom1 < player1.criticalhit;
            const skillManaExhausted = /* @__PURE__ */ __name((mpCost) => player1.mp < mpCost, "skillManaExhausted");
            const attackWithFist = /* @__PURE__ */ __name((damage, reason) => {
              player2.hp -= damage;
              player1.mp += 6;
              result = skillCriticalHit ? `暴击!因${reason},${player1.name}对${player2.name}挥拳,造成了${damage}点伤害;` : `因${reason},${player1.name}对${player2.name}挥拳,造成了${damage}点伤害;`;
            }, "attackWithFist");
            const weaponWithFist = /* @__PURE__ */ __name((damage, reason, weaponname, mpCost = 0) => {
              player2.hp -= damage;
              player1.mp -= mpCost;
              player1.mp += 6;
              result = skillCriticalHit ? `暴击!因${reason},${player1.name}对${player2.name}${weaponname},造成了${damage}点伤害;` : `因${reason},${player1.name}对${player2.name}${weaponname},造成了${damage}点伤害;`;
            }, "weaponWithFist");
            const useSkill1 = /* @__PURE__ */ __name((skillName, skillInfo, attackInfo, endInfo, damage, mpCost) => {
              player2.hp -= damage;
              player1.mp -= mpCost;
              player1.mp += 6;
              result = skillCriticalHit ? `暴击!${player1.name}对${player2.name}使用${skillName},${skillInfo}${attackInfo}${endInfo},造成了${damage}点伤害` : `${player1.name}对${player2.name}使用${skillName},${skillInfo}${attackInfo}${endInfo},造成了${damage}点伤害`;
            }, "useSkill1");
            const useSkill2 = /* @__PURE__ */ __name((skillName, skillInfo, attackInfo, endInfo, treatment, mpCost) => {
              player1.hp += treatment;
              player1.mp -= mpCost;
              player1.mp += 6;
              result = skillCriticalHit ? `大祝福!${player1.name}使用${skillName},${skillInfo}${attackInfo}${endInfo},恢复了${treatment}点HP` : `${player1.name}使用${skillName},${skillInfo}${attackInfo}${endInfo},恢复了${treatment}点HP`;
            }, "useSkill2");
            const availableSkills = [
              { type: player1.Skilltypes1, name: player1.Skillname1, info: player1.Skillskillinfo1, attckInfo: player1.Skillattckinfo1, endInfo: player1.Skillendinfo1, mpCost: player1.getSkill1consumptionofmagic, hurt: [hurtEnd101, hurtEnd102, hurtEnd105, theTreatmentEnd108], hurtCritical: [hurtCriticalhitEnd101, hurtCriticalhitEnd102, hurtCriticalhitEnd105, theTreatmentCriticalhitEnd108] },
              { type: player1.Skilltypes2, name: player1.Skillname2, info: player1.Skillskillinfo2, attckInfo: player1.Skillattckinfo2, endInfo: player1.Skillendinfo2, mpCost: player1.getSkill2consumptionofmagic, hurt: [hurtEnd101, hurtEnd103, hurtEnd106, theTreatmentEnd109], hurtCritical: [hurtCriticalhitEnd101, hurtCriticalhitEnd103, hurtCriticalhitEnd106, theTreatmentCriticalhitEnd109] },
              { type: player1.Skilltypes3, name: player1.Skillname3, info: player1.Skillskillinfo3, attckInfo: player1.Skillattckinfo3, endInfo: player1.Skillendinfo3, mpCost: player1.getSkill3consumptionofmagic, hurt: [hurtEnd101, hurtEnd104, hurtEnd107, theTreatmentEnd110], hurtCritical: [hurtCriticalhitEnd101, hurtCriticalhitEnd104, hurtCriticalhitEnd107, theTreatmentCriticalhitEnd110] }
            ].filter((skill) => skill.type !== 0);
            const handleSkillUsage = /* @__PURE__ */ __name((skill) => {
              if (skillManaExhausted(skill.mpCost)) {
                const skillEffect1 = Math.floor(Math.random() * 2) + 1;
                const primaryWeaponEquipped = player1.getPrimaryweapontypes !== 0;
                const secondaryWeaponEquipped = player1.getSecondaryweapontypes !== 0;
                const isCriticalHit = criticalHitRandom1 < player1.criticalhit;
                let weaponName = "";
                let damage;
                let mpCost = 0;
                if (!primaryWeaponEquipped && !secondaryWeaponEquipped) {
                  attackWithFist(skillCriticalHit ? skill.hurtCritical[0] : skill.hurt[0], "玛娜耗尽");
                } else if (primaryWeaponEquipped && !secondaryWeaponEquipped) {
                  if (player1.getPrimaryweapontypes === 1) {
                    weaponName = `挥舞${player1.getPrimaryweaponname}进行斩击`;
                    damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                  } else if (player1.getPrimaryweapontypes === 2) {
                    weaponName = `使用${player1.getPrimaryweaponname}释放咒语`;
                    damage = isCriticalHit ? hurtCriticalhitEnd155 : hurtEnd155;
                    mpCost = 4;
                  } else if (player1.getPrimaryweapontypes === 3) {
                    weaponName = `拉开${player1.getPrimaryweaponname}射出利箭`;
                    damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                  } else if (player1.getPrimaryweapontypes === 4) {
                    weaponName = `架起${player1.getPrimaryweaponname}进行冲锋`;
                    damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                  }
                  weaponWithFist(damage, "玛娜耗尽", weaponName, mpCost);
                } else if (!primaryWeaponEquipped && secondaryWeaponEquipped) {
                  if (player1.getSecondaryweapontypes === 1) {
                    weaponName = `挥舞${player1.getSecondaryweaponname}进行斩击`;
                    damage = isCriticalHit ? hurtCriticalhitEnd153 : hurtEnd153;
                  } else if (player1.getSecondaryweapontypes === 2) {
                    weaponName = `使用${player1.getSecondaryweaponname}释放咒语`;
                    damage = isCriticalHit ? hurtCriticalhitEnd155 : hurtEnd155;
                    mpCost = 4;
                  } else if (player1.getSecondaryweapontypes === 3) {
                    weaponName = `拉开${player1.getSecondaryweaponname}射出利箭`;
                    damage = isCriticalHit ? hurtCriticalhitEnd153 : hurtEnd153;
                  } else if (player1.getSecondaryweapontypes === 4) {
                    weaponName = `挥舞${player1.getPrimaryweaponname}进行斩击`;
                    damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                  }
                  weaponWithFist(damage, "玛娜耗尽", weaponName, mpCost);
                } else {
                  if (skillEffect1 === 1) {
                    if (player1.getPrimaryweapontypes === 1 && player1.getSecondaryweapontypes === 1) {
                      weaponName = `双手挥舞${player1.getPrimaryweaponname}与${player1.getSecondaryweaponname}进行斩击`;
                      damage = isCriticalHit ? hurtCriticalhitEnd151 : hurtEnd151;
                    } else if (player1.getPrimaryweapontypes === 1 && player1.getSecondaryweapontypes === 2) {
                      weaponName = `挥舞${player1.getPrimaryweaponname}进行斩击`;
                      damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                    } else if (player1.getPrimaryweapontypes === 1 && player1.getSecondaryweapontypes === 3) {
                      weaponName = `挥舞${player1.getPrimaryweaponname}进行斩击`;
                      damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                    } else if (player1.getPrimaryweapontypes === 1 && player1.getSecondaryweapontypes === 4) {
                      weaponName = `手持${player1.getSecondaryweaponname}挥舞${player1.getPrimaryweaponname}进行斩击`;
                      damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                    } else if (player1.getPrimaryweapontypes === 2 && player1.getSecondaryweapontypes === 1) {
                      weaponName = `使用${player1.getPrimaryweaponname}释放咒语`;
                      damage = isCriticalHit ? hurtCriticalhitEnd155 : hurtEnd155;
                      mpCost = 4;
                    } else if (player1.getPrimaryweapontypes === 2 && player1.getSecondaryweapontypes === 2) {
                      weaponName = `双持${player1.getPrimaryweaponname}与${player1.getSecondaryweaponname}释放咒语`;
                      damage = isCriticalHit ? hurtCriticalhitEnd154 : hurtEnd154;
                      mpCost = 4;
                    } else if (player1.getPrimaryweapontypes === 2 && player1.getSecondaryweapontypes === 3) {
                      weaponName = `使用${player1.getPrimaryweaponname}释放咒语`;
                      damage = isCriticalHit ? hurtCriticalhitEnd155 : hurtEnd155;
                      mpCost = 4;
                    } else if (player1.getPrimaryweapontypes === 2 && player1.getSecondaryweapontypes === 4) {
                      weaponName = `手持${player1.getSecondaryweaponname}使用${player1.getPrimaryweaponname}释放咒语`;
                      damage = isCriticalHit ? hurtCriticalhitEnd155 : hurtEnd155;
                      mpCost = 4;
                    } else if (player1.getPrimaryweapontypes === 3 && player1.getSecondaryweapontypes === 1) {
                      weaponName = `拉开${player1.getPrimaryweaponname}射出利箭`;
                      damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                    } else if (player1.getPrimaryweapontypes === 3 && player1.getSecondaryweapontypes === 2) {
                      weaponName = `拉开${player1.getPrimaryweaponname}射出利箭`;
                      damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                    } else if (player1.getPrimaryweapontypes === 3 && player1.getSecondaryweapontypes === 3) {
                      weaponName = `双手使用${player1.getPrimaryweaponname}射出利箭`;
                      damage = isCriticalHit ? hurtCriticalhitEnd151 : hurtEnd151;
                    } else if (player1.getPrimaryweapontypes === 3 && player1.getSecondaryweapontypes === 4) {
                      weaponName = `手持${player1.getSecondaryweaponname}使用${player1.getPrimaryweaponname}射出利箭`;
                      damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                    } else if (player1.getPrimaryweapontypes === 4 && player1.getSecondaryweapontypes === 1) {
                      weaponName = `手持${player1.getSecondaryweaponname}挥舞${player1.getPrimaryweaponname}进行斩击`;
                      damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                    } else if (player1.getPrimaryweapontypes === 4 && player1.getSecondaryweapontypes === 2) {
                      weaponName = `手持${player1.getSecondaryweaponname}使用${player1.getPrimaryweaponname}释放咒语`;
                      damage = isCriticalHit ? hurtCriticalhitEnd155 : hurtEnd155;
                      mpCost = 4;
                    } else if (player1.getPrimaryweapontypes === 4 && player1.getSecondaryweapontypes === 3) {
                      weaponName = `手持${player1.getSecondaryweaponname}使用${player1.getPrimaryweaponname}射出利箭`;
                      damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                    } else if (player1.getPrimaryweapontypes === 4 && player1.getSecondaryweapontypes === 4) {
                      weaponName = `架起${player1.getSecondaryweaponname}与${player1.getPrimaryweaponname}冲锋`;
                      damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                    }
                    weaponWithFist(damage, "玛娜耗尽", weaponName, mpCost);
                  } else if (skillEffect1 === 2) {
                    if (player1.getPrimaryweapontypes === 1) {
                      weaponName = `挥舞${player1.getPrimaryweaponname}进行斩击`;
                      damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                    } else if (player1.getPrimaryweapontypes === 2) {
                      weaponName = `使用${player1.getPrimaryweaponname}释放咒语`;
                      damage = isCriticalHit ? hurtCriticalhitEnd155 : hurtEnd155;
                      mpCost = 4;
                    } else if (player1.getPrimaryweapontypes === 3) {
                      weaponName = `拉开${player1.getPrimaryweaponname}射出利箭`;
                      damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                    } else if (player1.getPrimaryweapontypes === 4) {
                      weaponName = `架起${player1.getPrimaryweaponname}进行冲锋`;
                      damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                    }
                    weaponWithFist(damage, "玛娜耗尽", weaponName, mpCost);
                  } else if (skillEffect1 === 3) {
                    if (player1.getSecondaryweapontypes === 1) {
                      weaponName = `挥舞${player1.getSecondaryweaponname}进行斩击`;
                      damage = isCriticalHit ? hurtCriticalhitEnd153 : hurtEnd153;
                    } else if (player1.getSecondaryweapontypes === 2) {
                      weaponName = `使用${player1.getSecondaryweaponname}释放咒语`;
                      damage = isCriticalHit ? hurtCriticalhitEnd156 : hurtEnd156;
                      mpCost = 4;
                    } else if (player1.getSecondaryweapontypes === 3) {
                      weaponName = `拉开${player1.getSecondaryweaponname}射出利箭`;
                      damage = isCriticalHit ? hurtCriticalhitEnd153 : hurtEnd153;
                    } else if (player1.getSecondaryweapontypes === 4) {
                      weaponName = `挥舞${player1.getPrimaryweaponname}进行斩击`;
                      damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                    }
                    weaponWithFist(damage, "玛娜耗尽", weaponName, mpCost);
                  }
                }
              } else {
                switch (skill.type) {
                  case 1:
                    useSkill1(skill.name, skill.info, skill.attckInfo, skill.endInfo, skillCriticalHit ? skill.hurtCritical[1] : skill.hurt[1], skill.mpCost);
                    break;
                  case 2:
                    useSkill1(skill.name, skill.info, skill.attckInfo, skill.endInfo, skillCriticalHit ? skill.hurtCritical[2] : skill.hurt[2], skill.mpCost);
                    break;
                  case 3:
                    useSkill2(skill.name, skill.info, skill.attckInfo, skill.endInfo, skillCriticalHit ? skill.hurtCritical[3] : skill.hurt[3], skill.mpCost);
                    break;
                }
              }
            }, "handleSkillUsage");
            if (maxsidestep3 * 2 > maxsidestep4) {
              if (availableSkills.length > 0) {
                const skill = availableSkills.length === 1 ? availableSkills[0] : availableSkills[Math.floor(Math.random() * availableSkills.length)];
                handleSkillUsage(skill);
              } else {
                const skillEffect1 = Math.floor(Math.random() * 2) + 1;
                const primaryWeaponEquipped = player1.getPrimaryweapontypes !== 0;
                const secondaryWeaponEquipped = player1.getSecondaryweapontypes !== 0;
                const isCriticalHit = criticalHitRandom1 < player1.criticalhit;
                let weaponName = "";
                let damage;
                let mpCost = 0;
                if (!primaryWeaponEquipped && !secondaryWeaponEquipped) {
                  attackWithFist(skillCriticalHit ? hurtCriticalhitEnd101 : hurtEnd101, "玛娜耗尽");
                } else if (primaryWeaponEquipped && !secondaryWeaponEquipped) {
                  if (player1.getPrimaryweapontypes === 1) {
                    weaponName = `挥舞${player1.getPrimaryweaponname}进行斩击`;
                    damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                  } else if (player1.getPrimaryweapontypes === 2) {
                    weaponName = `使用${player1.getPrimaryweaponname}释放咒语`;
                    damage = isCriticalHit ? hurtCriticalhitEnd155 : hurtEnd155;
                    mpCost = 4;
                  } else if (player1.getPrimaryweapontypes === 3) {
                    weaponName = `拉开${player1.getPrimaryweaponname}射出利箭`;
                    damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                  } else if (player1.getPrimaryweapontypes === 4) {
                    weaponName = `架起${player1.getPrimaryweaponname}进行冲锋`;
                    damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                  }
                  weaponWithFist(damage, "玛娜耗尽", weaponName, mpCost);
                } else if (!primaryWeaponEquipped && secondaryWeaponEquipped) {
                  if (player1.getSecondaryweapontypes === 1) {
                    weaponName = `挥舞${player1.getSecondaryweaponname}进行斩击`;
                    damage = isCriticalHit ? hurtCriticalhitEnd153 : hurtEnd153;
                  } else if (player1.getSecondaryweapontypes === 2) {
                    weaponName = `使用${player1.getSecondaryweaponname}释放咒语`;
                    damage = isCriticalHit ? hurtCriticalhitEnd155 : hurtEnd155;
                    mpCost = 4;
                  } else if (player1.getSecondaryweapontypes === 3) {
                    weaponName = `拉开${player1.getSecondaryweaponname}射出利箭`;
                    damage = isCriticalHit ? hurtCriticalhitEnd153 : hurtEnd153;
                  } else if (player1.getSecondaryweapontypes === 4) {
                    weaponName = `挥舞${player1.getPrimaryweaponname}进行斩击`;
                    damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                  }
                  weaponWithFist(damage, "玛娜耗尽", weaponName, mpCost);
                } else {
                  if (skillEffect1 === 1) {
                    if (player1.getPrimaryweapontypes === 1 && player1.getSecondaryweapontypes === 1) {
                      weaponName = `双手挥舞${player1.getPrimaryweaponname}与${player1.getSecondaryweaponname}进行斩击`;
                      damage = isCriticalHit ? hurtCriticalhitEnd151 : hurtEnd151;
                    } else if (player1.getPrimaryweapontypes === 1 && player1.getSecondaryweapontypes === 2) {
                      weaponName = `挥舞${player1.getPrimaryweaponname}进行斩击`;
                      damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                    } else if (player1.getPrimaryweapontypes === 1 && player1.getSecondaryweapontypes === 3) {
                      weaponName = `挥舞${player1.getPrimaryweaponname}进行斩击`;
                      damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                    } else if (player1.getPrimaryweapontypes === 1 && player1.getSecondaryweapontypes === 4) {
                      weaponName = `手持${player1.getSecondaryweaponname}挥舞${player1.getPrimaryweaponname}进行斩击`;
                      damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                    } else if (player1.getPrimaryweapontypes === 2 && player1.getSecondaryweapontypes === 1) {
                      weaponName = `使用${player1.getPrimaryweaponname}释放咒语`;
                      damage = isCriticalHit ? hurtCriticalhitEnd155 : hurtEnd155;
                      mpCost = 4;
                    } else if (player1.getPrimaryweapontypes === 2 && player1.getSecondaryweapontypes === 2) {
                      weaponName = `双持${player1.getPrimaryweaponname}与${player1.getSecondaryweaponname}释放咒语`;
                      damage = isCriticalHit ? hurtCriticalhitEnd154 : hurtEnd154;
                      mpCost = 4;
                    } else if (player1.getPrimaryweapontypes === 2 && player1.getSecondaryweapontypes === 3) {
                      weaponName = `使用${player1.getPrimaryweaponname}释放咒语`;
                      damage = isCriticalHit ? hurtCriticalhitEnd155 : hurtEnd155;
                      mpCost = 4;
                    } else if (player1.getPrimaryweapontypes === 2 && player1.getSecondaryweapontypes === 4) {
                      weaponName = `手持${player1.getSecondaryweaponname}使用${player1.getPrimaryweaponname}释放咒语`;
                      damage = isCriticalHit ? hurtCriticalhitEnd155 : hurtEnd155;
                      mpCost = 4;
                    } else if (player1.getPrimaryweapontypes === 3 && player1.getSecondaryweapontypes === 1) {
                      weaponName = `拉开${player1.getPrimaryweaponname}射出利箭`;
                      damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                    } else if (player1.getPrimaryweapontypes === 3 && player1.getSecondaryweapontypes === 2) {
                      weaponName = `拉开${player1.getPrimaryweaponname}射出利箭`;
                      damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                    } else if (player1.getPrimaryweapontypes === 3 && player1.getSecondaryweapontypes === 3) {
                      weaponName = `双手使用${player1.getPrimaryweaponname}射出利箭`;
                      damage = isCriticalHit ? hurtCriticalhitEnd151 : hurtEnd151;
                    } else if (player1.getPrimaryweapontypes === 3 && player1.getSecondaryweapontypes === 4) {
                      weaponName = `手持${player1.getSecondaryweaponname}使用${player1.getPrimaryweaponname}射出利箭`;
                      damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                    } else if (player1.getPrimaryweapontypes === 4 && player1.getSecondaryweapontypes === 1) {
                      weaponName = `手持${player1.getSecondaryweaponname}挥舞${player1.getPrimaryweaponname}进行斩击`;
                      damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                    } else if (player1.getPrimaryweapontypes === 4 && player1.getSecondaryweapontypes === 2) {
                      weaponName = `手持${player1.getSecondaryweaponname}使用${player1.getPrimaryweaponname}释放咒语`;
                      damage = isCriticalHit ? hurtCriticalhitEnd155 : hurtEnd155;
                      mpCost = 4;
                    } else if (player1.getPrimaryweapontypes === 4 && player1.getSecondaryweapontypes === 3) {
                      weaponName = `手持${player1.getSecondaryweaponname}使用${player1.getPrimaryweaponname}射出利箭`;
                      damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                    } else if (player1.getPrimaryweapontypes === 4 && player1.getSecondaryweapontypes === 4) {
                      weaponName = `架起${player1.getSecondaryweaponname}与${player1.getPrimaryweaponname}冲锋`;
                      damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                    }
                    weaponWithFist(damage, "玛娜耗尽", weaponName, mpCost);
                  } else if (skillEffect1 === 2) {
                    if (player1.getPrimaryweapontypes === 1) {
                      weaponName = `挥舞${player1.getPrimaryweaponname}进行斩击`;
                      damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                    } else if (player1.getPrimaryweapontypes === 2) {
                      weaponName = `使用${player1.getPrimaryweaponname}释放咒语`;
                      damage = isCriticalHit ? hurtCriticalhitEnd155 : hurtEnd155;
                      mpCost = 4;
                    } else if (player1.getPrimaryweapontypes === 3) {
                      weaponName = `拉开${player1.getPrimaryweaponname}射出利箭`;
                      damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                    } else if (player1.getPrimaryweapontypes === 4) {
                      weaponName = `架起${player1.getPrimaryweaponname}进行冲锋`;
                      damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                    }
                    weaponWithFist(damage, "玛娜耗尽", weaponName, mpCost);
                  } else if (skillEffect1 === 3) {
                    if (player1.getSecondaryweapontypes === 1) {
                      weaponName = `挥舞${player1.getSecondaryweaponname}进行斩击`;
                      damage = isCriticalHit ? hurtCriticalhitEnd153 : hurtEnd153;
                    } else if (player1.getSecondaryweapontypes === 2) {
                      weaponName = `使用${player1.getSecondaryweaponname}释放咒语`;
                      damage = isCriticalHit ? hurtCriticalhitEnd156 : hurtEnd156;
                      mpCost = 4;
                    } else if (player1.getSecondaryweapontypes === 3) {
                      weaponName = `拉开${player1.getSecondaryweaponname}射出利箭`;
                      damage = isCriticalHit ? hurtCriticalhitEnd153 : hurtEnd153;
                    } else if (player1.getSecondaryweapontypes === 4) {
                      weaponName = `挥舞${player1.getPrimaryweaponname}进行斩击`;
                      damage = isCriticalHit ? hurtCriticalhitEnd152 : hurtEnd152;
                    }
                    weaponWithFist(damage, "玛娜耗尽", weaponName, mpCost);
                  }
                }
              }
            } else {
              if (availableSkills.length > 0) {
                const skill = availableSkills.length === 1 ? availableSkills[0] : availableSkills[Math.floor(Math.random() * availableSkills.length)];
                if (skill.type === 3 && !skillManaExhausted(skill.mpCost)) {
                  useSkill2(skill.name, skill.info, skill.attckInfo, skill.endInfo, skillCriticalHit ? skill.hurtCritical[3] : skill.hurt[3], skill.mpCost);
                } else {
                  result = Math.floor(Math.random() * 2) + 1 === 1 ? `${player2.name}挡住了攻击` : `${player2.name}躲过了攻击`;
                }
              } else {
                result = Math.floor(Math.random() * 2) + 1 === 1 ? `${player2.name}挡住了攻击` : `${player2.name}躲过了攻击`;
              }
            }
          }
          break;
      }
    } else {
      switch (action) {
        case "武器攻击":
          {
            const skillEffect1 = Math.floor(Math.random() * 3) + 1;
            const primaryWeaponEquipped = player2.getPrimaryweapontypes !== 0;
            const secondaryWeaponEquipped = player2.getSecondaryweapontypes !== 0;
            const isCriticalHit = criticalHitRandom1 < player2.criticalhit;
            if (maxsidestep3 * 2.5 > maxsidestep4) {
              let weaponName, damage, text;
              if (!primaryWeaponEquipped && !secondaryWeaponEquipped) {
                weaponName = "挥拳";
                text = "因未装备武器";
                damage = isCriticalHit ? hurtCriticalhitEnd201 : hurtEnd201;
              } else if (primaryWeaponEquipped && !secondaryWeaponEquipped) {
                if (player2.getPrimaryweapontypes === 1) {
                  weaponName = `挥舞${player2.getPrimaryweaponname}进行斩击`;
                  damage = isCriticalHit ? hurtCriticalhitEnd252 : hurtEnd252;
                } else if (player2.getPrimaryweapontypes === 2) {
                  weaponName = `使用${player2.getPrimaryweaponname}释放咒语`;
                  damage = isCriticalHit ? hurtCriticalhitEnd255 : hurtEnd255;
                } else if (player2.getPrimaryweapontypes === 3) {
                  weaponName = `拉开${player2.getPrimaryweaponname}射出利箭`;
                  damage = isCriticalHit ? hurtCriticalhitEnd252 : hurtEnd252;
                } else if (player2.getPrimaryweapontypes === 4) {
                  weaponName = `架起${player2.getPrimaryweaponname}进行冲锋`;
                  damage = isCriticalHit ? hurtCriticalhitEnd252 : hurtEnd252;
                }
              } else if (!primaryWeaponEquipped && secondaryWeaponEquipped) {
                if (player2.getSecondaryweapontypes === 1) {
                  weaponName = `挥舞${player2.getSecondaryweaponname}进行斩击`;
                  damage = isCriticalHit ? hurtCriticalhitEnd253 : hurtEnd253;
                } else if (player2.getSecondaryweapontypes === 2) {
                  weaponName = `使用${player2.getSecondaryweaponname}释放咒语`;
                  damage = isCriticalHit ? hurtCriticalhitEnd255 : hurtEnd255;
                } else if (player2.getSecondaryweapontypes === 3) {
                  weaponName = `拉开${player2.getSecondaryweaponname}射出利箭`;
                  damage = isCriticalHit ? hurtCriticalhitEnd253 : hurtEnd253;
                } else if (player2.getSecondaryweapontypes === 4) {
                  weaponName = `挥舞${player2.getPrimaryweaponname}进行斩击`;
                  damage = isCriticalHit ? hurtCriticalhitEnd252 : hurtEnd252;
                }
              } else {
                if (skillEffect1 === 1) {
                  if (player2.getPrimaryweapontypes === 1 && player2.getSecondaryweapontypes === 1) {
                    weaponName = `双手挥舞${player2.getPrimaryweaponname}与${player2.getSecondaryweaponname}进行斩击`;
                    damage = isCriticalHit ? hurtCriticalhitEnd251 : hurtEnd251;
                  } else if (player2.getPrimaryweapontypes === 1 && player2.getSecondaryweapontypes === 2) {
                    weaponName = `挥舞${player2.getPrimaryweaponname}进行斩击`;
                    damage = isCriticalHit ? hurtCriticalhitEnd252 : hurtEnd252;
                  } else if (player2.getPrimaryweapontypes === 1 && player2.getSecondaryweapontypes === 3) {
                    weaponName = `挥舞${player2.getPrimaryweaponname}进行斩击`;
                    damage = isCriticalHit ? hurtCriticalhitEnd252 : hurtEnd252;
                  } else if (player2.getPrimaryweapontypes === 1 && player2.getSecondaryweapontypes === 4) {
                    weaponName = `手持${player2.getSecondaryweaponname}挥舞${player2.getPrimaryweaponname}进行斩击`;
                    damage = isCriticalHit ? hurtCriticalhitEnd252 : hurtEnd252;
                  } else if (player2.getPrimaryweapontypes === 2 && player2.getSecondaryweapontypes === 1) {
                    weaponName = `使用${player2.getPrimaryweaponname}释放咒语`;
                    damage = isCriticalHit ? hurtCriticalhitEnd255 : hurtEnd255;
                  } else if (player2.getPrimaryweapontypes === 2 && player2.getSecondaryweapontypes === 2) {
                    weaponName = `双持${player2.getPrimaryweaponname}与${player2.getSecondaryweaponname}释放咒语`;
                    damage = isCriticalHit ? hurtCriticalhitEnd254 : hurtEnd254;
                  } else if (player2.getPrimaryweapontypes === 2 && player2.getSecondaryweapontypes === 3) {
                    weaponName = `使用${player2.getPrimaryweaponname}释放咒语`;
                    damage = isCriticalHit ? hurtCriticalhitEnd255 : hurtEnd255;
                  } else if (player2.getPrimaryweapontypes === 2 && player2.getSecondaryweapontypes === 4) {
                    weaponName = `手持${player2.getSecondaryweaponname}使用${player2.getPrimaryweaponname}释放咒语`;
                    damage = isCriticalHit ? hurtCriticalhitEnd255 : hurtEnd255;
                  } else if (player2.getPrimaryweapontypes === 3 && player2.getSecondaryweapontypes === 1) {
                    weaponName = `拉开${player1.getPrimaryweaponname}射出利箭`;
                    damage = isCriticalHit ? hurtCriticalhitEnd252 : hurtEnd252;
                  } else if (player2.getPrimaryweapontypes === 3 && player2.getSecondaryweapontypes === 2) {
                    weaponName = `拉开${player1.getPrimaryweaponname}射出利箭`;
                    damage = isCriticalHit ? hurtCriticalhitEnd252 : hurtEnd252;
                  } else if (player2.getPrimaryweapontypes === 3 && player2.getSecondaryweapontypes === 3) {
                    weaponName = `双手使用${player1.getPrimaryweaponname}射出利箭`;
                    damage = isCriticalHit ? hurtCriticalhitEnd251 : hurtEnd251;
                  } else if (player2.getPrimaryweapontypes === 3 && player2.getSecondaryweapontypes === 4) {
                    weaponName = `手持${player1.getSecondaryweaponname}使用${player1.getPrimaryweaponname}射出利箭`;
                    damage = isCriticalHit ? hurtCriticalhitEnd252 : hurtEnd252;
                  } else if (player2.getPrimaryweapontypes === 4 && player2.getSecondaryweapontypes === 1) {
                    weaponName = `手持${player2.getSecondaryweaponname}挥舞${player2.getPrimaryweaponname}进行斩击`;
                    damage = isCriticalHit ? hurtCriticalhitEnd252 : hurtEnd252;
                  } else if (player2.getPrimaryweapontypes === 4 && player2.getSecondaryweapontypes === 2) {
                    weaponName = `手持${player2.getSecondaryweaponname}使用${player2.getPrimaryweaponname}释放咒语`;
                    damage = isCriticalHit ? hurtCriticalhitEnd255 : hurtEnd255;
                  } else if (player2.getPrimaryweapontypes === 4 && player2.getSecondaryweapontypes === 3) {
                    weaponName = `手持${player2.getSecondaryweaponname}使用${player2.getPrimaryweaponname}射出利箭`;
                    damage = isCriticalHit ? hurtCriticalhitEnd252 : hurtEnd252;
                  } else if (player2.getPrimaryweapontypes === 4 && player2.getSecondaryweapontypes === 4) {
                    weaponName = `架起${player2.getSecondaryweaponname}与${player2.getPrimaryweaponname}冲锋`;
                    damage = isCriticalHit ? hurtCriticalhitEnd252 : hurtEnd252;
                  }
                } else if (skillEffect1 === 2) {
                  if (player2.getPrimaryweapontypes === 1) {
                    weaponName = `挥舞${player2.getPrimaryweaponname}进行斩击`;
                    damage = isCriticalHit ? hurtCriticalhitEnd252 : hurtEnd252;
                  } else if (player2.getPrimaryweapontypes === 2) {
                    weaponName = `使用${player2.getPrimaryweaponname}释放咒语`;
                    damage = isCriticalHit ? hurtCriticalhitEnd255 : hurtEnd255;
                  } else if (player2.getPrimaryweapontypes === 3) {
                    weaponName = `拉开${player2.getPrimaryweaponname}射出利箭`;
                    damage = isCriticalHit ? hurtCriticalhitEnd252 : hurtEnd252;
                  } else if (player2.getPrimaryweapontypes === 4) {
                    weaponName = `架起${player2.getPrimaryweaponname}进行冲锋`;
                    damage = isCriticalHit ? hurtCriticalhitEnd252 : hurtEnd252;
                  }
                } else if (skillEffect1 === 3) {
                  if (player2.getSecondaryweapontypes === 1) {
                    weaponName = `挥舞${player2.getSecondaryweaponname}进行斩击`;
                    damage = isCriticalHit ? hurtCriticalhitEnd253 : hurtEnd253;
                  } else if (player2.getSecondaryweapontypes === 2) {
                    weaponName = `使用${player2.getSecondaryweaponname}释放咒语`;
                    damage = isCriticalHit ? hurtCriticalhitEnd256 : hurtEnd256;
                  } else if (player2.getSecondaryweapontypes === 3) {
                    weaponName = `拉开${player2.getSecondaryweaponname}射出利箭`;
                    damage = isCriticalHit ? hurtCriticalhitEnd253 : hurtEnd253;
                  } else if (player2.getSecondaryweapontypes === 4) {
                    weaponName = `挥舞${player2.getPrimaryweaponname}进行斩击`;
                    damage = isCriticalHit ? hurtCriticalhitEnd252 : hurtEnd252;
                  }
                }
              }
              if (text === void 0) {
                text = "";
              }
              player1.hp -= damage;
              if (player1.getPrimaryweapontypes === 2) {
                player2.mp -= 4;
              }
              player2.mp += 6;
              result = isCriticalHit ? `暴击!${text}${player2.name}对${player1.name}${weaponName},造成了${damage}点伤害` : `${text}${player2.name}对${player1.name}${weaponName},造成了${damage}点伤害`;
            } else {
              result = Math.floor(Math.random() * 2) + 1 === 1 ? `${player1.name}挡住了攻击` : `${player1.name}躲过了攻击`;
            }
          }
          break;
        case "技能攻击":
          {
            const skillEffect = Math.floor(Math.random() * 3) + 1;
            const weaponCriticalHit = criticalHitRandom1 < player2.criticalhit;
            const weaponCriticalHit2 = criticalHitRandom2 < player2.criticalhit;
            const attackWithSkill = /* @__PURE__ */ __name((skillName, skillInfo, attackInfo, endInfo, mpConsumption, damage) => {
              player1.hp -= damage;
              player2.mp -= mpConsumption;
              player2.mp += 6;
              result = weaponCriticalHit ? `暴击!${player2.name}对${player1.name}使用${skillName},${skillInfo}${attackInfo}${endInfo},造成了${damage}点伤害` : `${player2.name}对${player1.name}使用${skillName},${skillInfo}${attackInfo}${endInfo},造成了${damage}点伤害`;
            }, "attackWithSkill");
            const treatmentWithSkill = /* @__PURE__ */ __name((skillName, skillInfo, attackInfo, endInfo, mpConsumption, treatment) => {
              player2.hp += treatment;
              player2.mp -= mpConsumption;
              player2.mp += 6;
              result = weaponCriticalHit ? `大祝福! ${player2.name}使用${skillName},${skillInfo}${attackInfo}${endInfo},恢复了${treatment}点HP` : `${player2.name}使用${skillName},${skillInfo}${attackInfo}${endInfo},恢复了${treatment}点HP`;
            }, "treatmentWithSkill");
            const basicAttack = /* @__PURE__ */ __name((weaponName, text, damage, isCriticalHit) => {
              player1.hp -= damage;
              player2.mp += 6;
              result = isCriticalHit ? `暴击! ${text},造成了${damage}点伤害` : `${text},造成了${damage}点伤害`;
            }, "basicAttack");
            const weaponNameAndDamage = /* @__PURE__ */ __name((weaponEquipped, weaponName, weaponType, isCriticalHit) => {
              let text = "因未装备武器";
              let damage = isCriticalHit ? hurtCriticalhitEnd201 : hurtEnd201;
              if (weaponEquipped) {
                switch (weaponType) {
                  case 1:
                    text = `挥舞${weaponName}进行斩击`;
                    damage = isCriticalHit ? hurtCriticalhitEnd252 : hurtEnd252;
                    break;
                  case 2:
                    text = `使用${weaponName}释放咒语`;
                    damage = isCriticalHit ? hurtCriticalhitEnd255 : hurtEnd255;
                    break;
                  case 3:
                    text = `拉开${weaponName}射出利箭`;
                    damage = isCriticalHit ? hurtCriticalhitEnd252 : hurtEnd252;
                    break;
                  case 4:
                    text = `架起${weaponName}进行冲锋`;
                    damage = isCriticalHit ? hurtCriticalhitEnd252 : hurtEnd252;
                    break;
                }
              }
              return { text, damage };
            }, "weaponNameAndDamage");
            const attackWithWeapon = /* @__PURE__ */ __name((primaryWeaponEquipped, secondaryWeaponEquipped, isCriticalHit) => {
              let weaponData = { text: "挥拳", damage: isCriticalHit ? hurtCriticalhitEnd201 : hurtEnd201 };
              if (primaryWeaponEquipped && secondaryWeaponEquipped) {
                const primary = weaponNameAndDamage(true, player2.getPrimaryweaponname, player2.getPrimaryweapontypes, isCriticalHit);
                const secondary = weaponNameAndDamage(true, player2.getSecondaryweaponname, player2.getSecondaryweapontypes, isCriticalHit);
                switch (skillEffect) {
                  case 1:
                    weaponData = primary;
                    weaponData.text = `双手${primary.text}与${secondary.text}`;
                    break;
                  case 2:
                    weaponData = primary;
                    break;
                  case 3:
                    weaponData = secondary;
                    break;
                }
              } else if (primaryWeaponEquipped) {
                weaponData = weaponNameAndDamage(true, player2.getPrimaryweaponname, player2.getPrimaryweapontypes, isCriticalHit);
              } else if (secondaryWeaponEquipped) {
                weaponData = weaponNameAndDamage(true, player2.getSecondaryweaponname, player2.getSecondaryweapontypes, isCriticalHit);
              }
              basicAttack(weaponData.text, weaponData.text, weaponData.damage, isCriticalHit);
            }, "attackWithWeapon");
            const skillData = [
              {
                skillName: player2.Skillname1,
                skillInfo: player2.Skillskillinfo1,
                attackInfo: player2.Skillattckinfo1,
                endInfo: player2.Skillendinfo1,
                mpConsumption: player2.getSkill1consumptionofmagic,
                skilldamage1: weaponCriticalHit ? hurtCriticalhitEnd202 : hurtEnd202,
                skilldamage2: weaponCriticalHit ? hurtCriticalhitEnd205 : hurtEnd205,
                skilldamage3: weaponCriticalHit ? theTreatmentCriticalhitEnd208 : theTreatmentEnd208,
                skillType: player2.Skilltypes1
              },
              {
                skillName: player2.Skillname2,
                skillInfo: player2.Skillskillinfo2,
                attackInfo: player2.Skillattckinfo2,
                endInfo: player2.Skillendinfo2,
                mpConsumption: player2.getSkill2consumptionofmagic,
                skilldamage1: weaponCriticalHit ? hurtCriticalhitEnd203 : hurtEnd203,
                skilldamage2: weaponCriticalHit ? hurtCriticalhitEnd206 : hurtEnd206,
                skilldamage3: weaponCriticalHit ? theTreatmentCriticalhitEnd209 : theTreatmentEnd209,
                skillType: player2.Skilltypes2
              },
              {
                skillName: player2.Skillname3,
                skillInfo: player2.Skillskillinfo3,
                attackInfo: player2.Skillattckinfo3,
                endInfo: player2.Skillendinfo3,
                mpConsumption: player2.getSkill3consumptionofmagic,
                skilldamage1: weaponCriticalHit ? hurtCriticalhitEnd204 : hurtEnd204,
                skilldamage2: weaponCriticalHit ? hurtCriticalhitEnd207 : hurtEnd207,
                skilldamage3: weaponCriticalHit ? theTreatmentCriticalhitEnd210 : theTreatmentEnd210,
                skillType: player2.Skilltypes3
              }
            ];
            const availableSkills = skillData.filter((skill) => skill.skillType !== 0);
            if (maxsidestep4 * 2 > maxsidestep3) {
              if (availableSkills.length > 0) {
                let skill;
                if (availableSkills.length === 1) {
                  skill = availableSkills[0];
                } else if (availableSkills.length === 2) {
                  skill = availableSkills[Math.floor(Math.random() * 2)];
                } else if (availableSkills.length === 3) {
                  skill = skillData[skillEffect - 1];
                }
                if (skill && player2.mp >= skill.mpConsumption) {
                  switch (skill.skillType) {
                    case 1:
                      attackWithSkill(skill.skillName, skill.skillInfo, skill.attackInfo, skill.endInfo, skill.mpConsumption, skill.skilldamage1);
                      break;
                    case 2:
                      attackWithSkill(skill.skillName, skill.skillInfo, skill.attackInfo, skill.endInfo, skill.mpConsumption, skill.skilldamage2);
                      break;
                    case 3:
                      treatmentWithSkill(skill.skillName, skill.skillInfo, skill.attackInfo, skill.endInfo, skill.mpConsumption, skill.skilldamage3);
                      break;
                  }
                } else {
                  attackWithWeapon(player2.getPrimaryweapontypes !== 0, player2.getSecondaryweapontypes !== 0, weaponCriticalHit2);
                }
              } else {
                attackWithWeapon(player2.getPrimaryweapontypes !== 0, player2.getSecondaryweapontypes !== 0, weaponCriticalHit2);
              }
            } else {
              if (availableSkills.length > 0) {
                let skill;
                if (availableSkills.length === 1) {
                  skill = availableSkills[0];
                } else if (availableSkills.length === 2) {
                  skill = availableSkills[Math.floor(Math.random() * 2)];
                } else if (availableSkills.length === 3) {
                  skill = skillData[skillEffect - 1];
                }
                if (skill && skill.skillType === 3 && player2.mp >= skill.mpConsumption) {
                  treatmentWithSkill(skill.skillName, skill.skillInfo, skill.attackInfo, skill.endInfo, skill.mpConsumption, skill.skilldamage3);
                } else {
                  result = Math.floor(Math.random() * 2) + 1 === 1 ? `${player1.name}挡住了攻击` : `${player1.name}躲过了攻击`;
                }
              } else {
                result = Math.floor(Math.random() * 2) + 1 === 1 ? `${player1.name}挡住了攻击` : `${player1.name}躲过了攻击`;
              }
            }
          }
          break;
      }
    }
    battleLogs.push({
      player1: { ...player1 },
      // 使用深拷贝确保每回合记录的玩家对象独立
      player2: { ...player2 },
      action,
      result,
      player1Hp: player1.hp,
      player1Mp: player1.mp,
      player2Hp: player2.hp,
      player2Mp: player2.mp
    });
    if (player1.hp <= 0 || player2.hp <= 0) {
      break;
    }
  }
  if (round >= maxRounds) {
    battleLogs.push({
      player1: { ...player1 },
      player2: { ...player2 },
      action: "回合结束",
      result: "达到最大回合数，战斗结束",
      player1Hp: player1.hp,
      player1Mp: player1.mp,
      player2Hp: player2.hp,
      player2Mp: player2.mp
    });
  }
  return battleLogs;
}
__name(simulateBattle, "simulateBattle");
function isEven(number) {
  return number % 2 === 0;
}
__name(isEven, "isEven");
function generateBattleLogsHtml(avatarUrl1, avatarUrl2, name1, hp1, mp1, attack1, sturdypoint1, dexterity1, luckyvalue1, spiritualintuition1, stamina1, intelligence1, faith1, armourclass1, physicaldefense1, magicaldefense1, name2, hp2, mp2, attack2, sturdypoint2, dexterity2, luckyvalue2, spiritualintuition2, stamina2, intelligence2, faith2, armourclass2, physicaldefense2, magicaldefense2, criticalhit, getSkill1id, getSkill1name, getSkill1harm, getSkill1types, getSkill1skillinfo, getSkill1attckinfo, getSkill1endinfo, getSkill1consumptionofmagic, getSkill2id, getSkill2name, getSkill2harm, getSkill2types, getSkill2skillinfo, getSkill2attckinfo, getSkill2endinfo, getSkill2consumptionofmagic, getSkill3id, getSkill3name, getSkill3harm, getSkill3types, getSkill3skillinfo, getSkill3attckinfo, getSkill3endinfo, getSkill3consumptionofmagic, getSkill4id, getSkill4name, getSkill4harm, getSkill4types, getSkill4skillinfo, getSkill4attckinfo, getSkill4endinfo, getSkill4consumptionofmagic, getSkill5id, getSkill5name, getSkill5harm, getSkill5types, getSkill5skillinfo, getSkill5attckinfo, getSkill5endinfo, getSkill5consumptionofmagic, getSkill6id, getSkill6name, getSkill6harm, getSkill6types, getSkill6skillinfo, getSkill6attckinfo, getSkill6endinfo, getSkill6consumptionofmagic, getPrimaryweaponname1, getPrimaryweaponharm1, getPrimaryweapontypes1, getPrimaryweaponfightkirelease1, getPrimaryweaponmagicrelease1, getSecondaryweaponname1, getSecondaryweaponharm1, getSecondaryweapontypes1, getSecondaryweaponfightkirelease1, getSecondaryweaponmagicrelease1, getPrimaryweaponname2, getPrimaryweaponharm2, getPrimaryweapontypes2, getPrimaryweaponfightkirelease2, getPrimaryweaponmagicrelease2, getSecondaryweaponname2, getSecondaryweaponharm2, getSecondaryweapontypes2, getSecondaryweaponfightkirelease2, getSecondaryweaponmagicrelease2) {
  const playerA = createPlayer(
    name1,
    avatarUrl1,
    hp1,
    mp1,
    attack1,
    sturdypoint1,
    dexterity1,
    luckyvalue1,
    spiritualintuition1,
    stamina1,
    intelligence1,
    faith1,
    armourclass1,
    physicaldefense1,
    magicaldefense1,
    criticalhit,
    getSkill1id,
    getSkill1name,
    getSkill1harm,
    getSkill1types,
    getSkill1skillinfo,
    getSkill1attckinfo,
    getSkill1endinfo,
    getSkill1consumptionofmagic,
    getSkill2id,
    getSkill2name,
    getSkill2harm,
    getSkill2types,
    getSkill2skillinfo,
    getSkill2attckinfo,
    getSkill2endinfo,
    getSkill2consumptionofmagic,
    getSkill3id,
    getSkill3name,
    getSkill3harm,
    getSkill3types,
    getSkill3skillinfo,
    getSkill3attckinfo,
    getSkill3endinfo,
    getSkill3consumptionofmagic,
    getPrimaryweaponname1,
    getPrimaryweaponharm1,
    getPrimaryweapontypes1,
    getPrimaryweaponfightkirelease1,
    getPrimaryweaponmagicrelease1,
    getSecondaryweaponname1,
    getSecondaryweaponharm1,
    getSecondaryweapontypes1,
    getSecondaryweaponfightkirelease1,
    getSecondaryweaponmagicrelease1
  );
  const playerB = createPlayer(
    name2,
    avatarUrl2,
    hp2,
    mp2,
    attack2,
    sturdypoint2,
    dexterity2,
    luckyvalue2,
    spiritualintuition2,
    stamina2,
    intelligence2,
    faith2,
    armourclass2,
    physicaldefense2,
    magicaldefense2,
    criticalhit,
    getSkill4id,
    getSkill4name,
    getSkill4harm,
    getSkill4types,
    getSkill4skillinfo,
    getSkill4attckinfo,
    getSkill4endinfo,
    getSkill4consumptionofmagic,
    getSkill5id,
    getSkill5name,
    getSkill5harm,
    getSkill5types,
    getSkill5skillinfo,
    getSkill5attckinfo,
    getSkill5endinfo,
    getSkill5consumptionofmagic,
    getSkill6id,
    getSkill6name,
    getSkill6harm,
    getSkill6types,
    getSkill6skillinfo,
    getSkill6attckinfo,
    getSkill6endinfo,
    getSkill6consumptionofmagic,
    getPrimaryweaponname2,
    getPrimaryweaponharm2,
    getPrimaryweapontypes2,
    getPrimaryweaponfightkirelease2,
    getPrimaryweaponmagicrelease2,
    getSecondaryweaponname2,
    getSecondaryweaponharm2,
    getSecondaryweapontypes2,
    getSecondaryweaponfightkirelease2,
    getSecondaryweaponmagicrelease2
  );
  const battleLogs = simulateBattle(playerA, playerB);
  let html = "";
  for (let i = 0; i < battleLogs.length; i++) {
    const log = battleLogs[i];
    if (isEven(i)) {
      html += `
        <div class="battle-log">
          <div class="group">
            <div class="center"><strong>第 ${i + 1} 回合</strong></div>
            <div class="caption1"></div>
            <div class="group1">
              <img class="avatar" src="${log.player1.avatarUrl}" alt="${log.player1.name}">
              <div class="group5">
                <div>${log.player1.name}</div>
                <div>HP:${log.player1Hp}</div>
                <div>MP:${log.player1Mp}</div>
              </div>
              <div class="group7">${log.player1.name}选择使用 ${log.action}</div>
            </div>
            <div class="group2">
              <img class="avatar" src="${log.player2.avatarUrl}" alt="${log.player2.name}">
              <div class="group4">
                <div>${log.player2.name}</div>
                <div>HP:${log.player2Hp}</div>
                <div>MP:${log.player2Mp}</div>
              </div>
              <div class="group6">结果:${log.result}</div>
            </div>
          </div>
        </div>
      `;
    } else {
      html += `
        <div class="battle-log">
          <div class="group">
            <div class="center"><strong>第 ${i + 1} 回合</strong></div>
            <div class="caption1"></div>
            <div class="group1">
              <img class="avatar" src="${log.player2.avatarUrl}" alt="${log.player2.name}">
              <div class="group5">
                <div>${log.player2.name}</div>
                <div>HP:${log.player2Hp}</div>
                <div>MP:${log.player2Mp}</div>
              </div>
              <div class="group7">${log.player2.name}选择使用 ${log.action}</div>
            </div>
            <div class="group2">
              <img class="avatar" src="${log.player1.avatarUrl}" alt="${log.player1.name}">
              <div class="group4">
                <div>${log.player1.name}</div>
                <div>HP:${log.player1Hp}</div>
                <div>MP:${log.player1Mp}</div>
                </div class="group4">
                <div class="group6">结果:${log.result}</div>
            </div>
          </div>
        </div>
      `;
    }
    if (log.player1Hp <= 0) {
      html += `<div class="credit"><strong>${log.player1.name} 被击败了!</strong></div>`;
    }
    if (log.player2Hp <= 0) {
      html += `<div class="credit"><strong>${log.player2.name} 被击败了!</strong></div>`;
    }
    html += "<hr>";
  }
  if (battleLogs.length >= 50) {
    html += '<div class="credit"><strong>达到最大回合数，战斗结束!</strong></div>';
  }
  const finalHpValues = {
    player1: {
      name: playerA.name,
      hp: battleLogs[battleLogs.length - 1].player1Hp
    },
    player2: {
      name: playerB.name,
      hp: battleLogs[battleLogs.length - 1].player2Hp
    }
  };
  const player1hp = battleLogs[battleLogs.length - 1].player1Hp;
  const player1mp = battleLogs[battleLogs.length - 1].player1Mp;
  const player2hp = battleLogs[battleLogs.length - 1].player2Hp;
  const player2mp = battleLogs[battleLogs.length - 1].player2Mp;
  return {
    "html": html,
    "player1hp": player1hp,
    "player1mp": player1mp,
    "player2hp": player2hp,
    "player2mp": player2mp
  };
}
__name(generateBattleLogsHtml, "generateBattleLogsHtml");

// src/duelshtml.ts
var duelsHtml = class {
  static {
    __name(this, "duelsHtml");
  }
  async getDuelsHtml(session, config, ctx) {
    const menu = new menuHtml();
    const getdatarpg = new Rpgdata(ctx, config);
    const img = import_path2.default.join(__dirname, "/img/img2.png").replace(/\\/g, "/");
    const getMenu1 = await menu.menuimg(session.quote, config, ctx);
    const getMenu2 = await menu.menuimg(session, config, ctx);
    const getrpgjson1 = await getdatarpg.userdata(session.quote, ctx);
    const getrpgjson2 = await getdatarpg.userdata(session, ctx);
    const avatarUrl1 = session.platform == "qq" ? `http://q.qlogo.cn/qqapp/${session.bot.config.id}/${session.event.user?.id}/640` : session.quote.member?.user.avatar;
    const avatarUrl2 = session.platform == "qq" ? `http://q.qlogo.cn/qqapp/${session.bot.config.id}/${session.event.user?.id}/640` : session.author.avatar;
    let name1 = session.quote.member.nick;
    if (name1.length <= 0) {
      name1 = session.quote.member.user.name;
    }
    name1 = name1.length > 8 ? name1.substring(0, 8 - 1) + "…" : name1;
    let name2 = session.username;
    if (name2 === void 0) {
      name2 = session.user.name;
    }
    name2 = name2.length > 8 ? name2.substring(0, 8 - 1) + "…" : name2;
    const hp1 = (await ctx.database.get("role_playing_game", { id: String(session.quote.user.id) }))[0]?.healthpoint;
    const mp1 = (await ctx.database.get("role_playing_game", { id: String(session.quote.user.id) }))[0]?.magicpoint;
    const hp2 = (await ctx.database.get("role_playing_game", { id: String(session.userId) }))[0]?.healthpoint;
    const mp2 = (await ctx.database.get("role_playing_game", { id: String(session.userId) }))[0]?.magicpoint;
    const primaryweapon1 = getrpgjson1.primaryweapon;
    const secondaryweapon1 = getrpgjson1.secondaryweapon;
    const primaryweapon2 = getrpgjson2.primaryweapon;
    const secondaryweapon2 = getrpgjson2.secondaryweapon;
    const getPrimaryweapon1 = getdatarpg.getArsenalId(Number(primaryweapon1));
    const getSecondaryweapon1 = getdatarpg.getArsenalId(Number(secondaryweapon1));
    const getPrimaryweapon2 = getdatarpg.getArsenalId(Number(primaryweapon2));
    const getSecondaryweapon2 = getdatarpg.getArsenalId(Number(secondaryweapon2));
    const attack1 = getMenu1.attackEnd;
    const attack2 = getMenu2.attackEnd;
    const sturdypoint1 = getMenu1.sturdypointEnd;
    const sturdypoint2 = getMenu2.sturdypointEnd;
    const dexterity1 = getMenu1.dexterityEnd;
    const dexterity2 = getMenu2.dexterityEnd;
    const luckyvalue1 = getMenu1.luckyvalueEnd;
    const luckyvalue2 = getMenu2.luckyvalueEnd;
    const spiritualintuition1 = getMenu1.spiritualintuitionEnd;
    const spiritualintuition2 = getMenu2.spiritualintuitionEnd;
    const stamina1 = getMenu1.staminaEnd;
    const stamina2 = getMenu2.staminaEnd;
    const intelligence1 = getMenu1.intelligenceEnd;
    const intelligence2 = getMenu2.intelligenceEnd;
    const faith1 = getMenu1.faithEnd;
    const faith2 = getMenu2.faithEnd;
    const armourclass1 = getMenu1.armourclassEnd;
    const armourclass2 = getMenu2.armourclassEnd;
    const physicaldefense1 = getMenu1.physicaldefenseEnd;
    const physicaldefense2 = getMenu2.physicaldefenseEnd;
    const magicaldefense1 = getMenu1.magicdefenseEnd;
    const magicaldefense2 = getMenu2.magicdefenseEnd;
    const skill1 = getrpgjson1.skill1;
    const skill2 = getrpgjson1.skill2;
    const skill3 = getrpgjson1.skill3;
    const skill4 = getrpgjson2.skill1;
    const skill5 = getrpgjson2.skill2;
    const skill6 = getrpgjson2.skill3;
    const getSkill1 = getdatarpg.getSkillId(Number(skill1));
    const getSkill2 = getdatarpg.getSkillId(Number(skill2));
    const getSkill3 = getdatarpg.getSkillId(Number(skill3));
    const getSkill4 = getdatarpg.getSkillId(Number(skill4));
    const getSkill5 = getdatarpg.getSkillId(Number(skill5));
    const getSkill6 = getdatarpg.getSkillId(Number(skill6));
    const getPrimaryweaponname1 = getPrimaryweapon1.name;
    const getPrimaryweaponharm1 = getPrimaryweapon1.harm;
    const getPrimaryweapontypes1 = getPrimaryweapon1.types;
    const getPrimaryweaponfightkirelease1 = getPrimaryweapon1.fightkirelease;
    const getPrimaryweaponmagicrelease1 = getPrimaryweapon1.magicrelease;
    const getPrimaryweaponname2 = getPrimaryweapon2.name;
    const getPrimaryweaponharm2 = getPrimaryweapon2.harm;
    const getPrimaryweapontypes2 = getPrimaryweapon2.types;
    const getPrimaryweaponfightkirelease2 = getPrimaryweapon2.fightkirelease;
    const getPrimaryweaponmagicrelease2 = getPrimaryweapon2.magicrelease;
    const getSecondaryweaponname1 = getSecondaryweapon1.name;
    const getSecondaryweaponharm1 = getSecondaryweapon1.harm;
    const getSecondaryweapontypes1 = getSecondaryweapon1.types;
    const getSecondaryweaponfightkirelease1 = getSecondaryweapon1.fightkirelease;
    const getSecondaryweaponmagicrelease1 = getSecondaryweapon1.magicrelease;
    const getSecondaryweaponname2 = getSecondaryweapon2.name;
    const getSecondaryweaponharm2 = getSecondaryweapon2.harm;
    const getSecondaryweapontypes2 = getSecondaryweapon2.types;
    const getSecondaryweaponfightkirelease2 = getSecondaryweapon2.fightkirelease;
    const getSecondaryweaponmagicrelease2 = getSecondaryweapon2.magicrelease;
    const battleLogsHtml = generateBattleLogsHtml(avatarUrl1, avatarUrl2, name1, hp1, mp1, attack1, sturdypoint1, dexterity1, luckyvalue1, spiritualintuition1, stamina1, intelligence1, faith1, armourclass1, physicaldefense1, magicaldefense1, name2, hp2, mp2, attack2, sturdypoint2, dexterity2, luckyvalue2, spiritualintuition2, stamina2, intelligence2, faith2, armourclass2, physicaldefense2, magicaldefense2, config.criticalhit, getSkill1.id, getSkill1.name, getSkill1.harm, getSkill1.types, getSkill1.skillinfo, getSkill1.attckinfo, getSkill1.endinfo, getSkill1.consumptionofmagic, getSkill2.id, getSkill2.name, getSkill2.harm, getSkill2.types, getSkill2.skillinfo, getSkill2.attckinfo, getSkill2.endinfo, getSkill2.consumptionofmagic, getSkill3.id, getSkill3.name, getSkill3.harm, getSkill3.types, getSkill3.skillinfo, getSkill3.attckinfo, getSkill3.endinfo, getSkill3.consumptionofmagic, getSkill4.id, getSkill4.name, getSkill4.harm, getSkill4.types, getSkill4.skillinfo, getSkill4.attckinfo, getSkill4.endinfo, getSkill4.consumptionofmagic, getSkill5.id, getSkill5.name, getSkill5.harm, getSkill5.types, getSkill5.skillinfo, getSkill5.attckinfo, getSkill5.endinfo, getSkill5.consumptionofmagic, getSkill6.id, getSkill6.name, getSkill6.harm, getSkill6.types, getSkill6.skillinfo, getSkill6.attckinfo, getSkill6.endinfo, getSkill6.consumptionofmagic, getPrimaryweaponname1, getPrimaryweaponharm1, getPrimaryweapontypes1, getPrimaryweaponfightkirelease1, getPrimaryweaponmagicrelease1, getSecondaryweaponname1, getSecondaryweaponharm1, getSecondaryweapontypes1, getSecondaryweaponfightkirelease1, getSecondaryweaponmagicrelease1, getPrimaryweaponname2, getPrimaryweaponharm2, getPrimaryweapontypes2, getPrimaryweaponfightkirelease2, getPrimaryweaponmagicrelease2, getSecondaryweaponname2, getSecondaryweaponharm2, getSecondaryweapontypes2, getSecondaryweaponfightkirelease2, getSecondaryweaponmagicrelease2);
    const htmlContent = `
      <!DOCTYPE html>
      <html lang="zh-cn">
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>决斗日志</title>
        <style>
          body {
            font-family: Arial, sans-serif;
            margin: 0;
            background-color: #ffffff;
            background-image: url('${img}'); /* 设置背景图片 */
            background-size: cover;  /* 图片覆盖整个背景区域 */
            /*background-repeat: no-repeat; !* 不重复图片 *!*/
            background-position: center center; /* 居中对齐图片 */
          }
          .container {
            padding: 20px;
          }
          .profile-card {
            border-radius: 50px;
            position: relative;
            max-width: 100%;
            max-height: 100%;
            background-color: rgba(61, 58, 58, 0.2);
            margin: 10px;
            padding: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
          }
          .battle-log {
            margin-bottom: 5px;
          }
          .game-over {
            color: red;
            font-weight: bold;
          }
          .caption1 {
            border-radius: 20px;
            margin: auto;
            width: 90%;
            height: 5px;
            background-color: rgba(54,52,52,0.6);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
          }
          .title-word1 {
            font-size: 50px;
            text-align: center;
            color: rgb(0,0,0);
          }
          .avatar {
            max-width: 262px;
            max-height: 262px;
            border-radius: 5px;
            border: 5px solid #fff;
            background: #fff;
          }
          .center {
            font-size: 20px;
            text-align: center;
            color: rgb(0,0,0);
          }
          .group {
            max-width: 100%; /* 适当的宽度 */
            max-height: 60%; /* 适当的高度 */
            background-color: rgba(236,230,233,0.21); /* 背景颜色 */
            border-radius: 15px;
            /*padding: 0 20px 0 20px;*/
            display: flex;
            /*align-items: center;*/
            flex-direction: column;
            margin: 0 10px 0 10px;
          }
          .group1 {
            max-width: 95%; /* 适当的宽度 */
            display: flex;
            align-items: flex-start;
            flex-direction: row;
            padding: 10px 20px 10px 20px;
            margin: 2px 10px 2px 10px;
            background-color: rgba(65,60,62,0.21); /* 背景颜色 */
            border-radius: 15px;
            gap: 10px;
          }
          .group2 {
            max-width: 95%; /* 适当的宽度 */
            display: flex;
            flex-direction: row-reverse;
            align-items: flex-start;
            padding: 10px 20px 10px 20px;
            margin: 2px 10px 2px 10px;
            background-color: rgba(65,60,62,0.21); /* 背景颜色 */
            border-radius: 15px;
            gap: 10px;
          }
          .group4 {
            max-width: 20%; /* 适当的宽度 */
            display: flex;
            flex-direction: column;
            align-items: flex-end;
            padding: 10px 20px 10px 20px;
            margin: 0 0 10px 0;
            background-color: rgba(236,230,233,0.21); /* 背景颜色 */
            border-radius: 10px;
            white-space: nowrap; /* 添加这行，如果你希望不换行 */
          }
          .group5 {
            max-width: 20%; /* 适当的宽度 */
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            padding: 10px 20px 10px 20px;
            margin: 0 0 10px 0;
            background-color: rgba(236,230,233,0.21); /* 背景颜色 */
            border-radius: 10px;
            white-space: nowrap; /* 添加这行，如果你希望不换行 */
          }
          .group6 {
            max-width: 70%; /* 适当的宽度 */
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            padding: 10px 20px 10px 20px;
            margin: 0 auto;
            background-color: rgba(236,230,233,0.21); /* 背景颜色 */
            border-radius: 10px;
            word-wrap: break-word; /* 添加这行 */
            word-break: break-all; /* 添加这行 */
          }
          .group7 {
            max-width: 70%; /* 适当的宽度 */
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            padding: 10px 20px 10px 20px;
            margin: 0 auto;
            background-color: rgba(236,230,233,0.21); /* 背景颜色 */
            border-radius: 10px;
          }
          .avatar {
            /*margin: 20px 0 0 20px;*/
            width: 60px;
            height: 60px;
            border-radius: 10px;
            border: 10px solid #fff;
            background: #fff;
        }
        .credit {
            text-align: center;
            color: #171515;
            font-size: 20px;
            padding: 10px;
        }
        </style>
      </head>
      <body id="body">
        <div class="container">
          <div class="profile-card">
            <div class="title-word1"><strong>战斗日志栏</strong></div>
            <div class="caption1"></div>
            <div id="container">${battleLogsHtml.html}</div>
          </div>
        </div>
        <footer class="credit">AXLMLYRPG / AXLMLY</footer>
      </body>
      </html>
    `;
    console.log(battleLogsHtml.player1hp);
    console.log(battleLogsHtml.player2hp);
    return {
      "htmlContent": htmlContent,
      "player1hp": battleLogsHtml.player1hp,
      "player1mp": battleLogsHtml.player1mp,
      "player2hp": battleLogsHtml.player2hp,
      "player2mp": battleLogsHtml.player2mp
    };
  }
};

// src/index.ts
var name = "axlmly-role-playing-game";
var Config = import_koishi2.Schema.object({
  resetpropertiestotal: import_koishi2.Schema.number().role("").min(1).max(99999).step(1).default(270).description("重置总值"),
  resetpropertiesminValue: import_koishi2.Schema.number().role("").min(1).max(99999).step(1).default(10).description("重置单属性下限,如果大于上限就默认为10"),
  resetpropertiesmaxValue: import_koishi2.Schema.number().role("").min(1).max(99999).step(1).default(38).description("重置属性上限,如果小于下限默认为38"),
  resetproperties: import_koishi2.Schema.number().role("").min(1).max(99999).step(1).default(1e3).description("重置属性&&种族&&信仰的花费"),
  criticalhit: import_koishi2.Schema.number().role("slider").min(5).max(100).step(1).default(30).description("暴击概率"),
  recoverytime: import_koishi2.Schema.number().role("").min(1).max(60).step(1).default(6).description("每隔一段时间回复全部未死亡的玩家的血量五分之一与魔力十分之一"),
  duels: import_koishi2.Schema.number().role("").min(1).max(9999).step(1).default(5).description("决斗次数限制"),
  duelscd: import_koishi2.Schema.number().role("").min(1).max(9999).step(1).default(30).description("决斗结束后的保护期(秒)"),
  attackcd: import_koishi2.Schema.number().role("").min(1).max(60).step(1).default(2).description("使用给你一拳之类的交互时的冷却时间(分钟)"),
  statuscd: import_koishi2.Schema.number().role("").min(1).max(60).step(1).default(5).description("切换止战状态的cd(分钟)"),
  battlestatecd: import_koishi2.Schema.number().role("").min(1).max(60).step(1).default(1).description("脱离战斗进入止战状态的cd(分钟)"),
  skillcd: import_koishi2.Schema.number().role("").min(1).max(60).step(1).default(1).description("使用技能的冷却cd(分钟)"),
  signincoins: import_koishi2.Schema.number().role("").min(1).max(9999).step(1).default(200).description("签到获得的硬币数量最低浮动上限"),
  signinexp: import_koishi2.Schema.number().role("").min(1).max(9999).step(1).default(200).description("签到获得的经验数量最低浮动上限"),
  logger: import_koishi2.Schema.boolean().default(false).description("是否开启日志")
});
var usage = `
<h2>如遇使用问题请在koishi非官方交流群公屏提问,或直接at AXLMLY,或爱发电私信<h2>
<div class="container">
  <p>如果您喜欢我的内容，请不妨通过爱发电支持我,您的发电就是我继续开发的动力</p>
  <a href="https://afdian.net/a/axlmly" class="styled-button">爱发电<br></a>
</div>
<div>使用方面:<br>--大部分的指令都不需要回复,只有指定对战类的指令需要,使用回复来进行对战是为了不将战斗波及到从来没有发言的人,避免造成不必要的麻烦,请谅解.<br>--如果有更好的建议请您提出,如果有益插件的发展我会考虑加入内容<br>--目前的复活机制是每日0点自动复活与回复主动决斗次数至设定的上限,自动回血回魔是根据配置的时间每次回复五分之一.<br>--止战状态能够使用给你一拳不是bug<br>--获取硬币的方式目前有签到(jrys-max)和击杀,头衔称号还在todo,如果有数值上的建议请告诉我<br>--装备栏界面是白色的很正常,因为也还在做,后续会加入武器装备图标,天赋描述只是描述,目前没有实际效果(但我是看着描述填数值的)</div>
`;
var axlmlyrpg = class extends import_koishi2.Service {
  static {
    __name(this, "axlmlyrpg");
  }
  constructor(ctx) {
    super(ctx, "axlmlyrpg", true);
  }
  async getdata(session, config, ctx) {
    const rpgdata = new Rpgdata(ctx, config);
    const menu = new menuHtml();
    await rpgdata.userdata(session, ctx);
    await menu.menuimg(session, config, ctx);
  }
  async updataconis(ctx, session, config, jrysData) {
    let jrysluck;
    if (jrysData <= 10) {
      jrysluck = 1;
    } else if (jrysData <= 100) {
      jrysluck = 15;
    } else if (jrysData <= 200) {
      jrysluck = 50;
    } else if (jrysData <= 300) {
      jrysluck = 100;
    } else if (jrysData <= 400) {
      jrysluck = 200;
    } else if (jrysData <= 500) {
      jrysluck = 300;
    } else if (jrysData <= 510) {
      jrysluck = 350;
    } else if (jrysData <= 512) {
      jrysluck = 500;
    }
    console.log(jrysluck);
    const signincoinsrandom = import_koishi2.Random.int(100, config.signincoins + jrysluck);
    const signinexprandom = import_koishi2.Random.int(100, config.signinexp + jrysluck);
    const coins = (await ctx.database.get("role_playing_game", { id: String(session.userId) }))[0]?.coins;
    const experiencepoint = (await ctx.database.get("role_playing_game", { id: String(session.userId) }))[0]?.experiencepoint;
    await ctx.database.upsert("role_playing_game", [{
      id: String(session.userId),
      coins: coins + signincoinsrandom,
      experiencepoint: experiencepoint + signinexprandom
    }]);
    await ctx.database.upsert("jrys_max", [{
      id: String(session.userId),
      coins: signincoinsrandom,
      exp: signinexprandom
    }]);
    console.log(signincoinsrandom, signinexprandom);
  }
};
var inject = ["database", "puppeteer", "jrysmaxs"];
var logger2 = new import_koishi2.Logger("[AXLMLYRPG]>> ");
var scheduleDailyTask = /* @__PURE__ */ __name((task, hour, minute) => {
  const now = /* @__PURE__ */ new Date();
  const firstRun = new Date(now.getFullYear(), now.getMonth(), now.getDate(), hour, minute, 0, 0);
  if (now.getTime() > firstRun.getTime()) {
    firstRun.setDate(firstRun.getDate() + 1);
  }
  const delay = firstRun.getTime() - now.getTime();
  setTimeout(() => {
    task();
    setInterval(task, 24 * 60 * 60 * 1e3);
  }, delay);
}, "scheduleDailyTask");
function apply(ctx, config) {
  const rpgdata = new Rpgdata(ctx, config);
  const menu = new menuHtml();
  let cooldownTime = config.attackcd * 60 * 1e3;
  let cooldownTime1 = config.duelscd * 1e3;
  let cooldownTime2 = config.attackcd * 60 * 1e3;
  let cooldownTime3 = config.battlestatecd * 60 * 1e3;
  let cooldownTime4 = config.skillcd * 60 * 1e3;
  ctx.on("ready", async () => {
    const updateHealth = /* @__PURE__ */ __name(async () => {
      try {
        const users = await ctx.database.get("role_playing_game", { status: 1 });
        for (const user of users) {
          const maxHealth = user.healthpointEnd;
          const maxMana = user.magicpointEnd;
          const maxHealth1 = Math.round(maxHealth * 0.2);
          const maxMana1 = Math.floor(maxMana * 0.1);
          const health = user.healthpoint;
          const mana = user.magicpoint;
          if (maxHealth1 + health < maxHealth) {
            await ctx.database.set("role_playing_game", { id: user.id }, { healthpoint: health + maxHealth1 });
          }
          if (maxHealth1 + health > maxHealth) {
            await ctx.database.set("role_playing_game", { id: user.id }, { healthpoint: maxHealth });
          }
          if (maxMana1 + mana < maxMana) {
            await ctx.database.set("role_playing_game", { id: user.id }, { magicpoint: mana + maxMana1 });
          }
          if (maxMana1 + mana > maxMana) {
            await ctx.database.set("role_playing_game", { id: user.id }, { magicpoint: maxMana });
          }
        }
        if (config.logger) {
          logger2.info("所有未死亡的用户的血量与魔力已增加");
        }
      } catch (error) {
        logger2.info("出现错误,请带上报错日志与操作截图留言作者" + error);
      }
    }, "updateHealth");
    const updatalife = /* @__PURE__ */ __name(async () => {
      try {
        const users = await ctx.database.get("role_playing_game", { status: 0 });
        for (const user of users) {
          const maxHealth = user.healthpointEnd;
          const maxMana = user.magicpointEnd;
          await ctx.database.set("role_playing_game", { id: user.id }, { healthpoint: maxHealth, magicpoint: maxMana, status: 1 });
        }
        const users2 = await ctx.database.get("role_playing_game_attach", { status: 1 });
        for (const user of users2) {
          await ctx.database.set("role_playing_game_attach", { status: 1 }, { duels: config.duels, resetproperties: 1 });
        }
        const users3 = await ctx.database.get("role_playing_game_attach", { status: 0 });
        for (const user of users3) {
          await ctx.database.set("role_playing_game_attach", { status: 0 }, { duels: config.duels, status: 1, resetproperties: 1 });
        }
        if (config.logger) {
          logger2.info("所有死亡的用户已经复活");
        }
      } catch (error) {
        logger2.info("出现错误,请带上报错日志与操作截图留言作者" + error);
      }
    }, "updatalife");
    ctx.setInterval(updateHealth, config.recoverytime * 60 * 1e3);
    scheduleDailyTask(updatalife, 0, 0);
  });
  ctx.plugin(axlmlyrpg);
  ctx.inject(["axlmlyrpg"], (ctx2) => {
  });
  const axlmlyrpgs = ctx.command("axlmlyrpg", "AXLMLYRPG相关指令", { permissions: ["authority:1"] });
  axlmlyrpgs.subcommand("menu", "AXLMLYRPG菜单").alias("菜单").userFields(["name"]).usage("请在更新完数据后务必调用一次").action(async ({ session }) => {
    await rpgdata.userdata(session, ctx);
    const menuPath = import_path3.default.resolve(__dirname, "./menu.html");
    let page;
    const getMenu = await menu.menuimg(session, config, ctx);
    const getHttpContent = getMenu.httpContent;
    fs.writeFileSync(menuPath, getHttpContent);
    page = await ctx.puppeteer.page();
    await page.setViewport({ width: 2600, height: 1080 * 2 });
    await page.goto(menuPath);
    const element = await page.$("#body");
    let msg;
    if (element) {
      const imgBuf = await element.screenshot({
        encoding: "binary"
      });
      msg = import_koishi2.h.image(imgBuf, "image/png");
    } else {
      msg = "Failed to capture screenshot.";
    }
    await page.close();
    return msg;
  });
  axlmlyrpgs.subcommand("punch", "给你一拳").alias("给你一拳").userFields(["name"]).usage(`请引用/回复使用,不要问为什么不能殴打死人了,当前给你一拳冷却时间为${config.attackcd}分钟`).example("[引用]给你一拳").action(async ({ session }) => {
    if (!session.quote) {
      return;
    }
    if (session.quote.member.user.id === session.bot.userId) {
      return;
    }
    if (session.quote.member.user.id === session.userId) {
      return;
    }
    if (config.logger) {
      logger2.info(`${session.quote.member.nick}
${session.quote.member.user.name}
${session.username}
${JSON.stringify(session.quote)}`);
    }
    let time = import_koishi2.Time.template("yyyy-MM-dd hh:mm:ss", /* @__PURE__ */ new Date());
    let getnewtime = rpgdata.dateToTimestamp(time);
    let attackcd = (await ctx.database.get("role_playing_game_cd", { id: String(session.userId) }))[0]?.attackcd;
    if (getnewtime - attackcd <= cooldownTime) {
      return;
    } else {
      await ctx.database.upsert("role_playing_game_cd", [{
        id: String(session.userId),
        attackcd: getnewtime
      }]);
    }
    await rpgdata.userdata(session.quote, ctx);
    await rpgdata.userdata(session, ctx);
    try {
      const getMenu1 = await menu.menuimg(session.quote, config, ctx);
      const getMenu2 = await menu.menuimg(session, config, ctx);
      const getstatus1 = (await ctx.database.get("role_playing_game", { id: String(session.userId) }))[0]?.status;
      const getstatus2 = (await ctx.database.get("role_playing_game", { id: String(session.quote.user.id) }))[0]?.status;
      if (getstatus1 == 0) {
        return;
      } else if (getstatus2 == 0) {
        return "你不能攻击死掉的人";
      }
      const hurt2 = getMenu2.sturdypointEnd + getMenu2.attackEnd;
      const hurt1 = hurt2 * 1.5;
      const hurt3 = getMenu1.sturdypointEnd + getMenu1.attackEnd;
      const hurt4 = hurt3 * 1.5;
      const getHealthpoint1 = (await ctx.database.get("role_playing_game", { id: String(session.quote.user.id) }))[0]?.healthpoint;
      const getHealthpoint2 = (await ctx.database.get("role_playing_game", { id: String(session.userId) }))[0]?.healthpoint;
      const getcoins2 = (await ctx.database.get("role_playing_game", { id: String(session.userId) }))[0]?.coins;
      const getcoins1 = (await ctx.database.get("role_playing_game", { id: String(session.quote.user.id) }))[0]?.coins;
      const getexperiencepoint2 = (await ctx.database.get("role_playing_game", { id: String(session.userId) }))[0]?.experiencepoint;
      const killnumber = (await ctx.database.get("role_playing_game", { id: String(session.userId) }))[0]?.killnumber;
      let coins1 = Math.floor(getcoins1 * 0.2);
      if (coins1 < 0) {
        coins1 = 0;
      } else if (coins1 >= 100) {
        coins1 = 100;
      }
      let coins2 = Math.floor(getcoins2 * 0.2);
      if (coins2 < 0) {
        coins2 = 0;
      } else if (coins2 >= 100) {
        coins2 = 100;
      }
      const experience1 = 100;
      const experience2 = experience1 * 2;
      const experience = import_koishi2.Random.int(experience1, experience2);
      let sidestep1 = Math.round(getMenu1.dexterityEnd + 0.7 * getMenu1.sturdypointEnd + 0.5 * getMenu1.spiritualintuitionEnd + 0.5 * getMenu1.staminaEnd);
      let sidestep3 = import_koishi2.Random.int(sidestep1, sidestep1 * 2);
      let sidestep2 = Math.round(getMenu2.dexterityEnd + 0.7 * getMenu2.sturdypointEnd + 0.5 * getMenu2.spiritualintuitionEnd + 0.5 * getMenu2.staminaEnd);
      let sidestep4 = import_koishi2.Random.int(sidestep2, sidestep2 * 2);
      let maxsidestep3 = Math.round(import_koishi2.Random.int(sidestep1, sidestep3) + 0.7 * getMenu1.luckyvalueEnd);
      if (maxsidestep3 > sidestep3) {
        maxsidestep3 = sidestep3;
      }
      let maxsidestep4 = Math.round(import_koishi2.Random.int(sidestep2, sidestep4) + 0.7 * getMenu2.luckyvalueEnd);
      if (maxsidestep4 > sidestep4) {
        maxsidestep4 = sidestep4;
      }
      let maxcriticalhitRndom = Math.round(100 - getMenu2.luckyvalueEnd / 50);
      if (maxcriticalhitRndom < 50) {
        maxcriticalhitRndom = 50;
      }
      let maxcriticalhitRndom1 = Math.round(100 - getMenu1.luckyvalueEnd / 50);
      if (maxcriticalhitRndom1 < 50) {
        maxcriticalhitRndom1 = 50;
      }
      const criticalhitRndom = import_koishi2.Random.int(1, maxcriticalhitRndom);
      const criticalhitRndom1 = import_koishi2.Random.int(1, maxcriticalhitRndom1);
      let hurt = Math.round(import_koishi2.Random.int(hurt1, hurt2) + 0.7 * getMenu2.luckyvalueEnd);
      if (hurt > hurt1) {
        hurt = hurt1;
      }
      let hurt5 = Math.round(import_koishi2.Random.int(hurt3, hurt4) + 0.7 * getMenu1.luckyvalueEnd);
      if (hurt5 > hurt4) {
        hurt5 = hurt4;
      }
      let hurtEnd = Math.round((hurt * (1 - getMenu1.physicaldefenseEnd / 100) - getMenu1.armourclassEnd) * 0.05);
      if (hurtEnd <= 0) {
        hurtEnd = 1;
      }
      let hurtCriticalhitEnd = Math.round((hurt * (1 - getMenu1.physicaldefenseEnd / 100) - getMenu1.armourclassEnd + 0.5 * hurtEnd) * 0.05);
      if (hurtCriticalhitEnd <= 0) {
        hurtCriticalhitEnd = 1;
      }
      let hurtEnd1 = Math.round((hurt5 * (1 - getMenu2.physicaldefenseEnd / 100) - getMenu2.armourclassEnd) * 0.05);
      if (hurtEnd1 <= 0) {
        hurtEnd1 = 1;
      }
      let hurtCriticalhitEnd1 = Math.round((hurt5 * (1 - getMenu2.physicaldefenseEnd / 100) - getMenu2.armourclassEnd + 0.5 * hurtEnd1) * 0.05);
      if (hurtCriticalhitEnd1 <= 0) {
        hurtCriticalhitEnd1 = 1;
      }
      let name2 = session.quote.member.nick;
      if (name2.length <= 0) {
        name2 = session.quote.user.name;
      }
      if (maxsidestep3 <= 3 * maxsidestep4) {
        if (getHealthpoint1 - hurtEnd > 0) {
          if (criticalhitRndom < config.criticalhit) {
            await ctx.database.upsert("role_playing_game", [{
              id: String(session.quote.user.id),
              healthpoint: getHealthpoint1 - hurtCriticalhitEnd
            }]);
            return `${name2}被${session.username}的拳头击中,出现暴击!造成了${hurtCriticalhitEnd}点伤害`;
          } else {
            await ctx.database.upsert("role_playing_game", [{
              id: String(session.quote.user.id),
              healthpoint: getHealthpoint1 - hurtEnd
            }]);
            return `${name2}被${session.username}的拳头击中,造成了${hurtEnd}点伤害`;
          }
        } else if (getHealthpoint1 - hurtEnd <= 0) {
          await ctx.database.upsert("role_playing_game", [{
            id: String(session.quote.user.id),
            healthpoint: 0,
            status: 0,
            coins: getcoins1 - coins1
          }]);
          await ctx.database.upsert("role_playing_game", [{
            id: String(session.userId),
            coins: getcoins2 + 20 + coins1,
            experiencepoint: getexperiencepoint2 + experience,
            killnumber: killnumber + 1
          }]);
          return `精彩的偷袭!${name2}被${session.username}击杀,${session.username}获得${30 + coins1}与${experience}经验值`;
        }
      } else {
        if (import_koishi2.Random.int(1, 2) === 1) {
          if (getHealthpoint2 - hurtEnd > 0) {
            if (criticalhitRndom1 < config.criticalhit) {
              await ctx.database.upsert("role_playing_game", [{
                id: String(session.userId),
                healthpoint: getHealthpoint1 - 2 * hurtCriticalhitEnd1
              }]);
              return `${session.username}的攻击被${name2}躲过并反击!出现暴击!造成了${2 * hurtCriticalhitEnd1}点伤害`;
            } else {
              await ctx.database.upsert("role_playing_game", [{
                id: String(session.userId),
                healthpoint: getHealthpoint1 - 2 * hurtEnd1
              }]);
              return `${session.username}被${name2}躲过并反击!造成了${2 * hurtEnd1}点伤害`;
            }
          } else if (getHealthpoint2 - 2 * hurtEnd1 <= 0) {
            await ctx.database.upsert("role_playing_game", [{
              id: String(session.userId),
              healthpoint: 0,
              status: 0,
              coins: getcoins2 - coins2
            }]);
            await ctx.database.upsert("role_playing_game", [{
              id: String(session.quote.user.id),
              coins: getcoins2 + 20 + coins2,
              experiencepoint: getexperiencepoint2 + experience,
              killnumber: killnumber + 1
            }]);
            return `经典的偷袭失败案例!${session.username}被${name2}反杀,${name2}获得获得${30 + coins2}硬币与${experience}经验值`;
          }
        } else {
          if (import_koishi2.Random.int(1, 10) <= 5) {
            return `${name2}挡住了${session.username}的攻击`;
          }
          return `${name2}躲开了${session.username}的攻击`;
        }
      }
    } catch (err) {
      logger2.error(`[AXLMLYRPG Error]:\r
` + err);
      return "炸了";
    }
  });
  axlmlyrpgs.subcommand("resurrect", "复活").alias("复活").userFields(["name"]).usage("只有死人和有硬币的人能使用复活功能,复活需要消耗100硬币,没有硬币去签到,没有签到插件找bot主下").example("(在自身角色死亡时并且身上有一百硬币时)复活").action(async ({ session, options }) => {
    await rpgdata.userdata(session, ctx);
    const getMenu2 = await menu.menuimg(session, config, ctx);
    const getstatus2 = (await ctx.database.get("role_playing_game", { id: String(session.userId) }))[0]?.status;
    const getcoins2 = (await ctx.database.get("role_playing_game", { id: String(session.userId) }))[0]?.coins;
    if (getstatus2 === 0 && getcoins2 >= 100) {
      await ctx.database.upsert("role_playing_game", [{
        id: String(session.userId),
        coins: getcoins2 - 100,
        healthpoint: getMenu2.healthpointEnd,
        magicpoint: getMenu2.maxmagicpointEnd,
        status: 1
      }]);
      return `${session.username}复活成功`;
    } else if (getstatus2 !== 0) {
      return;
    } else if (getcoins2 < 100) {
      return `没有硬币的人不能复活哦`;
    }
  });
  ctx.command("duels", "决斗").alias("决斗").userFields(["name"]).usage(`对着死人和自己决斗是无效的,发起者死了无法决斗.当前决斗保护时间为${config.duelscd}秒,主动的决斗次数为${config.duels}`).example("[引用]决斗").action(async ({ session }) => {
    if (!session.quote) {
      return;
    }
    if (config.logger) {
      logger2.info(`${session.quote.member.nick}
${session.quote.member.user.name}
${session.username}
${JSON.stringify(session.quote)}`);
    }
    if (session.quote.member.user.id === session.bot.userId) {
      return;
    }
    if (session.quote.member.user.id === session.userId) {
      return;
    }
    const getstatus1 = (await ctx.database.get("role_playing_game_cd", { id: String(session.userId) }))[0]?.status;
    const getstatus2 = (await ctx.database.get("role_playing_game_cd", { id: String(session.quote.user.id) }))[0]?.status;
    if (getstatus1 === 1) {
      return;
    }
    if (getstatus1 === 0 && getstatus2 === 1) {
      return;
    }
    if (getstatus2 === 1) {
      return;
    }
    const duels = (await ctx.database.get("role_playing_game_attach", { id: String(session.userId) }))[0]?.duels;
    if (duels === 0) {
      return `无主动决斗次数`;
    }
    let time = import_koishi2.Time.template("yyyy-MM-dd hh:mm:ss", /* @__PURE__ */ new Date());
    let getnewtime = rpgdata.dateToTimestamp(time);
    let duelscd = (await ctx.database.get("role_playing_game_cd", { id: String(session.quote.user.id) }))[0]?.duelscd;
    let skillcd = (await ctx.database.get("role_playing_game_cd", { id: String(session.quote.user.id) }))[0]?.skillcd;
    let getkudos1 = (await ctx.database.get("role_playing_game", { id: String(session.userId) }))[0]?.kudos;
    const duelshtml = new duelsHtml();
    await rpgdata.userdata(session.quote, ctx);
    await rpgdata.userdata(session, ctx);
    await menu.menuimg(session, config, ctx);
    await menu.menuimg(session.quote, config, ctx);
    const getstatus3 = (await ctx.database.get("role_playing_game", { id: String(session.userId) }))[0]?.status;
    const getstatus4 = (await ctx.database.get("role_playing_game", { id: String(session.quote.user.id) }))[0]?.status;
    if (getstatus3 == 0) {
      return;
    } else if (getstatus4 == 0) {
      return "你不能攻击死掉的人";
    }
    if (getnewtime - duelscd <= cooldownTime1) {
      return;
    } else {
      await ctx.database.upsert("role_playing_game_cd", [{
        id: String(session.quote.user.id),
        duelscd: getnewtime
      }]);
      await ctx.database.upsert("role_playing_game_cd", [{
        id: String(session.userId),
        duelscd: getnewtime
      }]);
    }
    if (getnewtime - skillcd <= cooldownTime4) {
      await ctx.database.upsert("role_playing_game", [{
        id: String(session.userId),
        kudos: getkudos1 - 5
      }]);
    }
    if (duels >= 1) {
      await ctx.database.upsert("role_playing_game_attach", [{
        id: String(session.userId),
        duels: duels - 1
      }]);
    }
    let name2 = session.quote.member.nick;
    if (name2.length <= 0) {
      name2 = session.quote.user.name;
    }
    const duelsPath = import_path3.default.resolve(__dirname, "./duelshtml.html");
    let page;
    const getduelshtml = await duelshtml.getDuelsHtml(session, config, ctx);
    const getHttpContent = getduelshtml.htmlContent;
    fs.writeFileSync(duelsPath, getHttpContent);
    page = await ctx.puppeteer.page();
    await page.setViewport({ width: 880, height: 1080 * 2 });
    await page.goto(duelsPath);
    const element = await page.$("#body");
    let msg;
    if (element) {
      const imgBuf = await element.screenshot({
        encoding: "binary"
      });
      msg = import_koishi2.h.image(imgBuf, "image/png");
    } else {
      msg = "截图失败.";
    }
    await page.close();
    if (config.logger) {
      logger2.info(`${getduelshtml.player1hp}
${getduelshtml.player2hp}`);
    }
    const experience1 = 100;
    const experience2 = experience1 * 2;
    const experience = import_koishi2.Random.int(experience1, experience2);
    if (getduelshtml.player1hp <= 0) {
      const getcoins1 = (await ctx.database.get("role_playing_game", { id: String(session.quote.user.id) }))[0]?.coins;
      const getcoins2 = (await ctx.database.get("role_playing_game", { id: String(session.userId) }))[0]?.coins;
      const getexperiencepoint2 = (await ctx.database.get("role_playing_game", { id: String(session.userId) }))[0]?.experiencepoint;
      let getmagicpointEnd1 = (await ctx.database.get("role_playing_game", { id: String(session.userId) }))[0]?.magicpointEnd;
      let healthpointEnd1 = (await ctx.database.get("role_playing_game", { id: String(session.userId) }))[0]?.healthpointEnd;
      const killnumber = (await ctx.database.get("role_playing_game", { id: String(session.userId) }))[0]?.killnumber;
      let coins1 = Math.floor(getcoins1 * 0.2);
      if (coins1 <= 0) {
        coins1 = 0;
      } else if (coins1 >= 100) {
        coins1 = 100;
      }
      await ctx.database.upsert("role_playing_game", [{
        id: String(session.quote.user.id),
        healthpoint: 0,
        magicpoint: 0,
        status: 0,
        coins: getcoins1 - coins1
      }]);
      if (getduelshtml.player2hp >= healthpointEnd1 || getduelshtml.player2mp >= getmagicpointEnd1) {
        if (getduelshtml.player2hp >= healthpointEnd1 && getduelshtml.player2mp <= getmagicpointEnd1) {
          await ctx.database.upsert("role_playing_game", [{
            id: String(session.userId),
            healthpoint: healthpointEnd1,
            magicpoint: getduelshtml.player2mp,
            coins: getcoins2 + 30 + coins1,
            experiencepoint: getexperiencepoint2 + experience,
            killnumber: killnumber + 1
          }]);
        } else if (getduelshtml.player2mp >= getmagicpointEnd1 && getduelshtml.player2hp <= healthpointEnd1) {
          await ctx.database.upsert("role_playing_game", [{
            id: String(session.userId),
            healthpoint: getduelshtml.player2hp,
            magicpoint: getmagicpointEnd1,
            coins: getcoins2 + 30 + coins1,
            experiencepoint: getexperiencepoint2 + experience,
            killnumber: killnumber + 1
          }]);
        } else {
          await ctx.database.upsert("role_playing_game", [{
            id: String(session.userId),
            healthpoint: healthpointEnd1,
            magicpoint: getmagicpointEnd1,
            coins: getcoins2 + 30 + coins1,
            experiencepoint: getexperiencepoint2 + experience,
            killnumber: killnumber + 1
          }]);
        }
      } else {
        await ctx.database.upsert("role_playing_game", [{
          id: String(session.userId),
          healthpoint: getduelshtml.player2hp,
          magicpoint: getduelshtml.player2mp,
          coins: getcoins2 + 30 + coins1,
          experiencepoint: getexperiencepoint2 + experience,
          killnumber: killnumber + 1
        }]);
      }
      session.send(`这场战斗中,${name2}被${session.username}击杀,${session.username}获得${30 + coins1}硬币与${experience}经验值.`);
      return msg;
    } else if (getduelshtml.player2hp <= 0) {
      const getcoins2 = (await ctx.database.get("role_playing_game", { id: String(session.quote.user.id) }))[0]?.coins;
      const getcoins1 = (await ctx.database.get("role_playing_game", { id: String(session.userId) }))[0]?.coins;
      const getexperiencepoint2 = (await ctx.database.get("role_playing_game", { id: String(session.quote.user.id) }))[0]?.experiencepoint;
      const killnumber = (await ctx.database.get("role_playing_game", { id: String(session.quote.user.id) }))[0]?.killnumber;
      let getmagicpointEnd2 = (await ctx.database.get("role_playing_game", { id: String(session.quote.user.id) }))[0]?.magicpointEnd;
      let healthpointEnd2 = (await ctx.database.get("role_playing_game", { id: String(session.quote.user.id) }))[0]?.healthpointEnd;
      let coins1 = Math.floor(getcoins1 * 0.2);
      if (coins1 <= 0) {
        coins1 = 0;
      } else if (coins1 >= 100) {
        coins1 = 100;
      }
      await ctx.database.upsert("role_playing_game", [{
        id: String(session.userId),
        healthpoint: 0,
        magicpoint: 0,
        status: 0,
        coins: getcoins1 - coins1
      }]);
      if (getduelshtml.player1hp >= healthpointEnd2 && getduelshtml.player1mp >= getmagicpointEnd2) {
        if (getduelshtml.player1hp >= healthpointEnd2 && getduelshtml.player1mp <= getmagicpointEnd2) {
          await ctx.database.upsert("role_playing_game", [{
            id: String(session.quote.user.id),
            healthpoint: healthpointEnd2,
            magicpoint: getduelshtml.player1mp,
            coins: getcoins2 + 30 + coins1,
            experiencepoint: getexperiencepoint2 + experience,
            killnumber: killnumber + 1
          }]);
        } else if (getduelshtml.player1mp >= getmagicpointEnd2 && getduelshtml.player1hp <= healthpointEnd2) {
          await ctx.database.upsert("role_playing_game", [{
            id: String(session.quote.user.id),
            healthpoint: getduelshtml.player1hp,
            magicpoint: getmagicpointEnd2,
            coins: getcoins2 + 30 + coins1,
            experiencepoint: getexperiencepoint2 + experience,
            killnumber: killnumber + 1
          }]);
        } else {
          await ctx.database.upsert("role_playing_game", [{
            id: String(session.quote.user.id),
            healthpoint: healthpointEnd2,
            magicpoint: getmagicpointEnd2,
            coins: getcoins2 + 30 + coins1,
            experiencepoint: getexperiencepoint2 + experience,
            killnumber: killnumber + 1
          }]);
        }
      } else {
        await ctx.database.upsert("role_playing_game", [{
          id: String(session.quote.user.id),
          healthpoint: getduelshtml.player1hp,
          magicpoint: getduelshtml.player1mp,
          coins: getcoins2 + 30 + coins1,
          experiencepoint: getexperiencepoint2 + experience,
          killnumber: killnumber + 1
        }]);
      }
      session.send(`这场战斗中,${session.username}被${name2}击杀,${name2}获得${30 + coins1}硬币与${experience}经验值.`);
      return msg;
    } else {
      const getHealthpoint1 = (await ctx.database.get("role_playing_game", { id: String(session.quote.user.id) }))[0]?.healthpoint;
      const getHealthpoint2 = (await ctx.database.get("role_playing_game", { id: String(session.userId) }))[0]?.healthpoint;
      const getcoins1 = (await ctx.database.get("role_playing_game", { id: String(session.userId) }))[0]?.coins;
      if (getduelshtml.player1hp >= getHealthpoint1) {
        await ctx.database.upsert("role_playing_game", [{
          id: String(session.quote.user.id),
          // healthpoint: getduelshtml.player1hp,
          magicpoint: getduelshtml.player1mp
        }]);
      } else {
        await ctx.database.upsert("role_playing_game", [{
          id: String(session.quote.user.id),
          healthpoint: getduelshtml.player1hp,
          magicpoint: getduelshtml.player1mp
        }]);
      }
      if (getduelshtml.player2hp >= getHealthpoint2) {
        await ctx.database.upsert("role_playing_game", [{
          id: String(session.userId),
          // healthpoint: getduelshtml.player2hp,
          magicpoint: getduelshtml.player2mp,
          coins: getcoins1
        }]);
      } else {
        await ctx.database.upsert("role_playing_game", [{
          id: String(session.userId),
          healthpoint: getduelshtml.player2hp,
          magicpoint: getduelshtml.player2mp,
          coins: getcoins1
        }]);
      }
      session.send(`落叶传来讯息,这是一场枯燥的对决`);
      return msg;
    }
  });
  axlmlyrpgs.subcommand("viewbackpack", "查看背包").alias("查看背包").example("查看背包 -w/-a/-s").option("w", "-w 查看武器").option("a", "-a 查看盔甲").option("s", "-s 查看技能").action(async ({ session, options }) => {
    await rpgdata.userdata(session, ctx);
    const getdatarpg = new Rpgdata(ctx, config);
    const userId = String(session.userId);
    const userAttach = (await ctx.database.get("role_playing_game_attach", { id: userId }))[0];
    const messages = [];
    const viewItems = /* @__PURE__ */ __name((itemType, inventory, getItemFn) => {
      if (inventory.length <= 0) {
        return `背包是空的`;
      }
      messages.push(`${itemType}:`);
      inventory.forEach((id) => {
        const obj = getItemFn(Number(id));
        let types;
        if (obj.types === 1) {
          types = "近战";
        } else if (obj.types === 2) {
          types = "法杖";
        } else if (obj.types === 3) {
          types = "弓箭";
        } else if (obj.types === 3) {
          types = "盾牌";
        } else {
          types = "暂无";
        }
        if (obj) {
          messages.push(`id | ${obj.id}, 类型 | ${types}, 名称 | ${obj.name}, 伤害 | ${obj.harm}, 斗气传导 | ${obj.fightkirelease}, 魔力传导 | ${obj.magicrelease}
体质需求 | ${obj.needsturdypoint}, 力量需求 | ${obj.needattack}, 敏捷需求 | ${obj.needdexterity}, 耐力需求 | ${obj.needstamina}, 灵性直觉需求 | ${obj.needspiritualintuition}, 智力需求 | ${obj.needintelligence}, 幸运需求 | ${obj.needluckyvalue}, 信仰需求 | ${obj.needfaith}
HP | ${obj.healthpoint}, MP | ${obj.maxmagicpoint}, 力量加成 | ${obj.attack}, 体质加成 | ${obj.sturdypoint}, 敏捷加成 | ${obj.dexterity}, 耐力加成 | ${obj.stamina}, 灵性直觉加成 | ${obj.spiritualintuition}, 智力加成 | ${obj.intelligence}, 幸运加成 | ${obj.luckyvalue}, 信仰加成 | ${obj.faith}
——————————`);
        } else {
          messages.push(`找不到 ID 为 ${id} 的对象.`);
        }
      });
    }, "viewItems");
    const viewArmours = /* @__PURE__ */ __name((inventory, getItemFn) => {
      if (inventory.length <= 0) {
        return `背包是空的`;
      }
      messages.push(`盔甲:`);
      inventory.forEach((id) => {
        const obj = getItemFn(Number(id));
        let types;
        if (obj.types === 1) {
          types = "重装甲";
        } else if (obj.types === 2) {
          types = "轻装甲";
        } else if (obj.types === 3) {
          types = "法袍";
        } else {
          types = "暂无";
        }
        if (obj) {
          messages.push(`id | ${obj.id}, 类型 | ${types}, 名称 | ${obj.name}
体质需求 | ${obj.needsturdypoint}, 力量需求 | ${obj.needattack}, 敏捷需求 | ${obj.needdexterity}, 耐力需求 | ${obj.needstamina}, 灵性直觉需求 | ${obj.needspiritualintuition}, 智力需求 | ${obj.needintelligence}, 幸运需求 | ${obj.needluckyvalue}, 信仰需求 | ${obj.needfaith}
HP | ${obj.healthpoint}, MP | ${obj.maxmagicpoint}, 力量加成 | ${obj.attack}, 体质加成 | ${obj.sturdypoint}, 敏捷加成 | ${obj.dexterity}, 耐力加成 | ${obj.stamina}, 灵性直觉加成 | ${obj.spiritualintuition}, 智力加成 | ${obj.intelligence}, 幸运加成 | ${obj.luckyvalue}, 信仰加成 | ${obj.faith}, 护甲加成 | ${obj.armourclass}, 物理抗性 | ${obj.physicaldefense}, 魔力抗性 | ${obj.magicdefense}
——————————`);
        } else {
          messages.push(`找不到 ID 为 ${id} 的对象.`);
        }
      });
    }, "viewArmours");
    const viewSkills = /* @__PURE__ */ __name((inventory, getItemFn) => {
      if (inventory.length <= 0) {
        return `背包是空的`;
      }
      messages.push(`技能:`);
      inventory.forEach((id) => {
        const obj = getItemFn(Number(id));
        let types;
        if (obj.types === 1) {
          types = "斗气";
        } else if (obj.types === 2) {
          types = "魔力";
        } else if (obj.types === 3) {
          types = "治疗";
        } else {
          types = "暂无";
        }
        if (obj) {
          messages.push(`id | ${obj.id}, 类型 | ${types}, 名称 | ${obj.name}, 伤害 | ${obj.harm}, 消耗 | ${obj.consumptionofmagic}
体质需求 | ${obj.needsturdypoint}, 力量需求 | ${obj.needattack}, 耐力需求 | ${obj.needstamina}, 灵性直觉需求 | ${obj.needspiritualintuition}, 智力需求 | ${obj.needintelligence}, 幸运需求 | ${obj.needluckyvalue}, 信仰需求 | ${obj.needfaith}
——————————`);
        } else {
          messages.push(`找不到 ID 为 ${id} 的对象.`);
        }
      });
    }, "viewSkills");
    if (options.w) {
      const itembar = userAttach.itembar || [];
      viewItems("武器", itembar, getdatarpg.getArsenalId);
    } else if (options.a) {
      const armourbar = userAttach.armourbar || [];
      viewArmours(armourbar, getdatarpg.getArmourId);
    } else if (options.s) {
      const skillbar = userAttach.skillbar || [];
      viewSkills(skillbar, getdatarpg.getSkillId);
    } else {
      return "请提供有效的选项（-w 查看武器，-a 查看盔甲，-s 查看技能）";
    }
    if (messages.length > 0) {
      session.send(messages.join("\n"));
    } else {
      session.send("背包是空的.");
    }
  });
  axlmlyrpgs.subcommand("equipwith <id:number>", "装备").alias("装备").option("p", "-p 数字 装备对应的主武器").option("s", "-s 数字 装备对应副武器").option("a", "-a 数字 装备对应盔甲").option("q", "-q 数字 装备对应技能1").option("w", "-w 数字 装备对应技能2").option("e", "-e 数字 装备对应技能3").action(async ({ session, options }, id) => {
    if (id === void 0) {
      return;
    }
    if (isNaN(id) || id < 0) {
      return "请输入有效的ID";
    }
    await rpgdata.userdata(session, ctx);
    const getdatarpg = new Rpgdata(ctx, config);
    const userId = String(session.userId);
    const userAttach = (await ctx.database.get("role_playing_game_attach", { id: userId }))[0];
    let { armourbar, skillbar, itembar, primaryweapon, secondaryweapon, skill1, skill2, skill3 } = userAttach;
    const getskill = getdatarpg.getSkillId(Number(id));
    const armours = getdatarpg.getArmourId(Number(id));
    const weapon = getdatarpg.getArsenalId(Number(id));
    const armourExists = armourbar.some((item) => Number(item) === id);
    const pweaponExists = itembar.some((item) => Number(item) === id);
    const sweaponExists = itembar.some((item) => Number(item) === id);
    const skillExists = skillbar.some((item) => Number(item) === id);
    const equipItem = /* @__PURE__ */ __name(async (equipwith, value) => {
      await ctx.database.upsert("role_playing_game_attach", [{
        id: userId,
        [equipwith]: value
      }]);
    }, "equipItem");
    const optionsMap = {
      p: { equipwith: "primaryweapon", name: "主武器", exists: pweaponExists },
      s: { equipwith: "secondaryweapon", name: "副武器", exists: sweaponExists },
      a: { equipwith: "armour", name: "盔甲", exists: armourExists },
      q: { equipwith: "skill1", name: "技能一", exists: skillExists },
      w: { equipwith: "skill2", name: "技能二", exists: skillExists },
      e: { equipwith: "skill3", name: "技能三", exists: skillExists }
    };
    if (getskill.types === 4) {
      return `无法装备特殊技能`;
    }
    for (const [key, { equipwith, name: name2, exists }] of Object.entries(optionsMap)) {
      if (options[key]) {
        if (id === 0) {
          await equipItem(equipwith, 0);
          return `已卸下${name2}`;
        }
        if (exists) {
          if (equipwith === "primaryweapon" && id === secondaryweapon) {
            await equipItem("primaryweapon", id);
            await equipItem("secondaryweapon", 0);
            return `已将${weapon.name}从副武器移至主武器`;
          } else if (equipwith === "secondaryweapon" && id === primaryweapon) {
            await equipItem("secondaryweapon", id);
            await equipItem("primaryweapon", 0);
            return `已将${weapon.name}从主武器移至副武器`;
          } else if (equipwith === "skill1 && (id === skill2 || id === skill3)") {
            if (getskill.types === 4) {
              return;
            }
            await equipItem("skill1", id);
            if (id === skill2) {
              await equipItem("skill2", 0);
            } else if (id === skill3) {
              await equipItem("skill3", 0);
            }
            return `装备${getskill.name}至技能一`;
          } else if (equipwith === "skill2 && (id === skill1 || id === skill3)") {
            if (getskill.types === 4) {
              return;
            }
            await equipItem("skill2", id);
            if (id === skill2) {
              await equipItem("skill1", 0);
            } else if (id === skill3) {
              await equipItem("skill3", 0);
            }
            return `装备${getskill.name}至技能二`;
          } else if (equipwith === "skill3 && (id === skill1 || id === skill2)") {
            if (getskill.types === 4) {
              return;
            }
            await equipItem("skill3", id);
            if (id === skill2) {
              await equipItem("skill1", 0);
            } else if (id === skill3) {
              await equipItem("skill2", 0);
            }
            return `装备${getskill.name}至技能三`;
          } else {
            await equipItem(equipwith, id);
            if (equipwith === "primaryweapon" || equipwith === "secondaryweapon") {
              return `装备${weapon.name}至${name2}`;
            } else if (equipwith === "skill1" || equipwith === "skill2" || equipwith === "skill3") {
              return `装备${getskill.name}至${name2}`;
            } else if (equipwith === "armour") {
              return `装备${armours.name}至${name2}`;
            }
          }
        } else {
          return `背包里没有这个${name2}`;
        }
      }
    }
  });
  axlmlyrpgs.subcommand("shoplist", "商店列表").alias("商店列表").example("商店列表").action(async ({ session }, id) => {
    const getdatarpg = new Rpgdata(ctx, config);
    const store = getdatarpg.getShopList();
    let kudos = (await ctx.database.get("role_playing_game", { id: String(session.userId) }))[0]?.kudos;
    let price;
    if (kudos < -50) {
      price = 2;
    } else if (kudos < 0) {
      price = 1.5;
    } else if (kudos >= 0 && kudos <= 10) {
      price = 1;
    } else if (kudos < 10) {
      price = 0.95;
    } else if (kudos < 50) {
      price = 0.9;
    } else if (kudos < 100) {
      price = 0.85;
    } else if (kudos < 150) {
      price = 0.8;
    } else if (kudos < 300) {
      price = 0.75;
    } else if (kudos < 600) {
      price = 0.7;
    } else if (kudos < 1200) {
      price = 0.65;
    } else if (kudos < 1800) {
      price = 0.6;
    } else if (kudos < 2400) {
      price = 0.55;
    } else {
      price = 0.5;
    }
    let message = `${session.username} | 今天的商店物品列表：`;
    message += "武器：\n";
    store.arsenals.forEach((item) => {
      let types;
      if (item.types === 1) {
        types = "近战";
      } else if (item.types === 2) {
        types = "法杖";
      } else if (item.types === 3) {
        types = "弓箭";
      } else if (item.types === 4) {
        types = "盾牌";
      } else {
        types = "暂无";
      }
      let itemPrice = Math.round(item.price * price);
      message += `${item.id} | ${item.name} - ${itemPrice}硬币
类型 | ${types}, 伤害 | ${item.harm}, 斗气传导 | ${item.fightkirelease}, 魔力传导 | ${item.magicrelease}
`;
      message += `——————————
`;
    });
    message += "盔甲：\n";
    store.armour.forEach((item) => {
      let types;
      if (item.types === 1) {
        types = "重装甲";
      } else if (item.types === 2) {
        types = "轻装甲";
      } else if (item.types === 3) {
        types = "法袍";
      } else {
        types = "暂无";
      }
      let itemPrice = Math.round(item.price * price);
      message += `${item.id} | ${item.name} - ${itemPrice}硬币
类型 | ${types}, HP | ${item.healthpoint}, MP | ${item.maxmagicpoint}, 护甲 | ${item.armourclass}, 物理抗性 | ${item.physicaldefense}, 魔力抗性:${item.magicdefense}
`;
      message += `——————————
`;
    });
    message += "技能：\n";
    store.skill.forEach((item) => {
      let types;
      if (item.types === 1) {
        types = "斗气";
      } else if (item.types === 2) {
        types = "魔力";
      } else if (item.types === 3) {
        types = "治疗";
      } else if (item.types === 4) {
        types = "复活";
      } else {
        types = "暂无";
      }
      let itemPrice = Math.round(item.price * price);
      message += `${item.id} | ${item.name} - ${itemPrice}硬币
类型 | ${types}, 伤害 | ${item.harm}, 消耗 | ${item.consumptionofmagic}
`;
      message += `——————————
`;
    });
    return message;
  });
  axlmlyrpgs.subcommand("shop <id:number>", "购买商店列表里的武器/盔甲/技能").alias("购买").option("w", "-w 购买武器").option("a", "-a 购买盔甲").option("s", "-s 购买技能").example("购买 -w/-a/-s id").action(async ({ session, options }, id) => {
    if (!id) {
      return "请不要什么都不输入";
    }
    if (isNaN(Number(id))) {
      return "请输入有效的物品ID";
    }
    await rpgdata.userdata(session, ctx);
    const getdatarpg = new Rpgdata(ctx, config);
    const store = getdatarpg.getShopList();
    const userId = String(session.userId);
    const userAttach = (await ctx.database.get("role_playing_game_attach", { id: userId }))[0];
    const getcoins = (await ctx.database.get("role_playing_game", { id: userId }))[0]?.coins;
    let kudos = (await ctx.database.get("role_playing_game", { id: String(session.userId) }))[0]?.kudos;
    let price;
    if (kudos < -50) {
      price = 2;
    } else if (kudos < 0) {
      price = 1.5;
    } else if (kudos >= 0 && kudos <= 10) {
      price = 1;
    } else if (kudos < 10) {
      price = 0.95;
    } else if (kudos < 50) {
      price = 0.9;
    } else if (kudos < 100) {
      price = 0.85;
    } else if (kudos < 150) {
      price = 0.8;
    } else if (kudos < 300) {
      price = 0.75;
    } else if (kudos < 600) {
      price = 0.7;
    } else if (kudos < 1200) {
      price = 0.65;
    } else if (kudos < 1800) {
      price = 0.6;
    } else if (kudos < 2400) {
      price = 0.55;
    } else {
      price = 0.5;
    }
    const purchaseItem = /* @__PURE__ */ __name(async (itemType, inventory, storeItems, itembarKey, itemKey) => {
      const item = storeItems.find((i) => Number(i.id) === Number(id));
      let itemExists = false;
      for (let invItem of inventory) {
        if (Number(invItem) === id) {
          itemExists = true;
          break;
        }
      }
      if (item) {
        if (itemExists) {
          return `背包里已经有了这个${itemType}`;
        } else {
          let itemPrice = Math.round(item.price * price);
          if (getcoins >= itemPrice) {
            await ctx.database.upsert("role_playing_game_attach", [{
              id: userId,
              [itembarKey]: [...inventory, id]
            }]);
            await ctx.database.upsert("role_playing_game", [{
              id: userId,
              coins: getcoins - itemPrice
            }]);
            return `${session.username}成功购买${item.name}`;
          } else {
            return "硬币不足，请攒攒再来吧";
          }
        }
      } else {
        return `商店里没有这个${itemType}，请检查ID`;
      }
    }, "purchaseItem");
    if (options.w) {
      const itembar = userAttach.itembar || [];
      return purchaseItem("武器", itembar, store.arsenals, "itembar", "arsenal");
    } else if (options.a) {
      const armourbar = userAttach.armourbar || [];
      return purchaseItem("盔甲", armourbar, store.armour, "armourbar", "armour");
    } else if (options.s) {
      const skillbar = userAttach.skillbar || [];
      return purchaseItem("技能", skillbar, store.skill, "skillbar", "skill");
    } else {
      return "请提供有效的选项（-w 购买武器，-a 购买盔甲，-s 购买技能）";
    }
  });
  axlmlyrpgs.subcommand("increasepnpttributepoints <id:number>", "增加属性点").alias("加点").option("a", "-a  力量").option("s", "-s  体质").option("d", "-d  敏捷").option("i", "-i  智力").option("w", "-w  灵性直觉").option("l", "-l  幸运").option("f", "-f  信仰").option("b", "-b  耐力").example("加点 -a <id:number>").action(async ({ session, options }, id) => {
    if (!id) {
      return `选项 -a+id(力量)/-s+id(体质)/-d+id(敏捷)/-i+id(智力)/-w+id(灵性直觉)/-l+id(幸运)/-f+id(信仰)/-b+id(耐力)`;
    }
    if (isNaN(id) || id <= 0) {
      return "请输入有效的属性点数值";
    }
    const getAttribute = /* @__PURE__ */ __name(async (attribute) => {
      return (await ctx.database.get("role_playing_game", { id: String(session.userId) }))[0]?.[attribute];
    }, "getAttribute");
    const updateAttribute = /* @__PURE__ */ __name(async (attribute, value) => {
      await ctx.database.upsert("role_playing_game", [{
        id: String(session.userId),
        [attribute]: value
      }]);
      await ctx.database.upsert("role_playing_game_attach", [{
        id: String(session.userId),
        skillpoint: skillpoint - id
      }]);
    }, "updateAttribute");
    const skillpoint = (await ctx.database.get("role_playing_game_attach", { id: String(session.userId) }))[0]?.skillpoint;
    if (config.logger) {
      logger2.info(`当前技能点有${skillpoint},输入值${id}`);
    }
    const optionsMap = {
      a: { attribute: "attack", name: "力量" },
      s: { attribute: "sturdypoint", name: "体质" },
      d: { attribute: "dexterity", name: "敏捷" },
      i: { attribute: "intelligence", name: "智力" },
      w: { attribute: "spiritualintuition", name: "灵性直觉" },
      l: { attribute: "luckyvalue", name: "幸运" },
      f: { attribute: "faith", name: "信仰" },
      b: { attribute: "stamina", name: "耐力" }
    };
    for (const [key, { attribute, name: name2 }] of Object.entries(optionsMap)) {
      if (options[key]) {
        if (skillpoint >= id) {
          const currentValue = await getAttribute(attribute);
          await updateAttribute(attribute, currentValue + id);
          return `叮~使用属性点${id}, ${name2}加 ${id}`;
        } else {
          return `属性点不足`;
        }
      }
    }
    return `请详细阅读或询问该如何加点`;
  });
  axlmlyrpgs.subcommand("battlestate", "战斗状态").alias("战斗状态").option("a", "-a 决斗状态").option("s", "-s 止战状态").usage(`-a是决斗状态,决斗状态的意思是可以被决斗，-s是止战状态,止战状态是别人不能决斗你,你也不能决斗别人,当前切换时间为 | ${config.statuscd}分钟,脱离战斗状态cd为 | ${config.battlestatecd}`).example("战斗状态 -a").action(async ({ session, options }) => {
    let time = import_koishi2.Time.template("yyyy-MM-dd hh:mm:ss", /* @__PURE__ */ new Date());
    let getnewtime = rpgdata.dateToTimestamp(time);
    let statuscd = (await ctx.database.get("role_playing_game_cd", { id: String(session.userId) }))[0]?.statuscd;
    let duelscd = (await ctx.database.get("role_playing_game_cd", { id: String(session.userId) }))[0]?.duelscd;
    if (getnewtime - duelscd <= cooldownTime3) {
      return `还处于决斗状态`;
    }
    if (getnewtime - statuscd <= cooldownTime2) {
      return `切换冷却中`;
    } else {
      await ctx.database.upsert("role_playing_game_cd", [{
        id: String(session.userId),
        statuscd: getnewtime
      }]);
    }
    if (options.a) {
      await ctx.database.upsert("role_playing_game_cd", [{
        id: String(session.userId),
        status: 0
      }]);
      return;
    }
    if (options.s) {
      await ctx.database.upsert("role_playing_game_cd", [{
        id: String(session.userId),
        status: 1
      }]);
      return;
    }
  });
  axlmlyrpgs.subcommand("reset", "重置属性/种族/信仰").alias("重置").option("p", "-p 重置属性").option("r", "-r 重置种族").option("f", "-f 重置信仰").usage(`重置花费${config.resetproperties}硬币,且过程不可逆`).example("重置 -p").action(async ({ session, options }) => {
    const resetproperties = (await ctx.database.get("role_playing_game_attach", { id: String(session.userId) }))[0]?.resetproperties;
    const getcoins = (await ctx.database.get("role_playing_game", { id: String(session.userId) }))[0]?.coins;
    const level = (await ctx.database.get("role_playing_game", { id: String(session.userId) }))[0]?.level;
    const getdatarpg = new Rpgdata(ctx, config);
    const total = config.resetpropertiestotal;
    const n = 9;
    const minValue = config.resetpropertiesminValue <= config.resetpropertiesmaxValue ? config.resetpropertiesminValue : 10;
    const maxValue = config.resetpropertiesmaxValue >= config.resetpropertiesmaxValue ? config.resetpropertiesmaxValue : 38;
    const distributedValues = getdatarpg.distributeValues(total, n, minValue, maxValue);
    const randomSturdypoint = distributedValues[0];
    const randomStamina = distributedValues[1];
    const randomDexterity = distributedValues[2];
    const randomSpiritualintuition = distributedValues[3];
    const randomLuckyvalue = distributedValues[4];
    const randomIntelligence = distributedValues[5];
    const randomFaith = distributedValues[6];
    const randomAttack = distributedValues[7];
    const randomArmourclass = distributedValues[8];
    const randomFaiths = import_koishi2.Random.pick(godJson);
    const randomRacist = import_koishi2.Random.pick(raceJson);
    if (options.p) {
      if (resetproperties <= 0) {
        if (getcoins < config.resetproperties) {
          return `硬币不足`;
        }
        if (getcoins > config.resetproperties) {
          await ctx.database.upsert("role_playing_game", [{
            id: String(session.userId),
            sturdypoint: Number(randomSturdypoint),
            //体质
            stamina: Number(randomStamina),
            //耐力
            dexterity: Number(randomDexterity),
            //敏捷
            spiritualintuition: Number(randomSpiritualintuition),
            //灵性直觉
            luckyvalue: Number(randomLuckyvalue),
            //幸运值
            intelligence: Number(randomIntelligence),
            //智力
            faith: Number(randomFaith),
            //信仰
            attack: Number(randomAttack),
            //力量
            armourclass: Number(randomArmourclass),
            //护甲值
            coins: getcoins - config.resetproperties
            //硬币
          }]);
          await ctx.database.upsert("role_playing_game_attach", [{
            id: String(session.userId),
            skillpoint: level * 5
          }]);
          return `重置成功`;
        }
      } else {
        await ctx.database.upsert("role_playing_game", [{
          id: String(session.userId),
          sturdypoint: Number(randomSturdypoint),
          //体质
          stamina: Number(randomStamina),
          //耐力
          dexterity: Number(randomDexterity),
          //敏捷
          spiritualintuition: Number(randomSpiritualintuition),
          //灵性直觉
          luckyvalue: Number(randomLuckyvalue),
          //幸运值
          intelligence: Number(randomIntelligence),
          //智力
          faith: Number(randomFaith),
          //信仰
          attack: Number(randomAttack),
          //力量
          armourclass: Number(randomArmourclass)
          //护甲值
        }]);
        await ctx.database.upsert("role_playing_game_attach", [{
          id: String(session.userId),
          skillpoint: level * 5,
          resetproperties: resetproperties - 1
        }]);
        return `重置成功`;
      }
    } else if (options.r) {
      if (getcoins < config.resetproperties) {
        return `硬币不足`;
      }
      await ctx.database.upsert("role_playing_game_attach", [{
        id: String(session.userId),
        racist: Number(randomRacist.id)
      }]);
      await ctx.database.upsert("role_playing_game", [{
        id: String(session.userId),
        coins: getcoins - config.resetproperties
        //硬币
      }]);
      return `重置成功`;
    } else if (options.f) {
      if (getcoins < config.resetproperties) {
        return `硬币不足`;
      }
      await ctx.database.upsert("role_playing_game_attach", [{
        id: String(session.userId),
        faith: Number(randomFaiths.id)
        //信仰
      }]);
      await ctx.database.upsert("role_playing_game", [{
        id: String(session.userId),
        coins: getcoins - config.resetproperties
        //硬币
      }]);
      return `重置成功`;
    }
  });
  axlmlyrpgs.subcommand("skill <id:number>", "使用技能").alias("技能").option("t", "-t 治疗被回复的冒险者").option("r", "-r 使被回复的冒险者复活").usage(`注意:治疗费用只有魔力值.复活的费用却有1/2MP、1/5HP、60硬币.当前冷却时间为 | ${config.skillcd}分钟`).action(async ({ session, options }, id) => {
    if (!session.quote) {
      return;
    }
    if (!id) {
      return `选项 -t+id(治疗)/-r+id(复活)`;
    }
    if (isNaN(id) || id <= 0) {
      return "请输入有效的技能ID";
    }
    let time = import_koishi2.Time.template("yyyy-MM-dd hh:mm:ss", /* @__PURE__ */ new Date());
    let getnewtime = rpgdata.dateToTimestamp(time);
    const userId = String(session.userId);
    const usercd = (await ctx.database.get("role_playing_game_cd", { id: userId }))[0];
    if (getnewtime - usercd.skillcd <= cooldownTime4) {
      return `请等待施法冷却`;
    }
    if (usercd.status === 1) {
      return `处于止战状态无法使用技能`;
    }
    await rpgdata.userdata(session, ctx);
    const getdatarpg = new Rpgdata(ctx, config);
    let name2 = session.quote.member.nick;
    if (name2.length <= 0) {
      name2 = session.quote.user.name;
    }
    let target = (await ctx.database.get("role_playing_game", { id: String(session.quote.member.user.id) }))[0];
    let status1 = target?.status;
    let healthpoint1 = target?.healthpoint;
    let magicdefense = target?.magicdefense;
    const user = (await ctx.database.get("role_playing_game", { id: userId }))[0];
    const userAttach = (await ctx.database.get("role_playing_game_attach", { id: userId }))[0];
    let { magicpoint, magicpointEnd, healthpoint, healthpointEnd, coins, intelligence, faith, luckyvalue, kudos } = user;
    let { skillbar, primaryweapon } = userAttach;
    const getskill = getdatarpg.getSkillId(Number(id));
    const weapon = getdatarpg.getArsenalId(Number(primaryweapon));
    let maxCriticalHit = Math.round(100 - luckyvalue / 50);
    if (maxCriticalHit > 50) {
      maxCriticalHit = 50;
    }
    let calculateCriticalHitRandom = import_koishi2.Random.int(1, maxCriticalHit);
    let cost1 = Math.round(getskill.consumptionofmagic + magicpointEnd * 0.5);
    let hpCost = Math.round(healthpointEnd * 0.2);
    const treatment1 = Math.round(0.7 * intelligence + 2 * faith + getskill.harm);
    const treatment2 = treatment1 * 2;
    let hurtCriticalHitRandom = Math.round(import_koishi2.Random.int(treatment1, treatment2 + 0.7 * luckyvalue));
    if (hurtCriticalHitRandom > treatment2) {
      hurtCriticalHitRandom = treatment2;
    }
    let calculateTheTreatment = Math.round(hurtCriticalHitRandom * (1 - target.magicdefense / 100) * (weapon.magicrelease / 100));
    let calculateCriticaTheTreatment = Math.round((hurtCriticalHitRandom * (1 - target.magicdefense / 100) + 0.5 * calculateTheTreatment) * (weapon.magicrelease / 100));
    const skillExists = skillbar.some((item) => Number(item) === id);
    const optionsMap = {
      t: { name: "治疗", hurt: calculateCriticalHitRandom < config.criticalhit ? calculateCriticaTheTreatment : calculateTheTreatment, cost: getskill.consumptionofmagic, types: getskill.types, coins: 0, healthpoint: 0, exists: skillExists, skillinfo: getskill.skillinfo, attckinfo: getskill.attckinfo, endinfo: getskill.endinfo },
      r: { name: "复活", hurt: calculateCriticalHitRandom < config.criticalhit ? calculateCriticaTheTreatment : calculateTheTreatment, cost: cost1, types: getskill.types, coins: 60, healthpoint: hpCost, exists: skillExists, skillinfo: getskill.skillinfo, attckinfo: getskill.attckinfo, endinfo: getskill.endinfo }
    };
    if (options.t) {
      const option = optionsMap.t;
      if (!option.exists) {
        return `你没有ID为${id}的技能`;
      }
      if (option.types !== 3) {
        return;
      }
      if (status1 === 0) {
        return `复活赛功能暂时未开放`;
      }
      if (target.healthpointEnd === healthpoint1) {
        return `目标HP已满`;
      }
      if (magicpoint < option.cost) {
        return `你的MP不足以使用${option.name}`;
      }
      if (healthpoint1 === null || healthpoint1 === void 0) {
        return `无法找到目标角色的信息`;
      }
      let treatmentEnd = Math.round(option.hurt * (1 - magicdefense / 100));
      magicpoint -= option.cost;
      healthpoint1 += treatmentEnd;
      kudos += 3;
      if (healthpoint1 > target.healthpointEnd) {
        healthpoint1 = target.healthpointEnd;
      }
      await ctx.database.set("role_playing_game", { id: String(session.quote.member.user.id) }, { healthpoint: healthpoint1 });
      if (session.quote.user.id === session.userId) {
        await ctx.database.set("role_playing_game", { id: userId }, { magicpoint });
      } else {
        await ctx.database.set("role_playing_game", { id: userId }, { magicpoint, kudos });
      }
      await ctx.database.set("role_playing_game_cd", { id: userId }, { skillcd: getnewtime });
      if (session.quote.user.id === session.userId) {
        return `${session.username}对自己使用了${option.name},${option.skillinfo}${option.attckinfo}${option.endinfo},恢复了${treatmentEnd}点HP。`;
      } else {
        return `${session.username}对${name2}使用了${option.name},${option.skillinfo}${option.attckinfo}${option.endinfo},恢复了${treatmentEnd}点HP。`;
      }
    }
    if (options.r) {
      const option = optionsMap.r;
      if (!option.exists) {
        return `你没有ID为${id}的技能`;
      }
      if (status1 === 1) {
        return;
      }
      if (option.types !== 4) {
        return;
      }
      if (option.healthpoint > healthpoint) {
        return `你的HP不足以使用${option.name}`;
      }
      if (magicpoint < option.cost) {
        return `你的MP不足以使用${option.name}`;
      }
      if (coins < option.coins) {
        return `你的硬币不足以使用${option.name}`;
      }
      let treatmentEnd = Math.round(option.hurt * (1 - magicdefense / 100));
      magicpoint -= option.cost;
      coins -= option.coins;
      healthpoint1 = treatmentEnd;
      healthpoint -= option.healthpoint;
      status1 = 1;
      kudos += 10;
      if (healthpoint1 > target.healthpointEnd) {
        healthpoint1 = target.healthpointEnd;
      }
      await ctx.database.set("role_playing_game", { id: String(session.quote.member.user.id) }, { healthpoint: healthpoint1, status: status1 });
      await ctx.database.set("role_playing_game", { id: userId }, { magicpoint, coins, healthpoint, kudos });
      await ctx.database.set("role_playing_game_cd", { id: userId }, { skillcd: getnewtime });
      return `${session.username}对${name2}使用了${option.name},${option.skillinfo}${option.attckinfo}${option.endinfo},${name2}复活并恢复了${treatmentEnd}点HP。`;
    }
  });
}
__name(apply, "apply");
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Config,
  apply,
  axlmlyrpg,
  inject,
  name,
  usage
});
