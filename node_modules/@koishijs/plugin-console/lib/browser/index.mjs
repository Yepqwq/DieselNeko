var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });

// src/browser/index.ts
import { makeArray, Schema } from "koishi";
import { Console } from "@koishijs/console";
export * from "@koishijs/console";
var BrowserConsole = class extends Console {
  static {
    __name(this, "BrowserConsole");
  }
  start() {
    this.accept(this.ctx.loader[Symbol.for("koishi.socket")]);
  }
  resolveEntry(files) {
    if (typeof files === "string" || Array.isArray(files))
      return makeArray(files);
    return makeArray(files.prod);
  }
};
((BrowserConsole2) => {
  BrowserConsole2.Config = Schema.object({});
})(BrowserConsole || (BrowserConsole = {}));
var browser_default = BrowserConsole;
export {
  browser_default as default
};
//# sourceMappingURL=index.mjs.map
