{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import { Awaitable, Context, h, Service } from 'koishi'\n\ndeclare module 'koishi' {\n  interface Context {\n    canvas: CanvasService\n  }\n}\n\nexport interface CanvasRenderingContext2D<\n  C extends Canvas = Canvas,\n  I extends Image = Image,\n> extends Omit<globalThis.CanvasRenderingContext2D, 'drawImage' | 'canvas'> {\n  canvas: C\n  drawImage(image: C | I, dx: number, dy: number): void\n  drawImage(image: C | I, dx: number, dy: number, dw: number, dh: number): void\n  drawImage(image: C | I, sx: number, sy: number, sw: number, sh: number, dx: number, dy: number, dw: number, dh: number): void\n}\n\nexport interface Canvas {\n  width: number\n  height: number\n  getContext(type: '2d'): CanvasRenderingContext2D\n  toBuffer(type: 'image/png'): Promise<Buffer>\n  toDataURL(type: 'image/png'): Promise<string>\n  dispose(): Promise<void>\n}\n\nexport interface Image {\n  // src: Buffer\n  // alt: string\n  // width: number\n  // height: number\n  readonly naturalWidth: number\n  readonly naturalHeight: number\n  // readonly complete: boolean\n  // onload?(): void\n  // onerror?(err: Error): void\n  dispose(): Promise<void>\n}\n\nabstract class CanvasService extends Service {\n  constructor(ctx: Context) {\n    super(ctx, 'canvas')\n  }\n\n  abstract createCanvas(width: number, height: number): Promise<Canvas>\n  abstract loadImage(source: string | URL | Buffer | ArrayBufferLike): Promise<Image>\n\n  async render(width: number, height: number, callback: (ctx: CanvasRenderingContext2D) => Awaitable<void>) {\n    const canvas = await this.createCanvas(width, height)\n    try {\n      await callback(canvas.getContext('2d'))\n      const buffer = await canvas.toBuffer('image/png')\n      return h.image(buffer, 'image/png')\n    } finally {\n      await canvas.dispose()\n    }\n  }\n}\n\nexport default CanvasService\n"],
  "mappings": ";;;;AAAA,SAA6B,GAAG,eAAe;AAwC/C,IAAe,gBAAf,cAAqC,QAAQ;AAAA,EAxC7C,OAwC6C;AAAA;AAAA;AAAA,EAC3C,YAAY,KAAc;AACxB,UAAM,KAAK,QAAQ;AAAA,EACrB;AAAA,EAKA,MAAM,OAAO,OAAe,QAAgB,UAA8D;AACxG,UAAM,SAAS,MAAM,KAAK,aAAa,OAAO,MAAM;AACpD,QAAI;AACF,YAAM,SAAS,OAAO,WAAW,IAAI,CAAC;AACtC,YAAM,SAAS,MAAM,OAAO,SAAS,WAAW;AAChD,aAAO,EAAE,MAAM,QAAQ,WAAW;AAAA,IACpC,UAAE;AACA,YAAM,OAAO,QAAQ;AAAA,IACvB;AAAA,EACF;AACF;AAEA,IAAO,cAAQ;",
  "names": []
}
