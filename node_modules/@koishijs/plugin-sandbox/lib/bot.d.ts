import { Client } from '@koishijs/console';
import { Bot, Context, Universal } from 'koishi';
import { SandboxMessenger } from './message';
export declare namespace SandboxBot {
    interface Config {
        selfId: string;
        platform: string;
    }
}
export declare class SandboxBot<C extends Context = Context> extends Bot<C, SandboxBot.Config> {
    static MessageEncoder: typeof SandboxMessenger;
    hidden: boolean;
    internal: {};
    clients: Set<Client>;
    constructor(ctx: C, config: SandboxBot.Config);
    request<T = any>(method: string, data?: {}): Promise<T>;
    createDirectChannel(userId: string): Promise<Universal.Channel>;
    deleteMessage(channelId: string, messageId: string): Promise<any>;
    getMessage(channelId: string, messageId: string): Promise<any>;
    getChannel(channelId: string, guildId?: string): Promise<any>;
    getChannelList(guildId: string): Promise<any>;
    getGuild(guildId: string): Promise<any>;
    getGuildList(): Promise<any>;
    getGuildMember(guildId: string, userId: string): Promise<any>;
    getGuildMemberList(guildId: string): Promise<any>;
}
export declare const words: string[];
