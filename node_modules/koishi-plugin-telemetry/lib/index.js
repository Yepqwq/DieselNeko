"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.inject = exports.filter = exports.name = void 0;
exports.apply = apply;
const plugins_1 = require("./plugins");
__exportStar(require("./types"), exports);
exports.name = 'telemetry';
exports.filter = false;
exports.inject = {
    optional: ['notifier'],
};
function apply(ctx, config) {
    if (config.mode === 'off')
        return;
    const update = (configModifier) => {
        const newConfig = configModifier(structuredClone(config));
        ctx.scope.update(newConfig, true);
    };
    ctx.plugin(plugins_1.TelemetryBasis, {
        config,
        update,
    });
}
