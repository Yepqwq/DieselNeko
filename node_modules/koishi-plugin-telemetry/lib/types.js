"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TypedEventEmitter = exports.Config = void 0;
const koishi_1 = require("koishi");
const node_events_1 = __importDefault(require("node:events"));
exports.Config = koishi_1.Schema.intersect([
    koishi_1.Schema.object({
        mode: koishi_1.Schema.union([
            koishi_1.Schema.const('off').description('关闭：telemetry 服务完全关闭。'),
            koishi_1.Schema.const('readonly').description('只读：仅获取安全警报和重大事项提醒等信息，而不从本机上传任何信息。'),
            koishi_1.Schema.const('on').description('开启：telemetry 服务开启。'),
        ])
            .default('on')
            .description('telemetry 服务的工作模式。')
            .role('radio'),
    }),
]);
// eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-unsafe-declaration-merging
class TypedEventEmitter extends node_events_1.default {
}
exports.TypedEventEmitter = TypedEventEmitter;
