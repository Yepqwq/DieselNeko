"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TelemetrySession = void 0;
class TelemetrySession {
    ctx;
    id;
    constructor(ctx, id) {
        this.ctx = ctx;
        this.id = id;
        this.#l = ctx.logger('telemetry/session');
        this.storage = id.storage;
        this.basis = this.storage.basis;
        this.post = this.basis.post;
        void this.#init();
    }
    #l;
    storage;
    basis;
    post;
    #init = async () => {
        try {
            // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion
            const result = (await this.post('/session', {
                instanceId: this.storage.data.instanceId,
            }));
            if (!result.sessionId) {
                this.id.setFailed();
                return;
            }
            this.id.setSessionId(result.sessionId);
        }
        catch (e) {
            this.#l.debug('session failed');
            this.id.setFailed();
            return;
        }
        // eslint-disable-next-line @typescript-eslint/no-misused-promises
        this.ctx.setInterval(() => {
            void this.post('/alive', {
                sessionId: this.id.sessionId,
            }).catch(() => this.#l.debug('alive failed'));
        }, 30 * 60 * 1000);
    };
}
exports.TelemetrySession = TelemetrySession;
