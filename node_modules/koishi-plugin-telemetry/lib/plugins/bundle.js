"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TelemetryBundle = void 0;
const koishi_1 = require("koishi");
const instance_1 = require("./instance");
class TelemetryBundle {
    ctx;
    id;
    constructor(ctx, id) {
        this.ctx = ctx;
        this.id = id;
        this.#l = ctx.logger('telemetry/bundle');
        this.storage = id.storage;
        this.basis = this.storage.basis;
        this.post = this.basis.post;
        void this.init();
    }
    #l;
    storage;
    basis;
    post;
    init = async () => {
        if (this.storage.data.bundleId) {
            this.id.setBundleId(this.storage.data.bundleId);
            this.ctx.plugin(instance_1.TelemetryInstance, this.id);
            return;
        }
        try {
            // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion
            const result = (await this.post('/bundle', {
                coreMachineId: this.id.cmid,
                machineEnv: this.id.menv,
                machineId: this.id.mid,
            }));
            if (!result.bundleId) {
                this.id.setFailed();
                return;
            }
            this.id.setBundleId(result.bundleId);
            await this.storage.saveBundleId(result.bundleId);
        }
        catch (e) {
            this.#l.debug('bundle failed');
            this.id.setFailed();
            return;
        }
        await (0, koishi_1.sleep)(5000);
        this.ctx.plugin(instance_1.TelemetryInstance, this.id);
    };
}
exports.TelemetryBundle = TelemetryBundle;
